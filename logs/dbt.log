[0m20:20:12.217617 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.fct_sale"} */

  
  create view "trial"."main"."fct_sale__dbt_tmp" as (
    
WITH
customer_total_spend AS (
    SELECT
        scust.customerId,
        scust.customerName,
        scust.regionName,
        SUM(transactions.finalPrice) AS totalSpend
    FROM
        "trial"."main"."dim_customer" scust
    JOIN
        "trial"."main"."dim_transaction" transactions ON scust.customerId = transactions.customerId
    WHERE scust.dbt_valid_to > NOW() 
    GROUP BY
        scust.customerId,
        scust.customerName,
        scust.regionName
)

SELECT * FROM customer_total_spend
  );

[0m20:20:12.220412 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:20:12.223198 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:20:12.223678 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.fct_sale"} */
alter view "trial"."main"."fct_sale__dbt_tmp" rename to "fct_sale"
[0m20:20:12.224678 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:20:12.225825 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: COMMIT
[0m20:20:12.226102 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:20:12.226319 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: COMMIT
[0m20:20:12.232346 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m20:20:12.235200 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:20:12.235595 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.fct_sale"} */
drop view if exists "trial"."main"."fct_sale__dbt_backup" cascade
[0m20:20:12.236407 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:20:12.237824 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: Close
[0m20:20:12.247128 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a67676cf-a6db-4ee5-9aa8-8678a4bfcfac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6abc6bfa10>]}
[0m20:20:12.247902 [info ] [Thread-1 (]: 8 of 8 OK created sql view model main.fct_sale ................................. [[32mOK[0m in 0.05s]
[0m20:20:12.248797 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.fct_sale
[0m20:20:12.250922 [debug] [MainThread]: Using duckdb connection "master"
[0m20:20:12.251239 [debug] [MainThread]: On master: BEGIN
[0m20:20:12.251446 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:20:12.258259 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:20:12.258629 [debug] [MainThread]: On master: COMMIT
[0m20:20:12.258896 [debug] [MainThread]: Using duckdb connection "master"
[0m20:20:12.259092 [debug] [MainThread]: On master: COMMIT
[0m20:20:12.259666 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:20:12.259935 [debug] [MainThread]: On master: Close
[0m20:20:12.263049 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:20:12.263378 [debug] [MainThread]: Connection 'list_trial_snapshots' was properly closed.
[0m20:20:12.263592 [debug] [MainThread]: Connection 'model.dbt_duckdb_test.fct_sale' was properly closed.
[0m20:20:12.263876 [info ] [MainThread]: 
[0m20:20:12.264512 [info ] [MainThread]: Finished running 1 table model, 7 view models in 0 hours 0 minutes and 0.77 seconds (0.77s).
[0m20:20:12.265816 [debug] [MainThread]: Command end result
[0m20:20:12.285640 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:20:12.287360 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:20:12.292565 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:20:12.292834 [info ] [MainThread]: 
[0m20:20:12.293334 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:20:12.293695 [info ] [MainThread]: 
[0m20:20:12.294066 [info ] [MainThread]: Done. PASS=8 WARN=0 ERROR=0 SKIP=0 TOTAL=8
[0m20:20:12.297177 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 2.0312662, "process_in_blocks": "151656", "process_kernel_time": 0.296605, "process_mem_max_rss": "168620", "process_out_blocks": "8584", "process_user_time": 2.797978}
[0m20:20:12.297745 [debug] [MainThread]: Command `dbt run` succeeded at 20:20:12.297651 after 2.03 seconds
[0m20:20:12.298214 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6ac9f06750>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6ac7858350>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6ac9fa9010>]}
[0m20:20:12.298703 [debug] [MainThread]: Flushing usage events
[0m20:20:15.075899 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:26:00.338088 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd116915850>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd116915790>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd116915550>]}


============================== 20:26:00.342310 | c57c2d91-71be-4745-a632-34297eec62c8 ==============================
[0m20:26:00.342310 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:26:00.343158 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'fail_fast': 'False', 'profiles_dir': '/home/rani/.dbt', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'version_check': 'True', 'debug': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'invocation_command': 'dbt run', 'log_format': 'default', 'introspect': 'True', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m20:26:00.641381 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'c57c2d91-71be-4745-a632-34297eec62c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1167b5090>]}
[0m20:26:00.697134 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'c57c2d91-71be-4745-a632-34297eec62c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd118b5b210>]}
[0m20:26:00.700037 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:26:00.783090 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:26:00.965751 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m20:26:00.966443 [debug] [MainThread]: Partial parsing: updated file: dbt_duckdb_test://models/dimensions/dim_transaction.sql
[0m20:26:01.388630 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:26:01.404302 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'c57c2d91-71be-4745-a632-34297eec62c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd10c183850>]}
[0m20:26:01.497226 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:26:01.499853 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:26:01.525201 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'c57c2d91-71be-4745-a632-34297eec62c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd107e27f50>]}
[0m20:26:01.526333 [info ] [MainThread]: Found 8 models, 20 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:26:01.526883 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'c57c2d91-71be-4745-a632-34297eec62c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd10cdd0790>]}
[0m20:26:01.530081 [info ] [MainThread]: 
[0m20:26:01.530708 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:26:01.531341 [info ] [MainThread]: 
[0m20:26:01.531999 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:26:01.538878 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:26:01.579043 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:26:01.579404 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:26:01.579632 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:26:01.602445 [debug] [ThreadPool]: SQL status: OK in 0.023 seconds
[0m20:26:01.603868 [debug] [ThreadPool]: On list_trial: Close
[0m20:26:01.606874 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_main)
[0m20:26:01.607317 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "main"
"
[0m20:26:01.613889 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:26:01.614303 [debug] [ThreadPool]: On create_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_main"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:26:01.614545 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:26:01.622328 [debug] [ThreadPool]: SQL status: OK in 0.008 seconds
[0m20:26:01.623884 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:26:01.624297 [debug] [ThreadPool]: On create_trial_main: BEGIN
[0m20:26:01.625136 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:26:01.625423 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:26:01.625643 [debug] [ThreadPool]: On create_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_main"} */

    
    
        create schema if not exists "trial"."main"
    
[0m20:26:01.626835 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:26:01.627686 [debug] [ThreadPool]: On create_trial_main: COMMIT
[0m20:26:01.627949 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:26:01.628169 [debug] [ThreadPool]: On create_trial_main: COMMIT
[0m20:26:01.628693 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:26:01.628961 [debug] [ThreadPool]: On create_trial_main: Close
[0m20:26:01.632062 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_main, now list_trial_main)
[0m20:26:01.637484 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:26:01.638000 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:26:01.638234 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:26:01.645211 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:26:01.645552 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:26:01.645803 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:26:01.671306 [debug] [ThreadPool]: SQL status: OK in 0.025 seconds
[0m20:26:01.673261 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:26:01.674861 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:26:01.675349 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:26:01.678253 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_main, now list_trial_snapshots)
[0m20:26:01.681272 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:26:01.681570 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:26:01.681776 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:26:01.688272 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:26:01.688615 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:26:01.688860 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:26:01.710552 [debug] [ThreadPool]: SQL status: OK in 0.021 seconds
[0m20:26:01.712825 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:26:01.713572 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:26:01.714003 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:26:01.718760 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'c57c2d91-71be-4745-a632-34297eec62c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd10c080090>]}
[0m20:26:01.719487 [debug] [MainThread]: Using duckdb connection "master"
[0m20:26:01.719797 [debug] [MainThread]: On master: BEGIN
[0m20:26:01.720011 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:26:01.726788 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:26:01.727140 [debug] [MainThread]: On master: COMMIT
[0m20:26:01.727624 [debug] [MainThread]: Using duckdb connection "master"
[0m20:26:01.728036 [debug] [MainThread]: On master: COMMIT
[0m20:26:01.728601 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:26:01.728871 [debug] [MainThread]: On master: Close
[0m20:26:01.732147 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.my_first_dbt_model
[0m20:26:01.732621 [info ] [Thread-1 (]: 1 of 8 START sql table model main.my_first_dbt_model ........................... [RUN]
[0m20:26:01.733250 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.dbt_duckdb_test.my_first_dbt_model'
[0m20:26:01.733804 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.my_first_dbt_model
[0m20:26:01.742347 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:26:01.744449 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.my_first_dbt_model
[0m20:26:01.830828 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:26:01.831701 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:26:01.832496 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: BEGIN
[0m20:26:01.832890 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:26:01.841964 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:26:01.842672 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:26:01.843251 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */

  
    
    

    create  table
      "trial"."main"."my_first_dbt_model__dbt_tmp"
  
    as (
      /*
    Welcome to your first dbt model!
    Did you know that you can also configure models directly within SQL files?
    This will override configurations stated in dbt_project.yml

    Try changing "table" to "view" below
*/



with source_data as (

    select 1 as id
    union all
    select null as id

)

select *
from source_data

/*
    Uncomment the line below to remove records with null `id` values
*/

-- where id is not null
    );
  
  
[0m20:26:01.845786 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:26:01.851567 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:26:01.851895 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
alter table "trial"."main"."my_first_dbt_model" rename to "my_first_dbt_model__dbt_backup"
[0m20:26:01.853068 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:26:01.855563 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:26:01.855847 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
alter table "trial"."main"."my_first_dbt_model__dbt_tmp" rename to "my_first_dbt_model"
[0m20:26:01.856600 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:26:01.870550 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: COMMIT
[0m20:26:01.870908 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:26:01.871256 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: COMMIT
[0m20:26:01.875649 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:26:01.880092 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:26:01.880416 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
drop table if exists "trial"."main"."my_first_dbt_model__dbt_backup" cascade
[0m20:26:01.884848 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:26:01.887097 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: Close
[0m20:26:01.901108 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c57c2d91-71be-4745-a632-34297eec62c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1073479d0>]}
[0m20:26:01.901831 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.my_first_dbt_model ...................... [[32mOK[0m in 0.17s]
[0m20:26:01.902488 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.my_first_dbt_model
[0m20:26:01.903086 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_customer
[0m20:26:01.903796 [info ] [Thread-1 (]: 2 of 8 START sql view model main.stg_customer .................................. [RUN]
[0m20:26:01.904815 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.my_first_dbt_model, now model.dbt_duckdb_test.stg_customer)
[0m20:26:01.905448 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_customer
[0m20:26:01.910451 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_customer"
[0m20:26:01.912880 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_customer
[0m20:26:01.932909 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_customer"
[0m20:26:01.933509 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:26:01.933792 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: BEGIN
[0m20:26:01.934492 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:26:01.943146 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:26:01.943554 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:26:01.943864 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */

  
  create view "trial"."main"."stg_customer__dbt_tmp" as (
    

SELECT 
    customerID,
    customerName,
    contactNumber,
    Email,
    loyaltyStatus,
    RegionName AS regionName,
    flagActive,
    dbt_scd_id,
    dbt_valid_from,
    CASE
        WHEN flagActive = TRUE THEN dbt_valid_to
        ELSE NOW()
    END AS dbt_valid_to,
    dbt_updated_at
FROM "trial"."snapshots"."snp_customer"
  );

[0m20:26:01.945663 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:26:01.948930 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:26:01.949248 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */
alter view "trial"."main"."stg_customer" rename to "stg_customer__dbt_backup"
[0m20:26:01.950011 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:26:01.952908 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:26:01.953277 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */
alter view "trial"."main"."stg_customer__dbt_tmp" rename to "stg_customer"
[0m20:26:01.954128 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:26:01.955381 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: COMMIT
[0m20:26:01.955675 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:26:01.955914 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: COMMIT
[0m20:26:01.959878 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:26:01.962200 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:26:01.962496 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */
drop view if exists "trial"."main"."stg_customer__dbt_backup" cascade
[0m20:26:01.966247 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:26:01.967531 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: Close
[0m20:26:01.979737 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c57c2d91-71be-4745-a632-34297eec62c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd10734f9d0>]}
[0m20:26:01.980511 [info ] [Thread-1 (]: 2 of 8 OK created sql view model main.stg_customer ............................. [[32mOK[0m in 0.07s]
[0m20:26:01.981410 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_customer
[0m20:26:01.982047 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_product
[0m20:26:01.982888 [info ] [Thread-1 (]: 3 of 8 START sql view model main.stg_product ................................... [RUN]
[0m20:26:01.983916 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_customer, now model.dbt_duckdb_test.stg_product)
[0m20:26:01.984638 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_product
[0m20:26:01.987880 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_product"
[0m20:26:01.989036 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_product
[0m20:26:01.994519 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_product"
[0m20:26:01.995099 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:26:01.995415 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: BEGIN
[0m20:26:01.995656 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:26:02.002676 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:26:02.003071 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:26:02.003341 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */

  
  create view "trial"."main"."stg_product__dbt_tmp" as (
    

SELECT 
    *
FROM "trial"."snapshots"."snp_product"
  );

[0m20:26:02.004159 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:26:02.008527 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:26:02.008867 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */
alter view "trial"."main"."stg_product" rename to "stg_product__dbt_backup"
[0m20:26:02.010038 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:26:02.013069 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:26:02.013372 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */
alter view "trial"."main"."stg_product__dbt_tmp" rename to "stg_product"
[0m20:26:02.014105 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:26:02.015427 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: COMMIT
[0m20:26:02.015710 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:26:02.015942 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: COMMIT
[0m20:26:02.019363 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:26:02.022183 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:26:02.022721 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */
drop view if exists "trial"."main"."stg_product__dbt_backup" cascade
[0m20:26:02.027303 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:26:02.028527 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: Close
[0m20:26:02.038352 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c57c2d91-71be-4745-a632-34297eec62c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd10cd5bcd0>]}
[0m20:26:02.039237 [info ] [Thread-1 (]: 3 of 8 OK created sql view model main.stg_product .............................. [[32mOK[0m in 0.05s]
[0m20:26:02.040165 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_product
[0m20:26:02.040829 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_transaction
[0m20:26:02.041630 [info ] [Thread-1 (]: 4 of 8 START sql view model main.stg_transaction ............................... [RUN]
[0m20:26:02.042362 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_product, now model.dbt_duckdb_test.stg_transaction)
[0m20:26:02.042964 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_transaction
[0m20:26:02.046110 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_transaction"
[0m20:26:02.046601 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_transaction
[0m20:26:02.049514 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_transaction"
[0m20:26:02.050065 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:26:02.050339 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: BEGIN
[0m20:26:02.050569 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:26:02.060341 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m20:26:02.060808 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:26:02.061556 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */

  
  create view "trial"."main"."stg_transaction__dbt_tmp" as (
    

SELECT 
    transactionId,
    customerId,
    productId,
    amount,
    transactionDate
FROM "trial"."snapshots"."snp_transaction"
  );

[0m20:26:02.062688 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:26:02.065301 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:26:02.065626 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */
alter view "trial"."main"."stg_transaction" rename to "stg_transaction__dbt_backup"
[0m20:26:02.066417 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:26:02.068858 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:26:02.069148 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */
alter view "trial"."main"."stg_transaction__dbt_tmp" rename to "stg_transaction"
[0m20:26:02.069942 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:26:02.071322 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: COMMIT
[0m20:26:02.072838 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:26:02.075256 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: COMMIT
[0m20:26:02.080174 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:26:02.082663 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:26:02.083144 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */
drop view if exists "trial"."main"."stg_transaction__dbt_backup" cascade
[0m20:26:02.086605 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:26:02.087764 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: Close
[0m20:26:02.097934 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c57c2d91-71be-4745-a632-34297eec62c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd10c1982d0>]}
[0m20:26:02.098740 [info ] [Thread-1 (]: 4 of 8 OK created sql view model main.stg_transaction .......................... [[32mOK[0m in 0.06s]
[0m20:26:02.099871 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_transaction
[0m20:26:02.100382 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.my_second_dbt_model
[0m20:26:02.101040 [info ] [Thread-1 (]: 5 of 8 START sql view model main.my_second_dbt_model ........................... [RUN]
[0m20:26:02.102420 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_transaction, now model.dbt_duckdb_test.my_second_dbt_model)
[0m20:26:02.102859 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.my_second_dbt_model
[0m20:26:02.105902 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:26:02.106435 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.my_second_dbt_model
[0m20:26:02.110769 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:26:02.111653 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:26:02.112085 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: BEGIN
[0m20:26:02.112355 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:26:02.119354 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:26:02.119761 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:26:02.120022 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */

  
  create view "trial"."main"."my_second_dbt_model__dbt_tmp" as (
    -- Use the `ref` function to select from other models

select *
from "trial"."main"."my_first_dbt_model"
where id = 1
  );

[0m20:26:02.120924 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:26:02.125902 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:26:02.126722 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */
alter view "trial"."main"."my_second_dbt_model" rename to "my_second_dbt_model__dbt_backup"
[0m20:26:02.127825 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:26:02.130276 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:26:02.130565 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */
alter view "trial"."main"."my_second_dbt_model__dbt_tmp" rename to "my_second_dbt_model"
[0m20:26:02.131461 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:26:02.132852 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: COMMIT
[0m20:26:02.133149 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:26:02.133420 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: COMMIT
[0m20:26:02.138435 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:26:02.140746 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:26:02.141187 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */
drop view if exists "trial"."main"."my_second_dbt_model__dbt_backup" cascade
[0m20:26:02.144671 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:26:02.146361 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: Close
[0m20:26:02.158087 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c57c2d91-71be-4745-a632-34297eec62c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd10c0c7c90>]}
[0m20:26:02.158735 [info ] [Thread-1 (]: 5 of 8 OK created sql view model main.my_second_dbt_model ...................... [[32mOK[0m in 0.06s]
[0m20:26:02.159447 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.my_second_dbt_model
[0m20:26:02.160186 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.dim_customer
[0m20:26:02.161051 [info ] [Thread-1 (]: 6 of 8 START sql view model main.dim_customer .................................. [RUN]
[0m20:26:02.161730 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.my_second_dbt_model, now model.dbt_duckdb_test.dim_customer)
[0m20:26:02.162134 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.dim_customer
[0m20:26:02.164869 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.dim_customer"
[0m20:26:02.165471 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.dim_customer
[0m20:26:02.168843 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.dim_customer"
[0m20:26:02.169322 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:26:02.169595 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: BEGIN
[0m20:26:02.169832 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:26:02.177870 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:26:02.178506 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:26:02.178805 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */

  
  create view "trial"."main"."dim_customer__dbt_tmp" as (
    

WITH 
first_record AS (
    SELECT
        customerID AS customerId,
        min(dbt_valid_from)::TIMESTAMP AS created_time
    FROM
        "trial"."main"."stg_customer"
    GROUP BY
        customerID
),

cust AS (
    SELECT
        customerID AS customerId,
        regionName,
        customerName,
        contactNumber,	
        Email,	
        loyaltyStatus,
        CAST(dbt_valid_from AS TIMESTAMP) AS dbt_updated_at,	
        CAST(COALESCE(dbt_valid_to, '2999-12-31') AS TIMESTAMP) AS dbt_valid_to
    FROM
        "trial"."main"."stg_customer"
),

scust AS (
    SELECT
        cust.*,  -- Selecting all columns from the 'cust' CTE
        first_record.created_time  -- Adding the '_created_datetime' from 'first_record'
    FROM
        cust
    LEFT JOIN first_record
        ON cust.customerId = first_record.customerId
)

SELECT
    *
FROM
    scust
WHERE dbt_valid_to > NOW()
  );

[0m20:26:02.180379 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:26:02.183169 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:26:02.183473 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */
alter view "trial"."main"."dim_customer" rename to "dim_customer__dbt_backup"
[0m20:26:02.184189 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:26:02.186839 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:26:02.187256 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */
alter view "trial"."main"."dim_customer__dbt_tmp" rename to "dim_customer"
[0m20:26:02.188496 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:26:02.189870 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: COMMIT
[0m20:26:02.190161 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:26:02.190405 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: COMMIT
[0m20:26:02.193974 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:26:02.196066 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:26:02.196407 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */
drop view if exists "trial"."main"."dim_customer__dbt_backup" cascade
[0m20:26:02.200439 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:26:02.201799 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: Close
[0m20:26:02.215926 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c57c2d91-71be-4745-a632-34297eec62c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd10c1b9bd0>]}
[0m20:26:02.216877 [info ] [Thread-1 (]: 6 of 8 OK created sql view model main.dim_customer ............................. [[32mOK[0m in 0.05s]
[0m20:26:02.218931 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.dim_customer
[0m20:26:02.219541 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.dim_transaction
[0m20:26:02.220903 [info ] [Thread-1 (]: 7 of 8 START sql view model main.dim_transaction ............................... [RUN]
[0m20:26:02.221676 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.dim_customer, now model.dbt_duckdb_test.dim_transaction)
[0m20:26:02.222180 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.dim_transaction
[0m20:26:02.226604 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.dim_transaction"
[0m20:26:02.227437 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.dim_transaction
[0m20:26:02.252870 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:26:02.253312 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
DESCRIBE (select * from (
        

WITH product AS (
  SELECT *
  FROM "trial"."main"."stg_product" 
  WHERE dbt_valid_to IS NULL
),
transactions AS (
  SELECT
    t.transactionId,
    t.customerId,
    p.productId,
    p.productName,
    p.description,
    t.amount,
    t.transactionDate,
    p.discount,
    p.price - (p.price * (p.discount / 100.0)) AS finalPrice,
    p.dbt_valid_from,
    p.dbt_valid_to
  FROM
    "trial"."main"."stg_transaction" t
  JOIN
    product p ON t.productId = p.productId
)

SELECT
  dt.transactionId,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  (dt.discount / 100.0) as dicount,
  SUM(dt.finalPrice) * dt.amount AS finalPrice,
  dt.transactionDate
FROM
  transactions dt
GROUP BY
  dt.transactionId,
  dt.transactionDate,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description
ORDER BY
  dt.transactionDate,
  dt.customerId
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:26:02.253648 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:26:02.280003 [debug] [Thread-1 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
DESCRIBE (select * from (
        

WITH product AS (
  SELECT *
  FROM "trial"."main"."stg_product" 
  WHERE dbt_valid_to IS NULL
),
transactions AS (
  SELECT
    t.transactionId,
    t.customerId,
    p.productId,
    p.productName,
    p.description,
    t.amount,
    t.transactionDate,
    p.discount,
    p.price - (p.price * (p.discount / 100.0)) AS finalPrice,
    p.dbt_valid_from,
    p.dbt_valid_to
  FROM
    "trial"."main"."stg_transaction" t
  JOIN
    product p ON t.productId = p.productId
)

SELECT
  dt.transactionId,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  (dt.discount / 100.0) as dicount,
  SUM(dt.finalPrice) * dt.amount AS finalPrice,
  dt.transactionDate
FROM
  transactions dt
GROUP BY
  dt.transactionId,
  dt.transactionDate,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description
ORDER BY
  dt.transactionDate,
  dt.customerId
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:26:02.280917 [debug] [Thread-1 (]: DuckDB adapter: Rolling back transaction.
[0m20:26:02.281848 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: Close
[0m20:26:02.298720 [debug] [Thread-1 (]: Runtime Error in model dim_transaction (models/dimensions/dim_transaction.sql)
  Binder Error: Values list "dt" does not have a column named "price"
  LINE 36:   dt.price,
             ^
[0m20:26:02.299295 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c57c2d91-71be-4745-a632-34297eec62c8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd107f9a9d0>]}
[0m20:26:02.299889 [error] [Thread-1 (]: 7 of 8 ERROR creating sql view model main.dim_transaction ...................... [[31mERROR[0m in 0.08s]
[0m20:26:02.300670 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.dim_transaction
[0m20:26:02.301773 [debug] [Thread-4 (]: Marking all children of 'model.dbt_duckdb_test.dim_transaction' to be skipped because of status 'error'.  Reason: Runtime Error in model dim_transaction (models/dimensions/dim_transaction.sql)
  Binder Error: Values list "dt" does not have a column named "price"
  LINE 36:   dt.price,
             ^.
[0m20:26:02.304032 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.fct_sale
[0m20:26:02.304544 [info ] [Thread-1 (]: 8 of 8 SKIP relation main.fct_sale ............................................. [[33mSKIP[0m]
[0m20:26:02.305075 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.fct_sale
[0m20:26:02.307294 [debug] [MainThread]: Using duckdb connection "master"
[0m20:26:02.307634 [debug] [MainThread]: On master: BEGIN
[0m20:26:02.307852 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:26:02.314759 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:26:02.315112 [debug] [MainThread]: On master: COMMIT
[0m20:26:02.315350 [debug] [MainThread]: Using duckdb connection "master"
[0m20:26:02.315562 [debug] [MainThread]: On master: COMMIT
[0m20:26:02.316107 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:26:02.316552 [debug] [MainThread]: On master: Close
[0m20:26:02.318770 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:26:02.319093 [debug] [MainThread]: Connection 'list_trial_snapshots' was properly closed.
[0m20:26:02.319298 [debug] [MainThread]: Connection 'model.dbt_duckdb_test.dim_transaction' was properly closed.
[0m20:26:02.319616 [info ] [MainThread]: 
[0m20:26:02.319924 [info ] [MainThread]: Finished running 1 table model, 7 view models in 0 hours 0 minutes and 0.79 seconds (0.79s).
[0m20:26:02.321915 [debug] [MainThread]: Command end result
[0m20:26:02.344595 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:26:02.346759 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:26:02.352756 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:26:02.353504 [info ] [MainThread]: 
[0m20:26:02.354058 [info ] [MainThread]: [31mCompleted with 1 error, 0 partial successes, and 0 warnings:[0m
[0m20:26:02.354627 [info ] [MainThread]: 
[0m20:26:02.355213 [error] [MainThread]:   Runtime Error in model dim_transaction (models/dimensions/dim_transaction.sql)
  Binder Error: Values list "dt" does not have a column named "price"
  LINE 36:   dt.price,
             ^
[0m20:26:02.355640 [info ] [MainThread]: 
[0m20:26:02.356087 [info ] [MainThread]: Done. PASS=6 WARN=0 ERROR=1 SKIP=1 TOTAL=8
[0m20:26:02.358397 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": false, "command_wall_clock_time": 2.070044, "process_in_blocks": "157384", "process_kernel_time": 0.37262, "process_mem_max_rss": "173764", "process_out_blocks": "6992", "process_user_time": 2.775044}
[0m20:26:02.358758 [debug] [MainThread]: Command `dbt run` failed at 20:26:02.358680 after 2.07 seconds
[0m20:26:02.359053 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd11a51a7d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd116d0dad0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd116d0db10>]}
[0m20:26:02.359334 [debug] [MainThread]: Flushing usage events
[0m20:26:04.340345 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:27:25.894654 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe867c1d650>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe867c1d350>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe867c1d050>]}


============================== 20:27:25.898552 | 7704e585-6463-423f-8fb2-b469a214d0f7 ==============================
[0m20:27:25.898552 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:27:25.899168 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'version_check': 'True', 'debug': 'False', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'profiles_dir': '/home/rani/.dbt', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'invocation_command': 'dbt run', 'log_format': 'default', 'static_parser': 'True', 'target_path': 'None', 'introspect': 'True', 'send_anonymous_usage_stats': 'True'}
[0m20:27:26.190388 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '7704e585-6463-423f-8fb2-b469a214d0f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe867ad0310>]}
[0m20:27:26.252894 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '7704e585-6463-423f-8fb2-b469a214d0f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe869e5d990>]}
[0m20:27:26.255672 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:27:26.332680 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:27:26.511615 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 2 files changed.
[0m20:27:26.512786 [debug] [MainThread]: Partial parsing: updated file: dbt_duckdb_test://models/dimensions/schema.yml
[0m20:27:26.513349 [debug] [MainThread]: Partial parsing: updated file: dbt_duckdb_test://models/dimensions/dim_transaction.sql
[0m20:27:26.932855 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:27:26.949022 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '7704e585-6463-423f-8fb2-b469a214d0f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe85d325190>]}
[0m20:27:27.038990 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:27:27.044738 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:27:27.067108 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '7704e585-6463-423f-8fb2-b469a214d0f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe85d317e10>]}
[0m20:27:27.067662 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:27:27.068064 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '7704e585-6463-423f-8fb2-b469a214d0f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe85d3880d0>]}
[0m20:27:27.071115 [info ] [MainThread]: 
[0m20:27:27.072276 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:27:27.072672 [info ] [MainThread]: 
[0m20:27:27.073304 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:27:27.089359 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:27:27.135883 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:27:27.136265 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:27:27.136507 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:27:27.164067 [debug] [ThreadPool]: SQL status: OK in 0.027 seconds
[0m20:27:27.165324 [debug] [ThreadPool]: On list_trial: Close
[0m20:27:27.184575 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_main)
[0m20:27:27.185087 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "main"
"
[0m20:27:27.191555 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:27:27.191877 [debug] [ThreadPool]: On create_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_main"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:27:27.192086 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:27:27.199746 [debug] [ThreadPool]: SQL status: OK in 0.008 seconds
[0m20:27:27.201004 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:27:27.201293 [debug] [ThreadPool]: On create_trial_main: BEGIN
[0m20:27:27.201859 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:27:27.202117 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:27:27.202336 [debug] [ThreadPool]: On create_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_main"} */

    
    
        create schema if not exists "trial"."main"
    
[0m20:27:27.203517 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:27:27.204431 [debug] [ThreadPool]: On create_trial_main: COMMIT
[0m20:27:27.204681 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:27:27.204895 [debug] [ThreadPool]: On create_trial_main: COMMIT
[0m20:27:27.205424 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:27:27.205674 [debug] [ThreadPool]: On create_trial_main: Close
[0m20:27:27.209064 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_main, now list_trial_snapshots)
[0m20:27:27.214221 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:27:27.214563 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:27:27.214778 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:27:27.221144 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:27:27.221485 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:27:27.221716 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:27:27.243952 [debug] [ThreadPool]: SQL status: OK in 0.022 seconds
[0m20:27:27.245868 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:27:27.247361 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:27:27.247716 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:27:27.250306 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_snapshots, now list_trial_main)
[0m20:27:27.252787 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:27:27.253042 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:27:27.253249 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:27:27.258988 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:27:27.259424 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:27:27.259666 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:27:27.279536 [debug] [ThreadPool]: SQL status: OK in 0.020 seconds
[0m20:27:27.280796 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:27:27.281197 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:27:27.281444 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:27:27.284625 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '7704e585-6463-423f-8fb2-b469a214d0f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe85e117750>]}
[0m20:27:27.285218 [debug] [MainThread]: Using duckdb connection "master"
[0m20:27:27.285456 [debug] [MainThread]: On master: BEGIN
[0m20:27:27.285737 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:27:27.293198 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:27:27.293558 [debug] [MainThread]: On master: COMMIT
[0m20:27:27.293850 [debug] [MainThread]: Using duckdb connection "master"
[0m20:27:27.294080 [debug] [MainThread]: On master: COMMIT
[0m20:27:27.294594 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:27:27.294874 [debug] [MainThread]: On master: Close
[0m20:27:27.298276 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.my_first_dbt_model
[0m20:27:27.298895 [info ] [Thread-1 (]: 1 of 8 START sql table model main.my_first_dbt_model ........................... [RUN]
[0m20:27:27.299751 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.dbt_duckdb_test.my_first_dbt_model'
[0m20:27:27.300176 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.my_first_dbt_model
[0m20:27:27.307614 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:27:27.308632 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.my_first_dbt_model
[0m20:27:27.388245 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:27:27.388850 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:27:27.389129 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: BEGIN
[0m20:27:27.389361 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:27:27.397010 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:27:27.397398 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:27:27.397659 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */

  
    
    

    create  table
      "trial"."main"."my_first_dbt_model__dbt_tmp"
  
    as (
      /*
    Welcome to your first dbt model!
    Did you know that you can also configure models directly within SQL files?
    This will override configurations stated in dbt_project.yml

    Try changing "table" to "view" below
*/



with source_data as (

    select 1 as id
    union all
    select null as id

)

select *
from source_data

/*
    Uncomment the line below to remove records with null `id` values
*/

-- where id is not null
    );
  
  
[0m20:27:27.399930 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:27:27.405403 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:27:27.405714 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
alter table "trial"."main"."my_first_dbt_model" rename to "my_first_dbt_model__dbt_backup"
[0m20:27:27.406472 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:27:27.408751 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:27:27.409304 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
alter table "trial"."main"."my_first_dbt_model__dbt_tmp" rename to "my_first_dbt_model"
[0m20:27:27.410146 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:27:27.423367 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: COMMIT
[0m20:27:27.423720 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:27:27.424001 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: COMMIT
[0m20:27:27.429548 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:27:27.433989 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:27:27.434311 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
drop table if exists "trial"."main"."my_first_dbt_model__dbt_backup" cascade
[0m20:27:27.437459 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:27:27.439432 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: Close
[0m20:27:27.451243 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7704e585-6463-423f-8fb2-b469a214d0f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe8690f2990>]}
[0m20:27:27.451882 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.my_first_dbt_model ...................... [[32mOK[0m in 0.15s]
[0m20:27:27.452606 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.my_first_dbt_model
[0m20:27:27.453159 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_customer
[0m20:27:27.453942 [info ] [Thread-1 (]: 2 of 8 START sql view model main.stg_customer .................................. [RUN]
[0m20:27:27.454709 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.my_first_dbt_model, now model.dbt_duckdb_test.stg_customer)
[0m20:27:27.455163 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_customer
[0m20:27:27.458740 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_customer"
[0m20:27:27.459571 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_customer
[0m20:27:27.476292 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_customer"
[0m20:27:27.477154 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:27:27.477547 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: BEGIN
[0m20:27:27.477787 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:27:27.486995 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:27:27.487460 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:27:27.487750 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */

  
  create view "trial"."main"."stg_customer__dbt_tmp" as (
    

SELECT 
    customerID,
    customerName,
    contactNumber,
    Email,
    loyaltyStatus,
    RegionName AS regionName,
    flagActive,
    dbt_scd_id,
    dbt_valid_from,
    CASE
        WHEN flagActive = TRUE THEN dbt_valid_to
        ELSE NOW()
    END AS dbt_valid_to,
    dbt_updated_at
FROM "trial"."snapshots"."snp_customer"
  );

[0m20:27:27.489677 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:27:27.492231 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:27:27.492640 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */
alter view "trial"."main"."stg_customer__dbt_tmp" rename to "stg_customer"
[0m20:27:27.493397 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:27:27.494500 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: COMMIT
[0m20:27:27.494775 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:27:27.495353 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: COMMIT
[0m20:27:27.500446 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:27:27.502459 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:27:27.502741 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */
drop view if exists "trial"."main"."stg_customer__dbt_backup" cascade
[0m20:27:27.503431 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:27:27.504889 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: Close
[0m20:27:27.514463 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7704e585-6463-423f-8fb2-b469a214d0f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe85df11f50>]}
[0m20:27:27.515089 [info ] [Thread-1 (]: 2 of 8 OK created sql view model main.stg_customer ............................. [[32mOK[0m in 0.06s]
[0m20:27:27.515716 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_customer
[0m20:27:27.516371 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_product
[0m20:27:27.517439 [info ] [Thread-1 (]: 3 of 8 START sql view model main.stg_product ................................... [RUN]
[0m20:27:27.518123 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_customer, now model.dbt_duckdb_test.stg_product)
[0m20:27:27.518414 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_product
[0m20:27:27.520807 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_product"
[0m20:27:27.522081 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_product
[0m20:27:27.525070 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_product"
[0m20:27:27.525522 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:27:27.525773 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: BEGIN
[0m20:27:27.526168 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:27:27.534108 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:27:27.534572 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:27:27.534848 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */

  
  create view "trial"."main"."stg_product__dbt_tmp" as (
    

SELECT 
    *
FROM "trial"."snapshots"."snp_product"
  );

[0m20:27:27.535650 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:27:27.540001 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:27:27.540339 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */
alter view "trial"."main"."stg_product__dbt_tmp" rename to "stg_product"
[0m20:27:27.541202 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:27:27.542400 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: COMMIT
[0m20:27:27.542681 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:27:27.542907 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: COMMIT
[0m20:27:27.547632 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:27:27.549715 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:27:27.549991 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */
drop view if exists "trial"."main"."stg_product__dbt_backup" cascade
[0m20:27:27.550690 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:27:27.552060 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: Close
[0m20:27:27.564125 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7704e585-6463-423f-8fb2-b469a214d0f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe8644b2910>]}
[0m20:27:27.564770 [info ] [Thread-1 (]: 3 of 8 OK created sql view model main.stg_product .............................. [[32mOK[0m in 0.05s]
[0m20:27:27.565548 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_product
[0m20:27:27.565929 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_transaction
[0m20:27:27.566535 [info ] [Thread-1 (]: 4 of 8 START sql view model main.stg_transaction ............................... [RUN]
[0m20:27:27.567260 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_product, now model.dbt_duckdb_test.stg_transaction)
[0m20:27:27.567875 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_transaction
[0m20:27:27.570549 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_transaction"
[0m20:27:27.571089 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_transaction
[0m20:27:27.575290 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_transaction"
[0m20:27:27.575802 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:27:27.576258 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: BEGIN
[0m20:27:27.577028 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:27:27.585315 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:27:27.585726 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:27:27.586031 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */

  
  create view "trial"."main"."stg_transaction__dbt_tmp" as (
    

SELECT 
    transactionId,
    customerId,
    productId,
    amount,
    transactionDate
FROM "trial"."snapshots"."snp_transaction"
  );

[0m20:27:27.586758 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:27:27.589349 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:27:27.589659 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */
alter view "trial"."main"."stg_transaction__dbt_tmp" rename to "stg_transaction"
[0m20:27:27.590423 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:27:27.591821 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: COMMIT
[0m20:27:27.592232 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:27:27.592511 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: COMMIT
[0m20:27:27.597371 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:27:27.600221 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:27:27.600574 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */
drop view if exists "trial"."main"."stg_transaction__dbt_backup" cascade
[0m20:27:27.601442 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:27:27.602595 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: Close
[0m20:27:27.613481 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7704e585-6463-423f-8fb2-b469a214d0f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe85e265cd0>]}
[0m20:27:27.614232 [info ] [Thread-1 (]: 4 of 8 OK created sql view model main.stg_transaction .......................... [[32mOK[0m in 0.05s]
[0m20:27:27.614883 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_transaction
[0m20:27:27.615533 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.my_second_dbt_model
[0m20:27:27.616049 [info ] [Thread-1 (]: 5 of 8 START sql view model main.my_second_dbt_model ........................... [RUN]
[0m20:27:27.616955 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_transaction, now model.dbt_duckdb_test.my_second_dbt_model)
[0m20:27:27.617489 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.my_second_dbt_model
[0m20:27:27.619917 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:27:27.620680 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.my_second_dbt_model
[0m20:27:27.623623 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:27:27.624105 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:27:27.624527 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: BEGIN
[0m20:27:27.624764 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:27:27.632603 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:27:27.633010 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:27:27.633274 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */

  
  create view "trial"."main"."my_second_dbt_model__dbt_tmp" as (
    -- Use the `ref` function to select from other models

select *
from "trial"."main"."my_first_dbt_model"
where id = 1
  );

[0m20:27:27.634022 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:27:27.636477 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:27:27.637005 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */
alter view "trial"."main"."my_second_dbt_model__dbt_tmp" rename to "my_second_dbt_model"
[0m20:27:27.637796 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:27:27.638855 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: COMMIT
[0m20:27:27.639129 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:27:27.639354 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: COMMIT
[0m20:27:27.642984 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:27:27.647253 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:27:27.647803 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */
drop view if exists "trial"."main"."my_second_dbt_model__dbt_backup" cascade
[0m20:27:27.648698 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:27:27.649862 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: Close
[0m20:27:27.659011 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7704e585-6463-423f-8fb2-b469a214d0f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe85e2f16d0>]}
[0m20:27:27.659632 [info ] [Thread-1 (]: 5 of 8 OK created sql view model main.my_second_dbt_model ...................... [[32mOK[0m in 0.04s]
[0m20:27:27.660275 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.my_second_dbt_model
[0m20:27:27.660844 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.dim_customer
[0m20:27:27.663248 [info ] [Thread-1 (]: 6 of 8 START sql view model main.dim_customer .................................. [RUN]
[0m20:27:27.663951 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.my_second_dbt_model, now model.dbt_duckdb_test.dim_customer)
[0m20:27:27.664297 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.dim_customer
[0m20:27:27.667311 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.dim_customer"
[0m20:27:27.667780 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.dim_customer
[0m20:27:27.670636 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.dim_customer"
[0m20:27:27.671095 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:27:27.671489 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: BEGIN
[0m20:27:27.671789 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:27:27.680372 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:27:27.680791 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:27:27.681142 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */

  
  create view "trial"."main"."dim_customer__dbt_tmp" as (
    

WITH 
first_record AS (
    SELECT
        customerID AS customerId,
        min(dbt_valid_from)::TIMESTAMP AS created_time
    FROM
        "trial"."main"."stg_customer"
    GROUP BY
        customerID
),

cust AS (
    SELECT
        customerID AS customerId,
        regionName,
        customerName,
        contactNumber,	
        Email,	
        loyaltyStatus,
        CAST(dbt_valid_from AS TIMESTAMP) AS dbt_updated_at,	
        CAST(COALESCE(dbt_valid_to, '2999-12-31') AS TIMESTAMP) AS dbt_valid_to
    FROM
        "trial"."main"."stg_customer"
),

scust AS (
    SELECT
        cust.*,  -- Selecting all columns from the 'cust' CTE
        first_record.created_time  -- Adding the '_created_datetime' from 'first_record'
    FROM
        cust
    LEFT JOIN first_record
        ON cust.customerId = first_record.customerId
)

SELECT
    *
FROM
    scust
WHERE dbt_valid_to > NOW()
  );

[0m20:27:27.682535 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:27:27.687258 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:27:27.687646 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */
alter view "trial"."main"."dim_customer__dbt_tmp" rename to "dim_customer"
[0m20:27:27.688599 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:27:27.689998 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: COMMIT
[0m20:27:27.690304 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:27:27.690645 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: COMMIT
[0m20:27:27.695361 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:27:27.697500 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:27:27.697801 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */
drop view if exists "trial"."main"."dim_customer__dbt_backup" cascade
[0m20:27:27.698558 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:27:27.699610 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: Close
[0m20:27:27.708747 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7704e585-6463-423f-8fb2-b469a214d0f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe867ad7c10>]}
[0m20:27:27.709344 [info ] [Thread-1 (]: 6 of 8 OK created sql view model main.dim_customer ............................. [[32mOK[0m in 0.04s]
[0m20:27:27.709947 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.dim_customer
[0m20:27:27.710430 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.dim_transaction
[0m20:27:27.711252 [info ] [Thread-1 (]: 7 of 8 START sql view model main.dim_transaction ............................... [RUN]
[0m20:27:27.711883 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.dim_customer, now model.dbt_duckdb_test.dim_transaction)
[0m20:27:27.712188 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.dim_transaction
[0m20:27:27.715247 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.dim_transaction"
[0m20:27:27.715816 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.dim_transaction
[0m20:27:27.733444 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:27:27.734437 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
DESCRIBE (select * from (
        

WITH product AS (
  SELECT *
  FROM "trial"."main"."stg_product" 
  WHERE dbt_valid_to IS NULL
),
transactions AS (
  SELECT
    t.transactionId,
    t.customerId,
    p.productId,
    p.productName,
    p.description,
    t.amount,
    t.transactionDate,
    p.discount,
    p.price,
    p.price - (p.price * (p.discount / 100.0)) AS finalPrice,
    p.dbt_valid_from,
    p.dbt_valid_to
  FROM
    "trial"."main"."stg_transaction" t
  JOIN
    product p ON t.productId = p.productId
)

SELECT
  dt.transactionId,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  (dt.discount / 100.0) as dicount,
  SUM(dt.finalPrice) * dt.amount AS finalPrice,
  dt.transactionDate
FROM
  transactions dt
GROUP BY
  dt.transactionId,
  dt.transactionDate,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description
ORDER BY
  dt.transactionDate,
  dt.customerId
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:27:27.734952 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:27:27.753703 [debug] [Thread-1 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
DESCRIBE (select * from (
        

WITH product AS (
  SELECT *
  FROM "trial"."main"."stg_product" 
  WHERE dbt_valid_to IS NULL
),
transactions AS (
  SELECT
    t.transactionId,
    t.customerId,
    p.productId,
    p.productName,
    p.description,
    t.amount,
    t.transactionDate,
    p.discount,
    p.price,
    p.price - (p.price * (p.discount / 100.0)) AS finalPrice,
    p.dbt_valid_from,
    p.dbt_valid_to
  FROM
    "trial"."main"."stg_transaction" t
  JOIN
    product p ON t.productId = p.productId
)

SELECT
  dt.transactionId,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  (dt.discount / 100.0) as dicount,
  SUM(dt.finalPrice) * dt.amount AS finalPrice,
  dt.transactionDate
FROM
  transactions dt
GROUP BY
  dt.transactionId,
  dt.transactionDate,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description
ORDER BY
  dt.transactionDate,
  dt.customerId
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:27:27.754155 [debug] [Thread-1 (]: DuckDB adapter: Rolling back transaction.
[0m20:27:27.754581 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: Close
[0m20:27:27.767216 [debug] [Thread-1 (]: Runtime Error in model dim_transaction (models/dimensions/dim_transaction.sql)
  Binder Error: column "amount" must appear in the GROUP BY clause or must be part of an aggregate function.
  Either add it to the GROUP BY list, or use "ANY_VALUE(amount)" if the exact value of "amount" is not important.
  LINE 36:   dt.amount,
             ^
[0m20:27:27.767768 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7704e585-6463-423f-8fb2-b469a214d0f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe85d3c9dd0>]}
[0m20:27:27.768282 [error] [Thread-1 (]: 7 of 8 ERROR creating sql view model main.dim_transaction ...................... [[31mERROR[0m in 0.06s]
[0m20:27:27.768897 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.dim_transaction
[0m20:27:27.769758 [debug] [Thread-4 (]: Marking all children of 'model.dbt_duckdb_test.dim_transaction' to be skipped because of status 'error'.  Reason: Runtime Error in model dim_transaction (models/dimensions/dim_transaction.sql)
  Binder Error: column "amount" must appear in the GROUP BY clause or must be part of an aggregate function.
  Either add it to the GROUP BY list, or use "ANY_VALUE(amount)" if the exact value of "amount" is not important.
  LINE 36:   dt.amount,
             ^.
[0m20:27:27.771465 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.fct_sale
[0m20:27:27.771809 [info ] [Thread-1 (]: 8 of 8 SKIP relation main.fct_sale ............................................. [[33mSKIP[0m]
[0m20:27:27.772275 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.fct_sale
[0m20:27:27.773727 [debug] [MainThread]: Using duckdb connection "master"
[0m20:27:27.774056 [debug] [MainThread]: On master: BEGIN
[0m20:27:27.774318 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:27:27.781312 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:27:27.781693 [debug] [MainThread]: On master: COMMIT
[0m20:27:27.781930 [debug] [MainThread]: Using duckdb connection "master"
[0m20:27:27.782153 [debug] [MainThread]: On master: COMMIT
[0m20:27:27.782650 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:27:27.782894 [debug] [MainThread]: On master: Close
[0m20:27:27.784711 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:27:27.785019 [debug] [MainThread]: Connection 'list_trial_main' was properly closed.
[0m20:27:27.785207 [debug] [MainThread]: Connection 'model.dbt_duckdb_test.dim_transaction' was properly closed.
[0m20:27:27.785494 [info ] [MainThread]: 
[0m20:27:27.785918 [info ] [MainThread]: Finished running 1 table model, 7 view models in 0 hours 0 minutes and 0.71 seconds (0.71s).
[0m20:27:27.787675 [debug] [MainThread]: Command end result
[0m20:27:27.807570 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:27:27.809586 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:27:27.814630 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:27:27.814916 [info ] [MainThread]: 
[0m20:27:27.815380 [info ] [MainThread]: [31mCompleted with 1 error, 0 partial successes, and 0 warnings:[0m
[0m20:27:27.815848 [info ] [MainThread]: 
[0m20:27:27.816351 [error] [MainThread]:   Runtime Error in model dim_transaction (models/dimensions/dim_transaction.sql)
  Binder Error: column "amount" must appear in the GROUP BY clause or must be part of an aggregate function.
  Either add it to the GROUP BY list, or use "ANY_VALUE(amount)" if the exact value of "amount" is not important.
  LINE 36:   dt.amount,
             ^
[0m20:27:27.816767 [info ] [MainThread]: 
[0m20:27:27.817512 [info ] [MainThread]: Done. PASS=6 WARN=0 ERROR=1 SKIP=1 TOTAL=8
[0m20:27:27.819238 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": false, "command_wall_clock_time": 1.9732465, "process_in_blocks": "157680", "process_kernel_time": 0.236149, "process_mem_max_rss": "168816", "process_out_blocks": "7528", "process_user_time": 2.731116}
[0m20:27:27.819599 [debug] [MainThread]: Command `dbt run` failed at 20:27:27.819521 after 1.97 seconds
[0m20:27:27.819917 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe86b81e790>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe86b8c1210>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe869e4a590>]}
[0m20:27:27.820190 [debug] [MainThread]: Flushing usage events
[0m20:27:29.684504 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:28:01.261639 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53f10a5450>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53f10a52d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53f10a5190>]}


============================== 20:28:01.271261 | 201f1ab9-a598-43a8-bc56-41bfe7ebfe5b ==============================
[0m20:28:01.271261 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:28:01.272083 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/rani/.dbt', 'version_check': 'True', 'fail_fast': 'False', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'debug': 'False', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'log_format': 'default', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'invocation_command': 'dbt run', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m20:28:01.454131 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '201f1ab9-a598-43a8-bc56-41bfe7ebfe5b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53f0f6c450>]}
[0m20:28:01.509853 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '201f1ab9-a598-43a8-bc56-41bfe7ebfe5b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53f32f1390>]}
[0m20:28:01.511774 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:28:01.582265 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:28:01.697032 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m20:28:01.697660 [debug] [MainThread]: Partial parsing: updated file: dbt_duckdb_test://models/dimensions/dim_transaction.sql
[0m20:28:02.134193 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:28:02.147090 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '201f1ab9-a598-43a8-bc56-41bfe7ebfe5b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53e6732590>]}
[0m20:28:02.236289 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:28:02.237906 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:28:02.249635 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '201f1ab9-a598-43a8-bc56-41bfe7ebfe5b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53e7593d90>]}
[0m20:28:02.250126 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:28:02.250751 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '201f1ab9-a598-43a8-bc56-41bfe7ebfe5b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53e679f4d0>]}
[0m20:28:02.253418 [info ] [MainThread]: 
[0m20:28:02.253940 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:28:02.254511 [info ] [MainThread]: 
[0m20:28:02.255377 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:28:02.260038 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:28:02.292702 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:28:02.293095 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:28:02.293323 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:28:02.302268 [debug] [ThreadPool]: SQL status: OK in 0.009 seconds
[0m20:28:02.303508 [debug] [ThreadPool]: On list_trial: Close
[0m20:28:02.305632 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_main)
[0m20:28:02.306041 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "main"
"
[0m20:28:02.311512 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:28:02.311797 [debug] [ThreadPool]: On create_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_main"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:28:02.312011 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:28:02.318043 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:28:02.319342 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:28:02.319620 [debug] [ThreadPool]: On create_trial_main: BEGIN
[0m20:28:02.320158 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:28:02.320409 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:28:02.320611 [debug] [ThreadPool]: On create_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_main"} */

    
    
        create schema if not exists "trial"."main"
    
[0m20:28:02.321163 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:28:02.321841 [debug] [ThreadPool]: On create_trial_main: COMMIT
[0m20:28:02.322093 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:28:02.322292 [debug] [ThreadPool]: On create_trial_main: COMMIT
[0m20:28:02.322750 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:28:02.323011 [debug] [ThreadPool]: On create_trial_main: Close
[0m20:28:02.326082 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_main, now list_trial_main)
[0m20:28:02.331048 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:28:02.331333 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:28:02.331560 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:28:02.338052 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:28:02.338386 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:28:02.338630 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:28:02.359847 [debug] [ThreadPool]: SQL status: OK in 0.021 seconds
[0m20:28:02.361140 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:28:02.361683 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:28:02.361924 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:28:02.364527 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_main, now list_trial_snapshots)
[0m20:28:02.367154 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:28:02.367416 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:28:02.367608 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:28:02.373145 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m20:28:02.373461 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:28:02.373685 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:28:02.394769 [debug] [ThreadPool]: SQL status: OK in 0.021 seconds
[0m20:28:02.396114 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:28:02.396523 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:28:02.396740 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:28:02.400017 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '201f1ab9-a598-43a8-bc56-41bfe7ebfe5b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53ed920b10>]}
[0m20:28:02.400502 [debug] [MainThread]: Using duckdb connection "master"
[0m20:28:02.400734 [debug] [MainThread]: On master: BEGIN
[0m20:28:02.400928 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:28:02.408366 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:28:02.408770 [debug] [MainThread]: On master: COMMIT
[0m20:28:02.408997 [debug] [MainThread]: Using duckdb connection "master"
[0m20:28:02.409194 [debug] [MainThread]: On master: COMMIT
[0m20:28:02.409701 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:28:02.409986 [debug] [MainThread]: On master: Close
[0m20:28:02.412829 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.my_first_dbt_model
[0m20:28:02.413272 [info ] [Thread-1 (]: 1 of 8 START sql table model main.my_first_dbt_model ........................... [RUN]
[0m20:28:02.413860 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.dbt_duckdb_test.my_first_dbt_model'
[0m20:28:02.414349 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.my_first_dbt_model
[0m20:28:02.420948 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:28:02.421601 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.my_first_dbt_model
[0m20:28:02.499292 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:28:02.499969 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:28:02.500403 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: BEGIN
[0m20:28:02.500660 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:28:02.508570 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:28:02.508960 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:28:02.509224 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */

  
    
    

    create  table
      "trial"."main"."my_first_dbt_model__dbt_tmp"
  
    as (
      /*
    Welcome to your first dbt model!
    Did you know that you can also configure models directly within SQL files?
    This will override configurations stated in dbt_project.yml

    Try changing "table" to "view" below
*/



with source_data as (

    select 1 as id
    union all
    select null as id

)

select *
from source_data

/*
    Uncomment the line below to remove records with null `id` values
*/

-- where id is not null
    );
  
  
[0m20:28:02.510210 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:28:02.515491 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:28:02.515800 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
alter table "trial"."main"."my_first_dbt_model" rename to "my_first_dbt_model__dbt_backup"
[0m20:28:02.516541 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.519297 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:28:02.519623 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
alter table "trial"."main"."my_first_dbt_model__dbt_tmp" rename to "my_first_dbt_model"
[0m20:28:02.520362 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.532914 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: COMMIT
[0m20:28:02.533239 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:28:02.533482 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: COMMIT
[0m20:28:02.537417 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:28:02.541701 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:28:02.542037 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
drop table if exists "trial"."main"."my_first_dbt_model__dbt_backup" cascade
[0m20:28:02.545134 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:28:02.547206 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: Close
[0m20:28:02.557946 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '201f1ab9-a598-43a8-bc56-41bfe7ebfe5b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53e5a6a2d0>]}
[0m20:28:02.558576 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.my_first_dbt_model ...................... [[32mOK[0m in 0.14s]
[0m20:28:02.559237 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.my_first_dbt_model
[0m20:28:02.559766 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_customer
[0m20:28:02.560480 [info ] [Thread-1 (]: 2 of 8 START sql view model main.stg_customer .................................. [RUN]
[0m20:28:02.561323 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.my_first_dbt_model, now model.dbt_duckdb_test.stg_customer)
[0m20:28:02.561703 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_customer
[0m20:28:02.565143 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_customer"
[0m20:28:02.565716 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_customer
[0m20:28:02.582017 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_customer"
[0m20:28:02.582785 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:28:02.583254 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: BEGIN
[0m20:28:02.583735 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:28:02.591778 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:28:02.592243 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:28:02.592573 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */

  
  create view "trial"."main"."stg_customer__dbt_tmp" as (
    

SELECT 
    customerID,
    customerName,
    contactNumber,
    Email,
    loyaltyStatus,
    RegionName AS regionName,
    flagActive,
    dbt_scd_id,
    dbt_valid_from,
    CASE
        WHEN flagActive = TRUE THEN dbt_valid_to
        ELSE NOW()
    END AS dbt_valid_to,
    dbt_updated_at
FROM "trial"."snapshots"."snp_customer"
  );

[0m20:28:02.593582 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:28:02.596142 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:28:02.596426 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */
alter view "trial"."main"."stg_customer" rename to "stg_customer__dbt_backup"
[0m20:28:02.597296 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.600016 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:28:02.600309 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */
alter view "trial"."main"."stg_customer__dbt_tmp" rename to "stg_customer"
[0m20:28:02.601048 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.602192 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: COMMIT
[0m20:28:02.602462 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:28:02.602685 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: COMMIT
[0m20:28:02.606241 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:28:02.608299 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:28:02.608585 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */
drop view if exists "trial"."main"."stg_customer__dbt_backup" cascade
[0m20:28:02.611525 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:28:02.612613 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: Close
[0m20:28:02.622625 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '201f1ab9-a598-43a8-bc56-41bfe7ebfe5b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53f31b2f50>]}
[0m20:28:02.623262 [info ] [Thread-1 (]: 2 of 8 OK created sql view model main.stg_customer ............................. [[32mOK[0m in 0.06s]
[0m20:28:02.623926 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_customer
[0m20:28:02.624613 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_product
[0m20:28:02.625260 [info ] [Thread-1 (]: 3 of 8 START sql view model main.stg_product ................................... [RUN]
[0m20:28:02.626063 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_customer, now model.dbt_duckdb_test.stg_product)
[0m20:28:02.626501 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_product
[0m20:28:02.630303 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_product"
[0m20:28:02.630854 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_product
[0m20:28:02.635195 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_product"
[0m20:28:02.635695 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:28:02.635977 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: BEGIN
[0m20:28:02.636574 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:28:02.643477 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:28:02.643835 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:28:02.644114 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */

  
  create view "trial"."main"."stg_product__dbt_tmp" as (
    

SELECT 
    *
FROM "trial"."snapshots"."snp_product"
  );

[0m20:28:02.644840 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.648015 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:28:02.648390 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */
alter view "trial"."main"."stg_product" rename to "stg_product__dbt_backup"
[0m20:28:02.649141 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.651312 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:28:02.651578 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */
alter view "trial"."main"."stg_product__dbt_tmp" rename to "stg_product"
[0m20:28:02.652232 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.653947 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: COMMIT
[0m20:28:02.654354 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:28:02.654636 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: COMMIT
[0m20:28:02.658100 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:28:02.660183 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:28:02.660451 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */
drop view if exists "trial"."main"."stg_product__dbt_backup" cascade
[0m20:28:02.663918 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:28:02.665086 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: Close
[0m20:28:02.673763 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '201f1ab9-a598-43a8-bc56-41bfe7ebfe5b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53e74fec90>]}
[0m20:28:02.674397 [info ] [Thread-1 (]: 3 of 8 OK created sql view model main.stg_product .............................. [[32mOK[0m in 0.05s]
[0m20:28:02.675079 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_product
[0m20:28:02.675621 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_transaction
[0m20:28:02.676318 [info ] [Thread-1 (]: 4 of 8 START sql view model main.stg_transaction ............................... [RUN]
[0m20:28:02.677004 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_product, now model.dbt_duckdb_test.stg_transaction)
[0m20:28:02.677515 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_transaction
[0m20:28:02.680065 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_transaction"
[0m20:28:02.680550 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_transaction
[0m20:28:02.683432 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_transaction"
[0m20:28:02.683897 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:28:02.684337 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: BEGIN
[0m20:28:02.684602 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:28:02.691564 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:28:02.691954 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:28:02.692357 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */

  
  create view "trial"."main"."stg_transaction__dbt_tmp" as (
    

SELECT 
    transactionId,
    customerId,
    productId,
    amount,
    transactionDate
FROM "trial"."snapshots"."snp_transaction"
  );

[0m20:28:02.693349 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.696195 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:28:02.696499 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */
alter view "trial"."main"."stg_transaction" rename to "stg_transaction__dbt_backup"
[0m20:28:02.697376 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:28:02.699754 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:28:02.700037 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */
alter view "trial"."main"."stg_transaction__dbt_tmp" rename to "stg_transaction"
[0m20:28:02.700676 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.701860 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: COMMIT
[0m20:28:02.702139 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:28:02.702366 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: COMMIT
[0m20:28:02.707244 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:28:02.709733 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:28:02.710031 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */
drop view if exists "trial"."main"."stg_transaction__dbt_backup" cascade
[0m20:28:02.713150 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:28:02.714294 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: Close
[0m20:28:02.723888 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '201f1ab9-a598-43a8-bc56-41bfe7ebfe5b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53f341b0d0>]}
[0m20:28:02.724737 [info ] [Thread-1 (]: 4 of 8 OK created sql view model main.stg_transaction .......................... [[32mOK[0m in 0.05s]
[0m20:28:02.725514 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_transaction
[0m20:28:02.726128 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.my_second_dbt_model
[0m20:28:02.727059 [info ] [Thread-1 (]: 5 of 8 START sql view model main.my_second_dbt_model ........................... [RUN]
[0m20:28:02.727897 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_transaction, now model.dbt_duckdb_test.my_second_dbt_model)
[0m20:28:02.728243 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.my_second_dbt_model
[0m20:28:02.730582 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:28:02.731012 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.my_second_dbt_model
[0m20:28:02.734305 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:28:02.734960 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:28:02.735324 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: BEGIN
[0m20:28:02.735570 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:28:02.743277 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:28:02.743678 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:28:02.743938 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */

  
  create view "trial"."main"."my_second_dbt_model__dbt_tmp" as (
    -- Use the `ref` function to select from other models

select *
from "trial"."main"."my_first_dbt_model"
where id = 1
  );

[0m20:28:02.744650 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.748680 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:28:02.749026 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */
alter view "trial"."main"."my_second_dbt_model" rename to "my_second_dbt_model__dbt_backup"
[0m20:28:02.749874 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.752077 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:28:02.752355 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */
alter view "trial"."main"."my_second_dbt_model__dbt_tmp" rename to "my_second_dbt_model"
[0m20:28:02.753002 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.756726 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: COMMIT
[0m20:28:02.757231 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:28:02.757504 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: COMMIT
[0m20:28:02.761272 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:28:02.763194 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:28:02.763474 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */
drop view if exists "trial"."main"."my_second_dbt_model__dbt_backup" cascade
[0m20:28:02.766423 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:28:02.767773 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: Close
[0m20:28:02.777366 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '201f1ab9-a598-43a8-bc56-41bfe7ebfe5b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53e5a7a090>]}
[0m20:28:02.777988 [info ] [Thread-1 (]: 5 of 8 OK created sql view model main.my_second_dbt_model ...................... [[32mOK[0m in 0.05s]
[0m20:28:02.778633 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.my_second_dbt_model
[0m20:28:02.779199 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.dim_customer
[0m20:28:02.779855 [info ] [Thread-1 (]: 6 of 8 START sql view model main.dim_customer .................................. [RUN]
[0m20:28:02.780400 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.my_second_dbt_model, now model.dbt_duckdb_test.dim_customer)
[0m20:28:02.780729 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.dim_customer
[0m20:28:02.783389 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.dim_customer"
[0m20:28:02.783831 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.dim_customer
[0m20:28:02.787738 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.dim_customer"
[0m20:28:02.789252 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:28:02.789902 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: BEGIN
[0m20:28:02.790290 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:28:02.796510 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m20:28:02.796874 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:28:02.797264 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */

  
  create view "trial"."main"."dim_customer__dbt_tmp" as (
    

WITH 
first_record AS (
    SELECT
        customerID AS customerId,
        min(dbt_valid_from)::TIMESTAMP AS created_time
    FROM
        "trial"."main"."stg_customer"
    GROUP BY
        customerID
),

cust AS (
    SELECT
        customerID AS customerId,
        regionName,
        customerName,
        contactNumber,	
        Email,	
        loyaltyStatus,
        CAST(dbt_valid_from AS TIMESTAMP) AS dbt_updated_at,	
        CAST(COALESCE(dbt_valid_to, '2999-12-31') AS TIMESTAMP) AS dbt_valid_to
    FROM
        "trial"."main"."stg_customer"
),

scust AS (
    SELECT
        cust.*,  -- Selecting all columns from the 'cust' CTE
        first_record.created_time  -- Adding the '_created_datetime' from 'first_record'
    FROM
        cust
    LEFT JOIN first_record
        ON cust.customerId = first_record.customerId
)

SELECT
    *
FROM
    scust
WHERE dbt_valid_to > NOW()
  );

[0m20:28:02.798404 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:28:02.800869 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:28:02.801149 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */
alter view "trial"."main"."dim_customer" rename to "dim_customer__dbt_backup"
[0m20:28:02.801852 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.806072 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:28:02.806751 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */
alter view "trial"."main"."dim_customer__dbt_tmp" rename to "dim_customer"
[0m20:28:02.808046 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:28:02.809420 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: COMMIT
[0m20:28:02.809698 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:28:02.809922 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: COMMIT
[0m20:28:02.813356 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:28:02.815329 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:28:02.815608 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */
drop view if exists "trial"."main"."dim_customer__dbt_backup" cascade
[0m20:28:02.818517 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:28:02.819577 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: Close
[0m20:28:02.829404 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '201f1ab9-a598-43a8-bc56-41bfe7ebfe5b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53e7625e10>]}
[0m20:28:02.830033 [info ] [Thread-1 (]: 6 of 8 OK created sql view model main.dim_customer ............................. [[32mOK[0m in 0.05s]
[0m20:28:02.830941 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.dim_customer
[0m20:28:02.831445 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.dim_transaction
[0m20:28:02.832028 [info ] [Thread-1 (]: 7 of 8 START sql view model main.dim_transaction ............................... [RUN]
[0m20:28:02.832749 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.dim_customer, now model.dbt_duckdb_test.dim_transaction)
[0m20:28:02.833137 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.dim_transaction
[0m20:28:02.836067 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.dim_transaction"
[0m20:28:02.836712 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.dim_transaction
[0m20:28:02.855037 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:28:02.855459 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
DESCRIBE (select * from (
        

WITH product AS (
  SELECT *
  FROM "trial"."main"."stg_product" 
  WHERE dbt_valid_to IS NULL
),
transactions AS (
  SELECT
    t.transactionId,
    t.customerId,
    p.productId,
    p.productName,
    p.description,
    t.amount,
    t.transactionDate,
    p.discount,
    p.price,
    p.price - (p.price * (p.discount / 100.0)) AS finalPrice,
    p.dbt_valid_from,
    p.dbt_valid_to
  FROM
    "trial"."main"."stg_transaction" t
  JOIN
    product p ON t.productId = p.productId
)

SELECT
  dt.transactionId,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  (dt.discount / 100.0) as dicount,
  SUM(dt.finalPrice) * dt.amount AS finalPrice,
  dt.transactionDate
FROM
  transactions dt
GROUP BY
  dt.transactionId,
  dt.transactionDate,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  dicount
ORDER BY
  dt.transactionDate,
  dt.customerId
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:28:02.855910 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:28:02.862704 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:28:02.874199 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:28:02.874573 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
DESCRIBE (select * from (
        select
    
      
    cast(null as VARCHAR)
 as transactionId, 
      
    cast(null as VARCHAR)
 as customerId, 
      
    cast(null as VARCHAR)
 as productId, 
      
    cast(null as VARCHAR)
 as productName, 
      
    cast(null as VARCHAR)
 as description, 
      
    cast(null as DOUBLE)
 as amount, 
      
    cast(null as DOUBLE)
 as price, 
      
    cast(null as DOUBLE)
 as dicount, 
      
    cast(null as DOUBLE)
 as finalPrice, 
      
    cast(null as TIMESTAMP)
 as transactionDate
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:28:02.875602 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:28:02.884807 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.dim_transaction"
[0m20:28:02.885277 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:28:02.885605 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: BEGIN
[0m20:28:02.886279 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.886562 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:28:02.886862 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */

  
    
  create view "trial"."main"."dim_transaction__dbt_tmp" as (
    

WITH product AS (
  SELECT *
  FROM "trial"."main"."stg_product" 
  WHERE dbt_valid_to IS NULL
),
transactions AS (
  SELECT
    t.transactionId,
    t.customerId,
    p.productId,
    p.productName,
    p.description,
    t.amount,
    t.transactionDate,
    p.discount,
    p.price,
    p.price - (p.price * (p.discount / 100.0)) AS finalPrice,
    p.dbt_valid_from,
    p.dbt_valid_to
  FROM
    "trial"."main"."stg_transaction" t
  JOIN
    product p ON t.productId = p.productId
)

SELECT
  dt.transactionId,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  (dt.discount / 100.0) as dicount,
  SUM(dt.finalPrice) * dt.amount AS finalPrice,
  dt.transactionDate
FROM
  transactions dt
GROUP BY
  dt.transactionId,
  dt.transactionDate,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  dicount
ORDER BY
  dt.transactionDate,
  dt.customerId
  );

[0m20:28:02.888156 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:28:02.891681 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:28:02.891979 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
alter view "trial"."main"."dim_transaction__dbt_tmp" rename to "dim_transaction"
[0m20:28:02.892719 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.893857 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: COMMIT
[0m20:28:02.894133 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:28:02.894367 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: COMMIT
[0m20:28:02.897725 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:28:02.900060 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:28:02.900358 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
drop view if exists "trial"."main"."dim_transaction__dbt_backup" cascade
[0m20:28:02.901085 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.902132 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: Close
[0m20:28:02.912224 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '201f1ab9-a598-43a8-bc56-41bfe7ebfe5b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53ed8cbe90>]}
[0m20:28:02.912827 [info ] [Thread-1 (]: 7 of 8 OK created sql view model main.dim_transaction .......................... [[32mOK[0m in 0.08s]
[0m20:28:02.913437 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.dim_transaction
[0m20:28:02.914583 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.fct_sale
[0m20:28:02.915010 [info ] [Thread-1 (]: 8 of 8 START sql view model main.fct_sale ...................................... [RUN]
[0m20:28:02.915712 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.dim_transaction, now model.dbt_duckdb_test.fct_sale)
[0m20:28:02.916215 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.fct_sale
[0m20:28:02.918961 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.fct_sale"
[0m20:28:02.919382 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.fct_sale
[0m20:28:02.922926 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.fct_sale"
[0m20:28:02.923425 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:28:02.923680 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: BEGIN
[0m20:28:02.923893 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:28:02.930171 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m20:28:02.930549 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:28:02.930815 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.fct_sale"} */

  
  create view "trial"."main"."fct_sale__dbt_tmp" as (
    
WITH
customer_total_spend AS (
    SELECT
        scust.customerId,
        scust.customerName,
        scust.regionName,
        SUM(transactions.finalPrice) AS totalSpend
    FROM
        "trial"."main"."dim_customer" scust
    JOIN
        "trial"."main"."dim_transaction" transactions ON scust.customerId = transactions.customerId
    WHERE scust.dbt_valid_to > NOW() 
    GROUP BY
        scust.customerId,
        scust.customerName,
        scust.regionName
)

SELECT * FROM customer_total_spend
  );

[0m20:28:02.932809 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:28:02.935243 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:28:02.935521 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.fct_sale"} */
alter view "trial"."main"."fct_sale__dbt_tmp" rename to "fct_sale"
[0m20:28:02.936253 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.937736 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: COMMIT
[0m20:28:02.938246 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:28:02.938637 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: COMMIT
[0m20:28:02.943035 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:28:02.945265 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:28:02.945549 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.fct_sale"} */
drop view if exists "trial"."main"."fct_sale__dbt_backup" cascade
[0m20:28:02.946191 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:28:02.947723 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: Close
[0m20:28:02.958126 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '201f1ab9-a598-43a8-bc56-41bfe7ebfe5b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53f0f30390>]}
[0m20:28:02.958733 [info ] [Thread-1 (]: 8 of 8 OK created sql view model main.fct_sale ................................. [[32mOK[0m in 0.04s]
[0m20:28:02.959334 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.fct_sale
[0m20:28:02.961068 [debug] [MainThread]: Using duckdb connection "master"
[0m20:28:02.961432 [debug] [MainThread]: On master: BEGIN
[0m20:28:02.961797 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:28:02.968262 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m20:28:02.968609 [debug] [MainThread]: On master: COMMIT
[0m20:28:02.968838 [debug] [MainThread]: Using duckdb connection "master"
[0m20:28:02.969035 [debug] [MainThread]: On master: COMMIT
[0m20:28:02.969520 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:28:02.969772 [debug] [MainThread]: On master: Close
[0m20:28:02.972049 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:28:02.972391 [debug] [MainThread]: Connection 'list_trial_snapshots' was properly closed.
[0m20:28:02.972590 [debug] [MainThread]: Connection 'model.dbt_duckdb_test.fct_sale' was properly closed.
[0m20:28:02.972954 [info ] [MainThread]: 
[0m20:28:02.973607 [info ] [MainThread]: Finished running 1 table model, 7 view models in 0 hours 0 minutes and 0.72 seconds (0.72s).
[0m20:28:02.974994 [debug] [MainThread]: Command end result
[0m20:28:02.996290 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:28:02.998350 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:28:03.003457 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:28:03.003813 [info ] [MainThread]: 
[0m20:28:03.004387 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:28:03.004748 [info ] [MainThread]: 
[0m20:28:03.005120 [info ] [MainThread]: Done. PASS=8 WARN=0 ERROR=0 SKIP=0 TOTAL=8
[0m20:28:03.007410 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 1.8063488, "process_in_blocks": "8", "process_kernel_time": 0.138998, "process_mem_max_rss": "167488", "process_out_blocks": "8144", "process_user_time": 2.73032}
[0m20:28:03.007791 [debug] [MainThread]: Command `dbt run` succeeded at 20:28:03.007699 after 1.81 seconds
[0m20:28:03.008079 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53e76372d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53f4d4c710>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f53f4d4d190>]}
[0m20:28:03.008373 [debug] [MainThread]: Flushing usage events
[0m20:28:04.598194 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:29:04.440867 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff610159650>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff610e52610>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff610159590>]}


============================== 20:29:04.444514 | 7d085afa-cb90-4ff5-9085-235b454fcd75 ==============================
[0m20:29:04.444514 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:29:04.445107 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/rani/.dbt', 'version_check': 'True', 'fail_fast': 'False', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'debug': 'False', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'invocation_command': 'dbt snapshot', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m20:29:04.752441 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '7d085afa-cb90-4ff5-9085-235b454fcd75', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff6100adf90>]}
[0m20:29:04.806918 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '7d085afa-cb90-4ff5-9085-235b454fcd75', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff612391990>]}
[0m20:29:04.810051 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:29:04.883596 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:29:05.063022 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m20:29:05.063382 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m20:29:05.071681 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:29:05.122846 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '7d085afa-cb90-4ff5-9085-235b454fcd75', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff610028350>]}
[0m20:29:05.209237 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:29:05.212517 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:29:05.240031 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '7d085afa-cb90-4ff5-9085-235b454fcd75', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff610012fd0>]}
[0m20:29:05.240549 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:29:05.241005 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '7d085afa-cb90-4ff5-9085-235b454fcd75', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff6067382d0>]}
[0m20:29:05.243109 [info ] [MainThread]: 
[0m20:29:05.243585 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:29:05.244006 [info ] [MainThread]: 
[0m20:29:05.244671 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:29:05.249606 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:29:05.287887 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:29:05.288258 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:29:05.288484 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:29:05.312233 [debug] [ThreadPool]: SQL status: OK in 0.024 seconds
[0m20:29:05.313383 [debug] [ThreadPool]: On list_trial: Close
[0m20:29:05.325608 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_snapshots)
[0m20:29:05.326081 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "snapshots"
"
[0m20:29:05.331715 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:29:05.332003 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:29:05.332206 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:29:05.339356 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:29:05.340601 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:29:05.340853 [debug] [ThreadPool]: On create_trial_snapshots: BEGIN
[0m20:29:05.341375 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:29:05.341606 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:29:05.341795 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
    
        create schema if not exists "trial"."snapshots"
    
[0m20:29:05.343276 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:29:05.343996 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:29:05.344236 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:29:05.344433 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:29:05.344944 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:29:05.345204 [debug] [ThreadPool]: On create_trial_snapshots: Close
[0m20:29:05.348362 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_snapshots, now list_trial_snapshots)
[0m20:29:05.353442 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:29:05.353727 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:29:05.353925 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:29:05.359646 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:29:05.360031 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:29:05.360264 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:29:05.382162 [debug] [ThreadPool]: SQL status: OK in 0.022 seconds
[0m20:29:05.383358 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:29:05.384760 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:29:05.385018 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:29:05.387467 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_snapshots, now list_trial_main)
[0m20:29:05.389262 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:29:05.389541 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:29:05.389757 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:29:05.395082 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m20:29:05.395689 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:29:05.395946 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:29:05.415783 [debug] [ThreadPool]: SQL status: OK in 0.020 seconds
[0m20:29:05.418194 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:29:05.418633 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:29:05.418867 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:29:05.421586 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '7d085afa-cb90-4ff5-9085-235b454fcd75', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff6101b3210>]}
[0m20:29:05.422186 [debug] [MainThread]: Using duckdb connection "master"
[0m20:29:05.422466 [debug] [MainThread]: On master: BEGIN
[0m20:29:05.422663 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:29:05.428991 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m20:29:05.429374 [debug] [MainThread]: On master: COMMIT
[0m20:29:05.429640 [debug] [MainThread]: Using duckdb connection "master"
[0m20:29:05.429847 [debug] [MainThread]: On master: COMMIT
[0m20:29:05.430362 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:29:05.430617 [debug] [MainThread]: On master: Close
[0m20:29:05.433464 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_customer
[0m20:29:05.433903 [info ] [Thread-1 (]: 1 of 3 START snapshot snapshots.snp_customer ................................... [RUN]
[0m20:29:05.434516 [debug] [Thread-1 (]: Acquiring new duckdb connection 'snapshot.dbt_duckdb_test.snp_customer'
[0m20:29:05.435030 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_customer
[0m20:29:05.442602 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_customer
[0m20:29:05.509346 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:29:05.509770 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        
    

    select *,
        md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/customer.csv'
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:29:05.510054 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:29:05.525095 [debug] [Thread-1 (]: SQL status: OK in 0.015 seconds
[0m20:29:05.529065 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:29:05.529404 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:29:05.530729 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:29:05.531307 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_customer"
[0m20:29:05.532861 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:29:05.533221 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: BEGIN
[0m20:29:05.533854 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:29:05.534236 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:29:05.534627 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      
  
    
    

    create  table
      "trial"."snapshots"."snp_customer"
  
    as (
      
    

    select *,
        md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/customer.csv'
    ) sbq



    );
  
  
  
[0m20:29:05.540995 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m20:29:05.552225 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:29:05.552637 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:29:05.552881 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:29:05.558138 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:29:05.559733 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: Close
[0m20:29:05.573695 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7d085afa-cb90-4ff5-9085-235b454fcd75', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff604e42650>]}
[0m20:29:05.574497 [info ] [Thread-1 (]: 1 of 3 OK snapshotted snapshots.snp_customer ................................... [[32mOK[0m in 0.14s]
[0m20:29:05.575182 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_customer
[0m20:29:05.575728 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_product
[0m20:29:05.576301 [info ] [Thread-1 (]: 2 of 3 START snapshot snapshots.snp_product .................................... [RUN]
[0m20:29:05.576963 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_customer, now snapshot.dbt_duckdb_test.snp_product)
[0m20:29:05.578588 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_product
[0m20:29:05.581479 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_product
[0m20:29:05.585265 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:29:05.585617 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        
    

    select *,
        md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/product.csv'
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:29:05.585868 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:29:05.594585 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:29:05.595600 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:29:05.595885 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:29:05.597034 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:29:05.597546 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_product"
[0m20:29:05.597987 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:29:05.598240 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: BEGIN
[0m20:29:05.598941 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:29:05.599253 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:29:05.599504 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      
  
    
    

    create  table
      "trial"."snapshots"."snp_product"
  
    as (
      
    

    select *,
        md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/product.csv'
    ) sbq



    );
  
  
  
[0m20:29:05.603568 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:29:05.604968 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:29:05.605311 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:29:05.605558 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:29:05.610055 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:29:05.610836 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: Close
[0m20:29:05.691370 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7d085afa-cb90-4ff5-9085-235b454fcd75', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff604ecfc90>]}
[0m20:29:05.692628 [info ] [Thread-1 (]: 2 of 3 OK snapshotted snapshots.snp_product .................................... [[32mOK[0m in 0.11s]
[0m20:29:05.693449 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_product
[0m20:29:05.694031 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:29:05.694756 [info ] [Thread-1 (]: 3 of 3 START snapshot snapshots.snp_transaction ................................ [RUN]
[0m20:29:05.695460 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_product, now snapshot.dbt_duckdb_test.snp_transaction)
[0m20:29:05.695905 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_transaction
[0m20:29:05.699497 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_transaction
[0m20:29:05.706510 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:29:05.706986 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        
    

    select *,
        md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(transactionDate as varchar ), '')
        ) as dbt_scd_id,
        transactionDate as dbt_updated_at,
        transactionDate as dbt_valid_from,
        
  
  coalesce(nullif(transactionDate, transactionDate), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/transaction.csv'
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:29:05.707321 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:29:05.716673 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:29:05.718327 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:29:05.718704 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:29:05.719838 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:29:05.720367 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:29:05.721906 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:29:05.722341 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: BEGIN
[0m20:29:05.725203 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:29:05.725625 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:29:05.725905 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      
  
    
    

    create  table
      "trial"."snapshots"."snp_transaction"
  
    as (
      
    

    select *,
        md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(transactionDate as varchar ), '')
        ) as dbt_scd_id,
        transactionDate as dbt_updated_at,
        transactionDate as dbt_valid_from,
        
  
  coalesce(nullif(transactionDate, transactionDate), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/transaction.csv'
    ) sbq



    );
  
  
  
[0m20:29:05.728556 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:29:05.729999 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:29:05.730360 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:29:05.730628 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:29:05.735244 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:29:05.736083 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: Close
[0m20:29:05.748911 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7d085afa-cb90-4ff5-9085-235b454fcd75', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff604e4f890>]}
[0m20:29:05.749654 [info ] [Thread-1 (]: 3 of 3 OK snapshotted snapshots.snp_transaction ................................ [[32mOK[0m in 0.05s]
[0m20:29:05.750237 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:29:05.752357 [debug] [MainThread]: Using duckdb connection "master"
[0m20:29:05.752864 [debug] [MainThread]: On master: BEGIN
[0m20:29:05.753109 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:29:05.758979 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m20:29:05.759310 [debug] [MainThread]: On master: COMMIT
[0m20:29:05.759549 [debug] [MainThread]: Using duckdb connection "master"
[0m20:29:05.759775 [debug] [MainThread]: On master: COMMIT
[0m20:29:05.760203 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:29:05.760442 [debug] [MainThread]: On master: Close
[0m20:29:05.761947 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:29:05.762226 [debug] [MainThread]: Connection 'list_trial_main' was properly closed.
[0m20:29:05.762412 [debug] [MainThread]: Connection 'snapshot.dbt_duckdb_test.snp_transaction' was properly closed.
[0m20:29:05.762667 [info ] [MainThread]: 
[0m20:29:05.762997 [info ] [MainThread]: Finished running 3 snapshots in 0 hours 0 minutes and 0.52 seconds (0.52s).
[0m20:29:05.763764 [debug] [MainThread]: Command end result
[0m20:29:05.783466 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:29:05.785205 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:29:05.790497 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:29:05.790834 [info ] [MainThread]: 
[0m20:29:05.791304 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:29:05.791811 [info ] [MainThread]: 
[0m20:29:05.792234 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m20:29:05.794540 [debug] [MainThread]: Resource report: {"command_name": "snapshot", "command_success": true, "command_wall_clock_time": 1.4005493, "process_in_blocks": "154128", "process_kernel_time": 0.183015, "process_mem_max_rss": "173048", "process_out_blocks": "5824", "process_user_time": 2.070969}
[0m20:29:05.794895 [debug] [MainThread]: Command `dbt snapshot` succeeded at 20:29:05.794825 after 1.40 seconds
[0m20:29:05.795155 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff613d5a790>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff613dfd210>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff610158090>]}
[0m20:29:05.795413 [debug] [MainThread]: Flushing usage events
[0m20:29:07.210421 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:29:09.879534 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f506d089710>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f506d089390>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f506d089150>]}


============================== 20:29:09.882126 | 04856b68-858c-486c-9c25-af844f6ac9f7 ==============================
[0m20:29:09.882126 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:29:09.882961 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'fail_fast': 'False', 'profiles_dir': '/home/rani/.dbt', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'debug': 'False', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'log_format': 'default', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'invocation_command': 'dbt run', 'send_anonymous_usage_stats': 'True'}
[0m20:29:10.061092 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '04856b68-858c-486c-9c25-af844f6ac9f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f506cf290d0>]}
[0m20:29:10.112410 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '04856b68-858c-486c-9c25-af844f6ac9f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f506f2b3150>]}
[0m20:29:10.114255 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:29:10.187491 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:29:10.294286 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m20:29:10.294627 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m20:29:10.300354 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:29:10.354323 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '04856b68-858c-486c-9c25-af844f6ac9f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5069848290>]}
[0m20:29:10.445275 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:29:10.449972 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:29:10.462094 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '04856b68-858c-486c-9c25-af844f6ac9f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f506cf13250>]}
[0m20:29:10.462555 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:29:10.463378 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '04856b68-858c-486c-9c25-af844f6ac9f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5069894090>]}
[0m20:29:10.468325 [info ] [MainThread]: 
[0m20:29:10.469141 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:29:10.469607 [info ] [MainThread]: 
[0m20:29:10.471258 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:29:10.478631 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:29:10.537928 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:29:10.538527 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:29:10.538939 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:29:10.587419 [debug] [ThreadPool]: SQL status: OK in 0.048 seconds
[0m20:29:10.589657 [debug] [ThreadPool]: On list_trial: Close
[0m20:29:10.601682 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_main)
[0m20:29:10.602614 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "main"
"
[0m20:29:10.612285 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:29:10.612882 [debug] [ThreadPool]: On create_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_main"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:29:10.613293 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:29:10.630887 [debug] [ThreadPool]: SQL status: OK in 0.017 seconds
[0m20:29:10.632730 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:29:10.633288 [debug] [ThreadPool]: On create_trial_main: BEGIN
[0m20:29:10.634357 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:29:10.635418 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:29:10.636167 [debug] [ThreadPool]: On create_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_main"} */

    
    
        create schema if not exists "trial"."main"
    
[0m20:29:10.639358 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:29:10.640759 [debug] [ThreadPool]: On create_trial_main: COMMIT
[0m20:29:10.641319 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:29:10.641820 [debug] [ThreadPool]: On create_trial_main: COMMIT
[0m20:29:10.644518 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m20:29:10.645977 [debug] [ThreadPool]: On create_trial_main: Close
[0m20:29:10.650949 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_main, now list_trial_main)
[0m20:29:10.658673 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:29:10.659181 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:29:10.659572 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:29:10.665898 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:29:10.666259 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:29:10.666479 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:29:10.685229 [debug] [ThreadPool]: SQL status: OK in 0.018 seconds
[0m20:29:10.686429 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:29:10.687234 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:29:10.687599 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:29:10.690215 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_main, now list_trial_snapshots)
[0m20:29:10.692430 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:29:10.692688 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:29:10.692867 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:29:10.698279 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m20:29:10.698623 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:29:10.698888 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:29:10.733292 [debug] [ThreadPool]: SQL status: OK in 0.034 seconds
[0m20:29:10.735292 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:29:10.735759 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:29:10.735987 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:29:10.742401 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '04856b68-858c-486c-9c25-af844f6ac9f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f506cece8d0>]}
[0m20:29:10.743045 [debug] [MainThread]: Using duckdb connection "master"
[0m20:29:10.743374 [debug] [MainThread]: On master: BEGIN
[0m20:29:10.743592 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:29:10.751614 [debug] [MainThread]: SQL status: OK in 0.008 seconds
[0m20:29:10.752069 [debug] [MainThread]: On master: COMMIT
[0m20:29:10.757225 [debug] [MainThread]: Using duckdb connection "master"
[0m20:29:10.757811 [debug] [MainThread]: On master: COMMIT
[0m20:29:10.759399 [debug] [MainThread]: SQL status: OK in 0.001 seconds
[0m20:29:10.759919 [debug] [MainThread]: On master: Close
[0m20:29:10.764526 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.my_first_dbt_model
[0m20:29:10.765284 [info ] [Thread-1 (]: 1 of 8 START sql table model main.my_first_dbt_model ........................... [RUN]
[0m20:29:10.766157 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.dbt_duckdb_test.my_first_dbt_model'
[0m20:29:10.766546 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.my_first_dbt_model
[0m20:29:10.774883 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:29:10.775756 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.my_first_dbt_model
[0m20:29:10.810560 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:29:10.811464 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:29:10.811911 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: BEGIN
[0m20:29:10.812182 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:29:10.819900 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:29:10.820343 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:29:10.820722 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */

  
    
    

    create  table
      "trial"."main"."my_first_dbt_model__dbt_tmp"
  
    as (
      /*
    Welcome to your first dbt model!
    Did you know that you can also configure models directly within SQL files?
    This will override configurations stated in dbt_project.yml

    Try changing "table" to "view" below
*/



with source_data as (

    select 1 as id
    union all
    select null as id

)

select *
from source_data

/*
    Uncomment the line below to remove records with null `id` values
*/

-- where id is not null
    );
  
  
[0m20:29:10.822266 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:29:10.829532 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:29:10.830199 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
alter table "trial"."main"."my_first_dbt_model" rename to "my_first_dbt_model__dbt_backup"
[0m20:29:10.831264 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:29:10.833947 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:29:10.834252 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
alter table "trial"."main"."my_first_dbt_model__dbt_tmp" rename to "my_first_dbt_model"
[0m20:29:10.834925 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:29:10.850548 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: COMMIT
[0m20:29:10.850944 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:29:10.851189 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: COMMIT
[0m20:29:10.855862 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:29:10.860722 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:29:10.861073 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
drop table if exists "trial"."main"."my_first_dbt_model__dbt_backup" cascade
[0m20:29:10.864872 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:29:10.867363 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: Close
[0m20:29:10.878882 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '04856b68-858c-486c-9c25-af844f6ac9f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5061db1cd0>]}
[0m20:29:10.879556 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.my_first_dbt_model ...................... [[32mOK[0m in 0.11s]
[0m20:29:10.880102 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.my_first_dbt_model
[0m20:29:10.880509 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_customer
[0m20:29:10.881369 [info ] [Thread-1 (]: 2 of 8 START sql view model main.stg_customer .................................. [RUN]
[0m20:29:10.882105 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.my_first_dbt_model, now model.dbt_duckdb_test.stg_customer)
[0m20:29:10.882521 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_customer
[0m20:29:10.885213 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_customer"
[0m20:29:10.885987 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_customer
[0m20:29:10.904244 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_customer"
[0m20:29:10.905164 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:29:10.905723 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: BEGIN
[0m20:29:10.906172 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:29:10.913200 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:29:10.913661 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:29:10.913947 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */

  
  create view "trial"."main"."stg_customer__dbt_tmp" as (
    

SELECT 
    customerID,
    customerName,
    contactNumber,
    Email,
    loyaltyStatus,
    RegionName AS regionName,
    flagActive,
    dbt_scd_id,
    dbt_valid_from,
    CASE
        WHEN flagActive = TRUE THEN dbt_valid_to
        ELSE NOW()
    END AS dbt_valid_to,
    dbt_updated_at
FROM "trial"."snapshots"."snp_customer"
  );

[0m20:29:10.914927 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:29:10.917796 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:29:10.918109 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */
alter view "trial"."main"."stg_customer__dbt_tmp" rename to "stg_customer"
[0m20:29:10.918720 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:29:10.920196 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: COMMIT
[0m20:29:10.921090 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:29:10.921556 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: COMMIT
[0m20:29:10.927666 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:29:10.930438 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:29:10.930804 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */
drop view if exists "trial"."main"."stg_customer__dbt_backup" cascade
[0m20:29:10.931645 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:29:10.932860 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: Close
[0m20:29:10.944087 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '04856b68-858c-486c-9c25-af844f6ac9f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5061db8650>]}
[0m20:29:10.944941 [info ] [Thread-1 (]: 2 of 8 OK created sql view model main.stg_customer ............................. [[32mOK[0m in 0.06s]
[0m20:29:10.945720 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_customer
[0m20:29:10.946156 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_product
[0m20:29:10.946726 [info ] [Thread-1 (]: 3 of 8 START sql view model main.stg_product ................................... [RUN]
[0m20:29:10.947873 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_customer, now model.dbt_duckdb_test.stg_product)
[0m20:29:10.948256 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_product
[0m20:29:10.950948 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_product"
[0m20:29:10.951546 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_product
[0m20:29:10.955142 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_product"
[0m20:29:10.956096 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:29:10.956774 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: BEGIN
[0m20:29:10.957408 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:29:10.964124 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:29:10.964545 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:29:10.964835 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */

  
  create view "trial"."main"."stg_product__dbt_tmp" as (
    

SELECT 
    *
FROM "trial"."snapshots"."snp_product"
  );

[0m20:29:10.965509 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:29:10.969472 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:29:10.969859 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */
alter view "trial"."main"."stg_product__dbt_tmp" rename to "stg_product"
[0m20:29:10.970751 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:29:10.973460 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: COMMIT
[0m20:29:10.974750 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:29:10.975289 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: COMMIT
[0m20:29:10.980254 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:29:10.982357 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:29:10.982654 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */
drop view if exists "trial"."main"."stg_product__dbt_backup" cascade
[0m20:29:10.983421 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:29:10.984572 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: Close
[0m20:29:10.996276 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '04856b68-858c-486c-9c25-af844f6ac9f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5062702cd0>]}
[0m20:29:10.997111 [info ] [Thread-1 (]: 3 of 8 OK created sql view model main.stg_product .............................. [[32mOK[0m in 0.05s]
[0m20:29:10.997697 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_product
[0m20:29:10.998091 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_transaction
[0m20:29:10.998726 [info ] [Thread-1 (]: 4 of 8 START sql view model main.stg_transaction ............................... [RUN]
[0m20:29:10.999398 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_product, now model.dbt_duckdb_test.stg_transaction)
[0m20:29:10.999724 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_transaction
[0m20:29:11.002101 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_transaction"
[0m20:29:11.002530 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_transaction
[0m20:29:11.007243 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_transaction"
[0m20:29:11.008693 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:29:11.009246 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: BEGIN
[0m20:29:11.009747 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:29:11.016238 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m20:29:11.016649 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:29:11.017144 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */

  
  create view "trial"."main"."stg_transaction__dbt_tmp" as (
    

SELECT 
    transactionId,
    customerId,
    productId,
    amount,
    transactionDate
FROM "trial"."snapshots"."snp_transaction"
  );

[0m20:29:11.018046 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:29:11.021775 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:29:11.022177 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */
alter view "trial"."main"."stg_transaction__dbt_tmp" rename to "stg_transaction"
[0m20:29:11.023305 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:29:11.025387 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: COMMIT
[0m20:29:11.025934 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:29:11.026344 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: COMMIT
[0m20:29:11.031202 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:29:11.033746 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:29:11.034084 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */
drop view if exists "trial"."main"."stg_transaction__dbt_backup" cascade
[0m20:29:11.034795 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:29:11.036441 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: Close
[0m20:29:11.049461 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '04856b68-858c-486c-9c25-af844f6ac9f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5062701410>]}
[0m20:29:11.050148 [info ] [Thread-1 (]: 4 of 8 OK created sql view model main.stg_transaction .......................... [[32mOK[0m in 0.05s]
[0m20:29:11.050752 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_transaction
[0m20:29:11.051322 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.my_second_dbt_model
[0m20:29:11.052034 [info ] [Thread-1 (]: 5 of 8 START sql view model main.my_second_dbt_model ........................... [RUN]
[0m20:29:11.052896 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_transaction, now model.dbt_duckdb_test.my_second_dbt_model)
[0m20:29:11.053378 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.my_second_dbt_model
[0m20:29:11.056712 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:29:11.057707 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.my_second_dbt_model
[0m20:29:11.060849 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:29:11.061389 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:29:11.061706 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: BEGIN
[0m20:29:11.061942 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:29:11.068967 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:29:11.069359 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:29:11.069667 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */

  
  create view "trial"."main"."my_second_dbt_model__dbt_tmp" as (
    -- Use the `ref` function to select from other models

select *
from "trial"."main"."my_first_dbt_model"
where id = 1
  );

[0m20:29:11.070382 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:29:11.073965 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:29:11.074315 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */
alter view "trial"."main"."my_second_dbt_model__dbt_tmp" rename to "my_second_dbt_model"
[0m20:29:11.075231 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:29:11.076437 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: COMMIT
[0m20:29:11.076830 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:29:11.077322 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: COMMIT
[0m20:29:11.083177 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:29:11.085389 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:29:11.085692 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */
drop view if exists "trial"."main"."my_second_dbt_model__dbt_backup" cascade
[0m20:29:11.086490 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:29:11.088066 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: Close
[0m20:29:11.103243 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '04856b68-858c-486c-9c25-af844f6ac9f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5061cf7910>]}
[0m20:29:11.104039 [info ] [Thread-1 (]: 5 of 8 OK created sql view model main.my_second_dbt_model ...................... [[32mOK[0m in 0.05s]
[0m20:29:11.104783 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.my_second_dbt_model
[0m20:29:11.105350 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.dim_customer
[0m20:29:11.106287 [info ] [Thread-1 (]: 6 of 8 START sql view model main.dim_customer .................................. [RUN]
[0m20:29:11.107285 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.my_second_dbt_model, now model.dbt_duckdb_test.dim_customer)
[0m20:29:11.107932 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.dim_customer
[0m20:29:11.111831 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.dim_customer"
[0m20:29:11.112327 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.dim_customer
[0m20:29:11.115595 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.dim_customer"
[0m20:29:11.116078 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:29:11.116347 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: BEGIN
[0m20:29:11.116593 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:29:11.124148 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:29:11.124891 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:29:11.125316 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */

  
  create view "trial"."main"."dim_customer__dbt_tmp" as (
    

WITH 
first_record AS (
    SELECT
        customerID AS customerId,
        min(dbt_valid_from)::TIMESTAMP AS created_time
    FROM
        "trial"."main"."stg_customer"
    GROUP BY
        customerID
),

cust AS (
    SELECT
        customerID AS customerId,
        regionName,
        customerName,
        contactNumber,	
        Email,	
        loyaltyStatus,
        CAST(dbt_valid_from AS TIMESTAMP) AS dbt_updated_at,	
        CAST(COALESCE(dbt_valid_to, '2999-12-31') AS TIMESTAMP) AS dbt_valid_to
    FROM
        "trial"."main"."stg_customer"
),

scust AS (
    SELECT
        cust.*,  -- Selecting all columns from the 'cust' CTE
        first_record.created_time  -- Adding the '_created_datetime' from 'first_record'
    FROM
        cust
    LEFT JOIN first_record
        ON cust.customerId = first_record.customerId
)

SELECT
    *
FROM
    scust
WHERE dbt_valid_to > NOW()
  );

[0m20:29:11.127759 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:29:11.132219 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:29:11.132542 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */
alter view "trial"."main"."dim_customer__dbt_tmp" rename to "dim_customer"
[0m20:29:11.133465 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:29:11.134941 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: COMMIT
[0m20:29:11.135382 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:29:11.135718 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: COMMIT
[0m20:29:11.142096 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m20:29:11.145014 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:29:11.145427 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */
drop view if exists "trial"."main"."dim_customer__dbt_backup" cascade
[0m20:29:11.146360 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:29:11.147693 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: Close
[0m20:29:11.160651 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '04856b68-858c-486c-9c25-af844f6ac9f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f506275b8d0>]}
[0m20:29:11.161968 [info ] [Thread-1 (]: 6 of 8 OK created sql view model main.dim_customer ............................. [[32mOK[0m in 0.05s]
[0m20:29:11.162748 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.dim_customer
[0m20:29:11.163216 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.dim_transaction
[0m20:29:11.163689 [info ] [Thread-1 (]: 7 of 8 START sql view model main.dim_transaction ............................... [RUN]
[0m20:29:11.164304 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.dim_customer, now model.dbt_duckdb_test.dim_transaction)
[0m20:29:11.164679 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.dim_transaction
[0m20:29:11.167802 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.dim_transaction"
[0m20:29:11.168563 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.dim_transaction
[0m20:29:11.194656 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:29:11.195109 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
DESCRIBE (select * from (
        

WITH product AS (
  SELECT *
  FROM "trial"."main"."stg_product" 
  WHERE dbt_valid_to IS NULL
),
transactions AS (
  SELECT
    t.transactionId,
    t.customerId,
    p.productId,
    p.productName,
    p.description,
    t.amount,
    t.transactionDate,
    p.discount,
    p.price,
    p.price - (p.price * (p.discount / 100.0)) AS finalPrice,
    p.dbt_valid_from,
    p.dbt_valid_to
  FROM
    "trial"."main"."stg_transaction" t
  JOIN
    product p ON t.productId = p.productId
)

SELECT
  dt.transactionId,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  (dt.discount / 100.0) as dicount,
  SUM(dt.finalPrice) * dt.amount AS finalPrice,
  dt.transactionDate
FROM
  transactions dt
GROUP BY
  dt.transactionId,
  dt.transactionDate,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  dicount
ORDER BY
  dt.transactionDate,
  dt.customerId
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:29:11.195447 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:29:11.207427 [debug] [Thread-1 (]: SQL status: OK in 0.011 seconds
[0m20:29:11.222308 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:29:11.223502 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
DESCRIBE (select * from (
        select
    
      
    cast(null as VARCHAR)
 as transactionId, 
      
    cast(null as VARCHAR)
 as customerId, 
      
    cast(null as VARCHAR)
 as productId, 
      
    cast(null as VARCHAR)
 as productName, 
      
    cast(null as VARCHAR)
 as description, 
      
    cast(null as DOUBLE)
 as amount, 
      
    cast(null as DOUBLE)
 as price, 
      
    cast(null as DOUBLE)
 as dicount, 
      
    cast(null as DOUBLE)
 as finalPrice, 
      
    cast(null as TIMESTAMP)
 as transactionDate
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:29:11.226247 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:29:11.240075 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: Close
[0m20:29:11.254601 [debug] [Thread-1 (]: Compilation Error in model dim_transaction (models/dimensions/dim_transaction.sql)
  This model has an enforced contract that failed.
  Please ensure the name, data_type, and number of columns in your contract match the columns in your model's definition.
  
  | column_name | definition_type | contract_type | mismatch_reason    |
  | ----------- | --------------- | ------------- | ------------------ |
  | amount      | BIGINT          | DOUBLE        | data type mismatch |
  
  
  > in macro assert_columns_equivalent (macros/relations/column/columns_spec_ddl.sql)
  > called by macro default__get_assert_columns_equivalent (macros/relations/column/columns_spec_ddl.sql)
  > called by macro get_assert_columns_equivalent (macros/relations/column/columns_spec_ddl.sql)
  > called by macro duckdb__create_view_as (macros/adapters.sql)
  > called by macro create_view_as (macros/relations/view/create.sql)
  > called by macro default__get_create_view_as_sql (macros/relations/view/create.sql)
  > called by macro get_create_view_as_sql (macros/relations/view/create.sql)
  > called by macro statement (macros/etc/statement.sql)
  > called by macro materialization_view_default (macros/materializations/models/view.sql)
  > called by model dim_transaction (models/dimensions/dim_transaction.sql)
[0m20:29:11.255332 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '04856b68-858c-486c-9c25-af844f6ac9f7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5061dfb110>]}
[0m20:29:11.255934 [error] [Thread-1 (]: 7 of 8 ERROR creating sql view model main.dim_transaction ...................... [[31mERROR[0m in 0.09s]
[0m20:29:11.256805 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.dim_transaction
[0m20:29:11.258211 [debug] [Thread-4 (]: Marking all children of 'model.dbt_duckdb_test.dim_transaction' to be skipped because of status 'error'.  Reason: Compilation Error in model dim_transaction (models/dimensions/dim_transaction.sql)
  This model has an enforced contract that failed.
  Please ensure the name, data_type, and number of columns in your contract match the columns in your model's definition.
  
  | column_name | definition_type | contract_type | mismatch_reason    |
  | ----------- | --------------- | ------------- | ------------------ |
  | amount      | BIGINT          | DOUBLE        | data type mismatch |
  
  
  > in macro assert_columns_equivalent (macros/relations/column/columns_spec_ddl.sql)
  > called by macro default__get_assert_columns_equivalent (macros/relations/column/columns_spec_ddl.sql)
  > called by macro get_assert_columns_equivalent (macros/relations/column/columns_spec_ddl.sql)
  > called by macro duckdb__create_view_as (macros/adapters.sql)
  > called by macro create_view_as (macros/relations/view/create.sql)
  > called by macro default__get_create_view_as_sql (macros/relations/view/create.sql)
  > called by macro get_create_view_as_sql (macros/relations/view/create.sql)
  > called by macro statement (macros/etc/statement.sql)
  > called by macro materialization_view_default (macros/materializations/models/view.sql)
  > called by model dim_transaction (models/dimensions/dim_transaction.sql).
[0m20:29:11.260901 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.fct_sale
[0m20:29:11.261322 [info ] [Thread-1 (]: 8 of 8 SKIP relation main.fct_sale ............................................. [[33mSKIP[0m]
[0m20:29:11.261814 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.fct_sale
[0m20:29:11.264070 [debug] [MainThread]: Using duckdb connection "master"
[0m20:29:11.264395 [debug] [MainThread]: On master: BEGIN
[0m20:29:11.264614 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:29:11.272164 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:29:11.272849 [debug] [MainThread]: On master: COMMIT
[0m20:29:11.273481 [debug] [MainThread]: Using duckdb connection "master"
[0m20:29:11.273956 [debug] [MainThread]: On master: COMMIT
[0m20:29:11.275444 [debug] [MainThread]: SQL status: OK in 0.001 seconds
[0m20:29:11.275960 [debug] [MainThread]: On master: Close
[0m20:29:11.278967 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:29:11.279354 [debug] [MainThread]: Connection 'list_trial_snapshots' was properly closed.
[0m20:29:11.279560 [debug] [MainThread]: Connection 'model.dbt_duckdb_test.dim_transaction' was properly closed.
[0m20:29:11.279876 [info ] [MainThread]: 
[0m20:29:11.280199 [info ] [MainThread]: Finished running 1 table model, 7 view models in 0 hours 0 minutes and 0.81 seconds (0.81s).
[0m20:29:11.281719 [debug] [MainThread]: Command end result
[0m20:29:11.372984 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:29:11.376270 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:29:11.382636 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:29:11.383037 [info ] [MainThread]: 
[0m20:29:11.383546 [info ] [MainThread]: [31mCompleted with 1 error, 0 partial successes, and 0 warnings:[0m
[0m20:29:11.383930 [info ] [MainThread]: 
[0m20:29:11.384458 [error] [MainThread]:   Compilation Error in model dim_transaction (models/dimensions/dim_transaction.sql)
  This model has an enforced contract that failed.
  Please ensure the name, data_type, and number of columns in your contract match the columns in your model's definition.
  
  | column_name | definition_type | contract_type | mismatch_reason    |
  | ----------- | --------------- | ------------- | ------------------ |
  | amount      | BIGINT          | DOUBLE        | data type mismatch |
  
  
  > in macro assert_columns_equivalent (macros/relations/column/columns_spec_ddl.sql)
  > called by macro default__get_assert_columns_equivalent (macros/relations/column/columns_spec_ddl.sql)
  > called by macro get_assert_columns_equivalent (macros/relations/column/columns_spec_ddl.sql)
  > called by macro duckdb__create_view_as (macros/adapters.sql)
  > called by macro create_view_as (macros/relations/view/create.sql)
  > called by macro default__get_create_view_as_sql (macros/relations/view/create.sql)
  > called by macro get_create_view_as_sql (macros/relations/view/create.sql)
  > called by macro statement (macros/etc/statement.sql)
  > called by macro materialization_view_default (macros/materializations/models/view.sql)
  > called by model dim_transaction (models/dimensions/dim_transaction.sql)
[0m20:29:11.384809 [info ] [MainThread]: 
[0m20:29:11.385256 [info ] [MainThread]: Done. PASS=6 WARN=0 ERROR=1 SKIP=1 TOTAL=8
[0m20:29:11.386460 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": false, "command_wall_clock_time": 1.561601, "process_in_blocks": "1080", "process_kernel_time": 0.211159, "process_mem_max_rss": "164808", "process_out_blocks": "6024", "process_user_time": 2.393142}
[0m20:29:11.386803 [debug] [MainThread]: Command `dbt run` failed at 20:29:11.386730 after 1.56 seconds
[0m20:29:11.387116 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5070d147d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5070d15210>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f506de8d050>]}
[0m20:29:11.387470 [debug] [MainThread]: Flushing usage events
[0m20:29:13.667093 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:30:44.084233 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7facde53d950>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7facde931cd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7facde931950>]}


============================== 20:30:44.089000 | dabf0e37-528f-4452-b10e-fa421f46e88f ==============================
[0m20:30:44.089000 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:30:44.089940 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/rani/.dbt', 'version_check': 'True', 'fail_fast': 'False', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'debug': 'False', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'invocation_command': 'dbt run', 'introspect': 'True', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m20:30:44.406296 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'dabf0e37-528f-4452-b10e-fa421f46e88f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7facd4d2c4d0>]}
[0m20:30:44.464232 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'dabf0e37-528f-4452-b10e-fa421f46e88f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7face0789910>]}
[0m20:30:44.467657 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:30:44.547645 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:30:44.729982 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m20:30:44.730761 [debug] [MainThread]: Partial parsing: updated file: dbt_duckdb_test://models/dimensions/schema.yml
[0m20:30:45.156483 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:30:45.172808 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'dabf0e37-528f-4452-b10e-fa421f46e88f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7facbfd78810>]}
[0m20:30:45.264147 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:30:45.267074 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:30:45.291291 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'dabf0e37-528f-4452-b10e-fa421f46e88f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7facbfdbb750>]}
[0m20:30:45.291791 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:30:45.292272 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'dabf0e37-528f-4452-b10e-fa421f46e88f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7facd4b08cd0>]}
[0m20:30:45.294586 [info ] [MainThread]: 
[0m20:30:45.295075 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:30:45.295464 [info ] [MainThread]: 
[0m20:30:45.296511 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:30:45.302239 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:30:45.340261 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:30:45.340611 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:30:45.340835 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:30:45.362773 [debug] [ThreadPool]: SQL status: OK in 0.022 seconds
[0m20:30:45.363950 [debug] [ThreadPool]: On list_trial: Close
[0m20:30:45.367822 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_main)
[0m20:30:45.368315 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "main"
"
[0m20:30:45.374275 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:30:45.374668 [debug] [ThreadPool]: On create_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_main"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:30:45.375008 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:30:45.382618 [debug] [ThreadPool]: SQL status: OK in 0.008 seconds
[0m20:30:45.383858 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:30:45.384113 [debug] [ThreadPool]: On create_trial_main: BEGIN
[0m20:30:45.384703 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:30:45.384959 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:30:45.385186 [debug] [ThreadPool]: On create_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_main"} */

    
    
        create schema if not exists "trial"."main"
    
[0m20:30:45.386170 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:30:45.387381 [debug] [ThreadPool]: On create_trial_main: COMMIT
[0m20:30:45.387708 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:30:45.387914 [debug] [ThreadPool]: On create_trial_main: COMMIT
[0m20:30:45.388426 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:30:45.388673 [debug] [ThreadPool]: On create_trial_main: Close
[0m20:30:45.391804 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_main, now list_trial_snapshots)
[0m20:30:45.396988 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:30:45.397385 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:30:45.397618 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:30:45.403300 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:30:45.403660 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:30:45.403894 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:30:45.427516 [debug] [ThreadPool]: SQL status: OK in 0.023 seconds
[0m20:30:45.429209 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:30:45.430414 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:30:45.430692 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:30:45.433172 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_snapshots, now list_trial_main)
[0m20:30:45.435764 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:30:45.437366 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:30:45.437844 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:30:45.445893 [debug] [ThreadPool]: SQL status: OK in 0.008 seconds
[0m20:30:45.446462 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:30:45.446696 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:30:45.467270 [debug] [ThreadPool]: SQL status: OK in 0.020 seconds
[0m20:30:45.468564 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:30:45.468971 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:30:45.469244 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:30:45.472702 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'dabf0e37-528f-4452-b10e-fa421f46e88f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7facbfd7ec90>]}
[0m20:30:45.473151 [debug] [MainThread]: Using duckdb connection "master"
[0m20:30:45.473376 [debug] [MainThread]: On master: BEGIN
[0m20:30:45.473578 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:30:45.480752 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:30:45.481125 [debug] [MainThread]: On master: COMMIT
[0m20:30:45.481371 [debug] [MainThread]: Using duckdb connection "master"
[0m20:30:45.481575 [debug] [MainThread]: On master: COMMIT
[0m20:30:45.482091 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:30:45.482340 [debug] [MainThread]: On master: Close
[0m20:30:45.485567 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.my_first_dbt_model
[0m20:30:45.486260 [info ] [Thread-1 (]: 1 of 8 START sql table model main.my_first_dbt_model ........................... [RUN]
[0m20:30:45.486934 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.dbt_duckdb_test.my_first_dbt_model'
[0m20:30:45.487466 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.my_first_dbt_model
[0m20:30:45.495031 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:30:45.495908 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.my_first_dbt_model
[0m20:30:45.580187 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:30:45.580935 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:30:45.581348 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: BEGIN
[0m20:30:45.581611 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:30:45.590465 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:30:45.590889 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:30:45.591285 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */

  
    
    

    create  table
      "trial"."main"."my_first_dbt_model__dbt_tmp"
  
    as (
      /*
    Welcome to your first dbt model!
    Did you know that you can also configure models directly within SQL files?
    This will override configurations stated in dbt_project.yml

    Try changing "table" to "view" below
*/



with source_data as (

    select 1 as id
    union all
    select null as id

)

select *
from source_data

/*
    Uncomment the line below to remove records with null `id` values
*/

-- where id is not null
    );
  
  
[0m20:30:45.593494 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:30:45.599809 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:30:45.600148 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
alter table "trial"."main"."my_first_dbt_model" rename to "my_first_dbt_model__dbt_backup"
[0m20:30:45.601003 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:30:45.603373 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:30:45.603712 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
alter table "trial"."main"."my_first_dbt_model__dbt_tmp" rename to "my_first_dbt_model"
[0m20:30:45.604432 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:30:45.620178 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: COMMIT
[0m20:30:45.620569 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:30:45.620842 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: COMMIT
[0m20:30:45.627795 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:30:45.632049 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:30:45.632353 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
drop table if exists "trial"."main"."my_first_dbt_model__dbt_backup" cascade
[0m20:30:45.635987 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:30:45.638057 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: Close
[0m20:30:45.653201 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dabf0e37-528f-4452-b10e-fa421f46e88f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7facdeb41a50>]}
[0m20:30:45.653838 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.my_first_dbt_model ...................... [[32mOK[0m in 0.16s]
[0m20:30:45.654665 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.my_first_dbt_model
[0m20:30:45.655156 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_customer
[0m20:30:45.656122 [info ] [Thread-1 (]: 2 of 8 START sql view model main.stg_customer .................................. [RUN]
[0m20:30:45.657063 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.my_first_dbt_model, now model.dbt_duckdb_test.stg_customer)
[0m20:30:45.658402 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_customer
[0m20:30:45.661563 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_customer"
[0m20:30:45.663454 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_customer
[0m20:30:45.679672 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_customer"
[0m20:30:45.680210 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:30:45.680472 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: BEGIN
[0m20:30:45.680700 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:30:45.687416 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:30:45.687783 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:30:45.688038 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */

  
  create view "trial"."main"."stg_customer__dbt_tmp" as (
    

SELECT 
    customerID,
    customerName,
    contactNumber,
    Email,
    loyaltyStatus,
    RegionName AS regionName,
    flagActive,
    dbt_scd_id,
    dbt_valid_from,
    CASE
        WHEN flagActive = TRUE THEN dbt_valid_to
        ELSE NOW()
    END AS dbt_valid_to,
    dbt_updated_at
FROM "trial"."snapshots"."snp_customer"
  );

[0m20:30:45.691233 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:30:45.694970 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:30:45.695303 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */
alter view "trial"."main"."stg_customer" rename to "stg_customer__dbt_backup"
[0m20:30:45.696167 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:30:45.698579 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:30:45.698865 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */
alter view "trial"."main"."stg_customer__dbt_tmp" rename to "stg_customer"
[0m20:30:45.699604 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:30:45.700846 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: COMMIT
[0m20:30:45.701119 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:30:45.701345 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: COMMIT
[0m20:30:45.707307 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m20:30:45.709635 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:30:45.709961 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */
drop view if exists "trial"."main"."stg_customer__dbt_backup" cascade
[0m20:30:45.714269 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:30:45.715489 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: Close
[0m20:30:45.725120 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dabf0e37-528f-4452-b10e-fa421f46e88f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7facd4bb4710>]}
[0m20:30:45.726082 [info ] [Thread-1 (]: 2 of 8 OK created sql view model main.stg_customer ............................. [[32mOK[0m in 0.07s]
[0m20:30:45.727054 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_customer
[0m20:30:45.727662 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_product
[0m20:30:45.728257 [info ] [Thread-1 (]: 3 of 8 START sql view model main.stg_product ................................... [RUN]
[0m20:30:45.729014 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_customer, now model.dbt_duckdb_test.stg_product)
[0m20:30:45.729467 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_product
[0m20:30:45.731824 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_product"
[0m20:30:45.732241 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_product
[0m20:30:45.739026 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_product"
[0m20:30:45.739701 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:30:45.739995 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: BEGIN
[0m20:30:45.740263 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:30:45.747209 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:30:45.747819 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:30:45.748237 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */

  
  create view "trial"."main"."stg_product__dbt_tmp" as (
    

SELECT 
    *
FROM "trial"."snapshots"."snp_product"
  );

[0m20:30:45.749150 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:30:45.754119 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:30:45.756479 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */
alter view "trial"."main"."stg_product" rename to "stg_product__dbt_backup"
[0m20:30:45.757770 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:30:45.760474 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:30:45.760804 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */
alter view "trial"."main"."stg_product__dbt_tmp" rename to "stg_product"
[0m20:30:45.761512 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:30:45.762887 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: COMMIT
[0m20:30:45.763570 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:30:45.763854 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: COMMIT
[0m20:30:45.767608 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:30:45.769662 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:30:45.769938 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */
drop view if exists "trial"."main"."stg_product__dbt_backup" cascade
[0m20:30:45.774194 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:30:45.775454 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: Close
[0m20:30:45.788844 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dabf0e37-528f-4452-b10e-fa421f46e88f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7facd4afe050>]}
[0m20:30:45.789484 [info ] [Thread-1 (]: 3 of 8 OK created sql view model main.stg_product .............................. [[32mOK[0m in 0.06s]
[0m20:30:45.790480 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_product
[0m20:30:45.790917 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_transaction
[0m20:30:45.791399 [info ] [Thread-1 (]: 4 of 8 START sql view model main.stg_transaction ............................... [RUN]
[0m20:30:45.792320 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_product, now model.dbt_duckdb_test.stg_transaction)
[0m20:30:45.792642 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_transaction
[0m20:30:45.795551 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_transaction"
[0m20:30:45.796255 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_transaction
[0m20:30:45.799251 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_transaction"
[0m20:30:45.799717 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:30:45.799977 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: BEGIN
[0m20:30:45.800204 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:30:45.808998 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:30:45.809409 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:30:45.809674 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */

  
  create view "trial"."main"."stg_transaction__dbt_tmp" as (
    

SELECT 
    transactionId,
    customerId,
    productId,
    amount,
    transactionDate
FROM "trial"."snapshots"."snp_transaction"
  );

[0m20:30:45.810425 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:30:45.813786 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:30:45.814083 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */
alter view "trial"."main"."stg_transaction" rename to "stg_transaction__dbt_backup"
[0m20:30:45.814853 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:30:45.817311 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:30:45.817623 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */
alter view "trial"."main"."stg_transaction__dbt_tmp" rename to "stg_transaction"
[0m20:30:45.818281 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:30:45.819506 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: COMMIT
[0m20:30:45.819789 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:30:45.820014 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: COMMIT
[0m20:30:45.827371 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:30:45.830192 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:30:45.830507 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */
drop view if exists "trial"."main"."stg_transaction__dbt_backup" cascade
[0m20:30:45.834183 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:30:45.835421 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: Close
[0m20:30:45.846050 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dabf0e37-528f-4452-b10e-fa421f46e88f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7facd4d8de10>]}
[0m20:30:45.846706 [info ] [Thread-1 (]: 4 of 8 OK created sql view model main.stg_transaction .......................... [[32mOK[0m in 0.05s]
[0m20:30:45.847508 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_transaction
[0m20:30:45.848200 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.my_second_dbt_model
[0m20:30:45.848816 [info ] [Thread-1 (]: 5 of 8 START sql view model main.my_second_dbt_model ........................... [RUN]
[0m20:30:45.849612 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_transaction, now model.dbt_duckdb_test.my_second_dbt_model)
[0m20:30:45.849950 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.my_second_dbt_model
[0m20:30:45.852508 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:30:45.853107 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.my_second_dbt_model
[0m20:30:45.857164 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:30:45.857725 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:30:45.858035 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: BEGIN
[0m20:30:45.858505 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:30:45.865462 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:30:45.865865 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:30:45.866116 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */

  
  create view "trial"."main"."my_second_dbt_model__dbt_tmp" as (
    -- Use the `ref` function to select from other models

select *
from "trial"."main"."my_first_dbt_model"
where id = 1
  );

[0m20:30:45.866956 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:30:45.869523 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:30:45.869809 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */
alter view "trial"."main"."my_second_dbt_model" rename to "my_second_dbt_model__dbt_backup"
[0m20:30:45.870923 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:30:45.875435 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:30:45.875793 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */
alter view "trial"."main"."my_second_dbt_model__dbt_tmp" rename to "my_second_dbt_model"
[0m20:30:45.877082 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:30:45.878472 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: COMMIT
[0m20:30:45.878791 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:30:45.879106 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: COMMIT
[0m20:30:45.882835 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:30:45.884804 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:30:45.885097 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */
drop view if exists "trial"."main"."my_second_dbt_model__dbt_backup" cascade
[0m20:30:45.888432 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:30:45.889640 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: Close
[0m20:30:45.899596 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dabf0e37-528f-4452-b10e-fa421f46e88f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7facd4d046d0>]}
[0m20:30:45.900281 [info ] [Thread-1 (]: 5 of 8 OK created sql view model main.my_second_dbt_model ...................... [[32mOK[0m in 0.05s]
[0m20:30:45.901083 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.my_second_dbt_model
[0m20:30:45.901679 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.dim_customer
[0m20:30:45.902584 [info ] [Thread-1 (]: 6 of 8 START sql view model main.dim_customer .................................. [RUN]
[0m20:30:45.903265 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.my_second_dbt_model, now model.dbt_duckdb_test.dim_customer)
[0m20:30:45.903689 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.dim_customer
[0m20:30:45.906627 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.dim_customer"
[0m20:30:45.907379 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.dim_customer
[0m20:30:45.910263 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.dim_customer"
[0m20:30:45.911332 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:30:45.911637 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: BEGIN
[0m20:30:45.912249 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:30:45.918769 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:30:45.919119 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:30:45.919391 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */

  
  create view "trial"."main"."dim_customer__dbt_tmp" as (
    

WITH 
first_record AS (
    SELECT
        customerID AS customerId,
        min(dbt_valid_from)::TIMESTAMP AS created_time
    FROM
        "trial"."main"."stg_customer"
    GROUP BY
        customerID
),

cust AS (
    SELECT
        customerID AS customerId,
        regionName,
        customerName,
        contactNumber,	
        Email,	
        loyaltyStatus,
        CAST(dbt_valid_from AS TIMESTAMP) AS dbt_updated_at,	
        CAST(COALESCE(dbt_valid_to, '2999-12-31') AS TIMESTAMP) AS dbt_valid_to
    FROM
        "trial"."main"."stg_customer"
),

scust AS (
    SELECT
        cust.*,  -- Selecting all columns from the 'cust' CTE
        first_record.created_time  -- Adding the '_created_datetime' from 'first_record'
    FROM
        cust
    LEFT JOIN first_record
        ON cust.customerId = first_record.customerId
)

SELECT
    *
FROM
    scust
WHERE dbt_valid_to > NOW()
  );

[0m20:30:45.921229 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:30:45.924177 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:30:45.924463 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */
alter view "trial"."main"."dim_customer" rename to "dim_customer__dbt_backup"
[0m20:30:45.925251 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:30:45.927694 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:30:45.927986 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */
alter view "trial"."main"."dim_customer__dbt_tmp" rename to "dim_customer"
[0m20:30:45.928601 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:30:45.929748 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: COMMIT
[0m20:30:45.930019 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:30:45.930242 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: COMMIT
[0m20:30:45.934778 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:30:45.937190 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:30:45.937488 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */
drop view if exists "trial"."main"."dim_customer__dbt_backup" cascade
[0m20:30:45.941205 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:30:45.942541 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: Close
[0m20:30:45.952702 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dabf0e37-528f-4452-b10e-fa421f46e88f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7facbfc7f410>]}
[0m20:30:45.953328 [info ] [Thread-1 (]: 6 of 8 OK created sql view model main.dim_customer ............................. [[32mOK[0m in 0.05s]
[0m20:30:45.953959 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.dim_customer
[0m20:30:45.954544 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.dim_transaction
[0m20:30:45.955152 [info ] [Thread-1 (]: 7 of 8 START sql view model main.dim_transaction ............................... [RUN]
[0m20:30:45.959480 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.dim_customer, now model.dbt_duckdb_test.dim_transaction)
[0m20:30:45.959948 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.dim_transaction
[0m20:30:45.964363 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.dim_transaction"
[0m20:30:45.967118 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.dim_transaction
[0m20:30:45.990507 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:30:45.990919 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
DESCRIBE (select * from (
        

WITH product AS (
  SELECT *
  FROM "trial"."main"."stg_product" 
  WHERE dbt_valid_to IS NULL
),
transactions AS (
  SELECT
    t.transactionId,
    t.customerId,
    p.productId,
    p.productName,
    p.description,
    t.amount,
    t.transactionDate,
    p.discount,
    p.price,
    p.price - (p.price * (p.discount / 100.0)) AS finalPrice,
    p.dbt_valid_from,
    p.dbt_valid_to
  FROM
    "trial"."main"."stg_transaction" t
  JOIN
    product p ON t.productId = p.productId
)

SELECT
  dt.transactionId,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  (dt.discount / 100.0) as dicount,
  SUM(dt.finalPrice) * dt.amount AS finalPrice,
  dt.transactionDate
FROM
  transactions dt
GROUP BY
  dt.transactionId,
  dt.transactionDate,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  dicount
ORDER BY
  dt.transactionDate,
  dt.customerId
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:30:45.991709 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:30:46.001440 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m20:30:46.013304 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:30:46.013675 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
DESCRIBE (select * from (
        select
    
      
    cast(null as VARCHAR)
 as transactionId, 
      
    cast(null as VARCHAR)
 as customerId, 
      
    cast(null as VARCHAR)
 as productId, 
      
    cast(null as VARCHAR)
 as productName, 
      
    cast(null as VARCHAR)
 as description, 
      
    cast(null as BIGINT)
 as amount, 
      
    cast(null as DOUBLE)
 as price, 
      
    cast(null as DOUBLE)
 as dicount, 
      
    cast(null as DOUBLE)
 as finalPrice, 
      
    cast(null as TIMESTAMP)
 as transactionDate
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:30:46.014683 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:30:46.024336 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.dim_transaction"
[0m20:30:46.024853 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:30:46.025364 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: BEGIN
[0m20:30:46.026049 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:30:46.026329 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:30:46.026592 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */

  
    
  create view "trial"."main"."dim_transaction__dbt_tmp" as (
    

WITH product AS (
  SELECT *
  FROM "trial"."main"."stg_product" 
  WHERE dbt_valid_to IS NULL
),
transactions AS (
  SELECT
    t.transactionId,
    t.customerId,
    p.productId,
    p.productName,
    p.description,
    t.amount,
    t.transactionDate,
    p.discount,
    p.price,
    p.price - (p.price * (p.discount / 100.0)) AS finalPrice,
    p.dbt_valid_from,
    p.dbt_valid_to
  FROM
    "trial"."main"."stg_transaction" t
  JOIN
    product p ON t.productId = p.productId
)

SELECT
  dt.transactionId,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  (dt.discount / 100.0) as dicount,
  SUM(dt.finalPrice) * dt.amount AS finalPrice,
  dt.transactionDate
FROM
  transactions dt
GROUP BY
  dt.transactionId,
  dt.transactionDate,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  dicount
ORDER BY
  dt.transactionDate,
  dt.customerId
  );

[0m20:30:46.027787 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:30:46.030183 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:30:46.030463 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
alter view "trial"."main"."dim_transaction__dbt_tmp" rename to "dim_transaction"
[0m20:30:46.031374 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:30:46.033924 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: COMMIT
[0m20:30:46.034242 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:30:46.034507 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: COMMIT
[0m20:30:46.038887 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:30:46.041363 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:30:46.041664 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
drop view if exists "trial"."main"."dim_transaction__dbt_backup" cascade
[0m20:30:46.042349 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:30:46.043394 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: Close
[0m20:30:46.054490 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dabf0e37-528f-4452-b10e-fa421f46e88f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7facbfc63910>]}
[0m20:30:46.055111 [info ] [Thread-1 (]: 7 of 8 OK created sql view model main.dim_transaction .......................... [[32mOK[0m in 0.09s]
[0m20:30:46.055748 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.dim_transaction
[0m20:30:46.057121 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.fct_sale
[0m20:30:46.057561 [info ] [Thread-1 (]: 8 of 8 START sql view model main.fct_sale ...................................... [RUN]
[0m20:30:46.058201 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.dim_transaction, now model.dbt_duckdb_test.fct_sale)
[0m20:30:46.058519 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.fct_sale
[0m20:30:46.061440 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.fct_sale"
[0m20:30:46.061865 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.fct_sale
[0m20:30:46.064600 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.fct_sale"
[0m20:30:46.065021 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:30:46.065265 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: BEGIN
[0m20:30:46.065473 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:30:46.073002 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:30:46.073383 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:30:46.073651 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.fct_sale"} */

  
  create view "trial"."main"."fct_sale__dbt_tmp" as (
    
WITH
customer_total_spend AS (
    SELECT
        scust.customerId,
        scust.customerName,
        scust.regionName,
        SUM(transactions.finalPrice) AS totalSpend
    FROM
        "trial"."main"."dim_customer" scust
    JOIN
        "trial"."main"."dim_transaction" transactions ON scust.customerId = transactions.customerId
    WHERE scust.dbt_valid_to > NOW() 
    GROUP BY
        scust.customerId,
        scust.customerName,
        scust.regionName
)

SELECT * FROM customer_total_spend
  );

[0m20:30:46.075150 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:30:46.078239 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:30:46.078539 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.fct_sale"} */
alter view "trial"."main"."fct_sale__dbt_tmp" rename to "fct_sale"
[0m20:30:46.079397 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:30:46.080982 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: COMMIT
[0m20:30:46.081292 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:30:46.081553 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: COMMIT
[0m20:30:46.087244 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:30:46.089087 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:30:46.089631 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.fct_sale"} */
drop view if exists "trial"."main"."fct_sale__dbt_backup" cascade
[0m20:30:46.091205 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:30:46.092845 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: Close
[0m20:30:46.102812 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'dabf0e37-528f-4452-b10e-fa421f46e88f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7facde453490>]}
[0m20:30:46.103442 [info ] [Thread-1 (]: 8 of 8 OK created sql view model main.fct_sale ................................. [[32mOK[0m in 0.04s]
[0m20:30:46.104092 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.fct_sale
[0m20:30:46.105853 [debug] [MainThread]: Using duckdb connection "master"
[0m20:30:46.106189 [debug] [MainThread]: On master: BEGIN
[0m20:30:46.106504 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:30:46.113039 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m20:30:46.113383 [debug] [MainThread]: On master: COMMIT
[0m20:30:46.113608 [debug] [MainThread]: Using duckdb connection "master"
[0m20:30:46.113800 [debug] [MainThread]: On master: COMMIT
[0m20:30:46.114302 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:30:46.114575 [debug] [MainThread]: On master: Close
[0m20:30:46.116989 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:30:46.117357 [debug] [MainThread]: Connection 'list_trial_main' was properly closed.
[0m20:30:46.117572 [debug] [MainThread]: Connection 'model.dbt_duckdb_test.fct_sale' was properly closed.
[0m20:30:46.118085 [info ] [MainThread]: 
[0m20:30:46.119360 [info ] [MainThread]: Finished running 1 table model, 7 view models in 0 hours 0 minutes and 0.82 seconds (0.82s).
[0m20:30:46.120981 [debug] [MainThread]: Command end result
[0m20:30:46.141715 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:30:46.143409 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:30:46.148534 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:30:46.149153 [info ] [MainThread]: 
[0m20:30:46.150200 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:30:46.150661 [info ] [MainThread]: 
[0m20:30:46.151899 [info ] [MainThread]: Done. PASS=8 WARN=0 ERROR=0 SKIP=0 TOTAL=8
[0m20:30:46.153730 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 2.1199222, "process_in_blocks": "152976", "process_kernel_time": 0.269452, "process_mem_max_rss": "172020", "process_out_blocks": "8144", "process_user_time": 2.924059}
[0m20:30:46.154103 [debug] [MainThread]: Command `dbt run` succeeded at 20:30:46.154013 after 2.12 seconds
[0m20:30:46.154383 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7face21e9150>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7face21e86d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7facbf0e4e90>]}
[0m20:30:46.154646 [debug] [MainThread]: Flushing usage events
[0m20:30:47.898042 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:31:54.935729 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3b4824ef90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3b48758150>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3b4874fe50>]}


============================== 20:31:54.940300 | 70a49d53-c23a-49e6-ae31-a415c2410537 ==============================
[0m20:31:54.940300 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:31:54.941164 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'debug': 'False', 'fail_fast': 'False', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'profiles_dir': '/home/rani/.dbt', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'invocation_command': 'dbt snapshot', 'send_anonymous_usage_stats': 'True'}
[0m20:31:55.260395 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '70a49d53-c23a-49e6-ae31-a415c2410537', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3b44ac7650>]}
[0m20:31:55.313341 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '70a49d53-c23a-49e6-ae31-a415c2410537', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3b4a48e750>]}
[0m20:31:55.316098 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:31:55.392083 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:31:55.546792 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m20:31:55.547242 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m20:31:55.553460 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:31:55.614960 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '70a49d53-c23a-49e6-ae31-a415c2410537', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3b3e794790>]}
[0m20:31:55.707138 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:31:55.711817 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:31:55.741013 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '70a49d53-c23a-49e6-ae31-a415c2410537', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3b44add250>]}
[0m20:31:55.741725 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:31:55.742313 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '70a49d53-c23a-49e6-ae31-a415c2410537', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3b3e6cbad0>]}
[0m20:31:55.745239 [info ] [MainThread]: 
[0m20:31:55.747101 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:31:55.747904 [info ] [MainThread]: 
[0m20:31:55.748870 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:31:55.754288 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:31:55.798071 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:31:55.798639 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:31:55.799064 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:31:55.823012 [debug] [ThreadPool]: SQL status: OK in 0.024 seconds
[0m20:31:55.824613 [debug] [ThreadPool]: On list_trial: Close
[0m20:31:55.827216 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_snapshots)
[0m20:31:55.827673 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "snapshots"
"
[0m20:31:55.833748 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:31:55.834058 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:31:55.834289 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:31:55.840877 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:31:55.842088 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:31:55.842341 [debug] [ThreadPool]: On create_trial_snapshots: BEGIN
[0m20:31:55.843871 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:31:55.844226 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:31:55.844455 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
    
        create schema if not exists "trial"."snapshots"
    
[0m20:31:55.845518 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:31:55.846392 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:31:55.846789 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:31:55.847476 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:31:55.848738 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:31:55.849163 [debug] [ThreadPool]: On create_trial_snapshots: Close
[0m20:31:55.852519 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_snapshots, now list_trial_snapshots)
[0m20:31:55.858630 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:31:55.859068 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:31:55.859467 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:31:55.866514 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:31:55.866861 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:31:55.867248 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:31:55.892232 [debug] [ThreadPool]: SQL status: OK in 0.025 seconds
[0m20:31:55.895060 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:31:55.896427 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:31:55.896732 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:31:55.899996 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_snapshots, now list_trial_main)
[0m20:31:55.902779 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:31:55.903118 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:31:55.903344 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:31:55.915325 [debug] [ThreadPool]: SQL status: OK in 0.012 seconds
[0m20:31:55.915888 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:31:55.916244 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:31:55.940707 [debug] [ThreadPool]: SQL status: OK in 0.024 seconds
[0m20:31:55.942105 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:31:55.942673 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:31:55.942971 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:31:55.949196 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '70a49d53-c23a-49e6-ae31-a415c2410537', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3b3e8341d0>]}
[0m20:31:55.949712 [debug] [MainThread]: Using duckdb connection "master"
[0m20:31:55.949954 [debug] [MainThread]: On master: BEGIN
[0m20:31:55.950147 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:31:55.958609 [debug] [MainThread]: SQL status: OK in 0.008 seconds
[0m20:31:55.958990 [debug] [MainThread]: On master: COMMIT
[0m20:31:55.959228 [debug] [MainThread]: Using duckdb connection "master"
[0m20:31:55.959423 [debug] [MainThread]: On master: COMMIT
[0m20:31:55.959943 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:31:55.960232 [debug] [MainThread]: On master: Close
[0m20:31:55.965264 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_customer
[0m20:31:55.965947 [info ] [Thread-1 (]: 1 of 3 START snapshot snapshots.snp_customer ................................... [RUN]
[0m20:31:55.966634 [debug] [Thread-1 (]: Acquiring new duckdb connection 'snapshot.dbt_duckdb_test.snp_customer'
[0m20:31:55.967222 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_customer
[0m20:31:55.975327 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_customer
[0m20:31:56.034514 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:31:56.035269 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
select * from (
        
    

    select *
    from '/tmp/customer.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:31:56.035556 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:31:56.051301 [debug] [Thread-1 (]: SQL status: OK in 0.016 seconds
[0m20:31:56.058334 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:31:56.058716 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: BEGIN
[0m20:31:56.059409 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:31:56.059724 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:31:56.059968 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:31:56.079581 [debug] [Thread-1 (]: SQL status: OK in 0.019 seconds
[0m20:31:56.087050 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:31:56.087464 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:31:56.090750 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:31:56.152132 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:31:56.152733 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

        
  
    
    

    create  table
      "snp_customer__dbt_tmp20250125203156142414"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:31:56.174722 [debug] [Thread-1 (]: SQL status: OK in 0.021 seconds
[0m20:31:56.178136 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:31:56.178515 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125203156142414'
      
      
      order by ordinal_position

  
[0m20:31:56.182073 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:31:56.184950 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:31:56.185310 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:31:56.190571 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:31:56.193459 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:31:56.193797 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125203156142414'
      
      
      order by ordinal_position

  
[0m20:31:56.197053 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:31:56.199731 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:31:56.200033 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:31:56.204268 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:31:56.210986 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:31:56.211348 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125203156142414'
      
      
      order by ordinal_position

  
[0m20:31:56.214381 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:31:56.225332 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:31:56.225852 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:31:56.230718 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:31:56.233549 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:31:56.233860 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:31:56.234858 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:31:56.235399 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_customer"
[0m20:31:56.237161 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:31:56.237510 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      update "trial"."snapshots"."snp_customer" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_customer__dbt_tmp20250125203156142414" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_customer" ("customerID", "RegionName", "customerName", "contactNumber", "Email", "loyaltyStatus", "flagActive", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."customerID",DBT_INTERNAL_SOURCE."RegionName",DBT_INTERNAL_SOURCE."customerName",DBT_INTERNAL_SOURCE."contactNumber",DBT_INTERNAL_SOURCE."Email",DBT_INTERNAL_SOURCE."loyaltyStatus",DBT_INTERNAL_SOURCE."flagActive",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_customer__dbt_tmp20250125203156142414" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:31:56.240637 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:31:56.249340 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:31:56.249727 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:31:56.250020 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:31:56.256128 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:31:56.260995 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:31:56.261314 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
drop table if exists "snp_customer__dbt_tmp20250125203156142414" cascade
[0m20:31:56.265522 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:31:56.268176 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: Close
[0m20:31:56.288420 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '70a49d53-c23a-49e6-ae31-a415c2410537', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3b3cef7750>]}
[0m20:31:56.289180 [info ] [Thread-1 (]: 1 of 3 OK snapshotted snapshots.snp_customer ................................... [[32mOK[0m in 0.32s]
[0m20:31:56.289850 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_customer
[0m20:31:56.290451 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_product
[0m20:31:56.291108 [info ] [Thread-1 (]: 2 of 3 START snapshot snapshots.snp_product .................................... [RUN]
[0m20:31:56.291680 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_customer, now snapshot.dbt_duckdb_test.snp_product)
[0m20:31:56.291996 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_product
[0m20:31:56.295870 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_product
[0m20:31:56.301024 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:31:56.301392 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
select * from (
        
    

    select *
    from '/tmp/product.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:31:56.302189 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:31:56.310604 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:31:56.313733 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:31:56.314195 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: BEGIN
[0m20:31:56.315185 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:31:56.315492 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:31:56.315804 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:31:56.348885 [debug] [Thread-1 (]: SQL status: OK in 0.033 seconds
[0m20:31:56.353304 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:31:56.353692 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:31:56.358501 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:31:56.361459 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:31:56.361934 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

        
  
    
    

    create  table
      "snp_product__dbt_tmp20250125203156360502"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:31:56.372760 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m20:31:56.375021 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:31:56.375325 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125203156360502'
      
      
      order by ordinal_position

  
[0m20:31:56.379671 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:31:56.382456 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:31:56.382765 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:31:56.387186 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:31:56.389753 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:31:56.390057 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125203156360502'
      
      
      order by ordinal_position

  
[0m20:31:56.392891 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:31:56.395323 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:31:56.395626 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:31:56.409251 [debug] [Thread-1 (]: SQL status: OK in 0.013 seconds
[0m20:31:56.412590 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:31:56.413033 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125203156360502'
      
      
      order by ordinal_position

  
[0m20:31:56.417488 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:31:56.419340 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:31:56.419792 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:31:56.424046 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:31:56.424903 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:31:56.425189 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:31:56.426181 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:31:56.426696 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_product"
[0m20:31:56.427444 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:31:56.428060 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      update "trial"."snapshots"."snp_product" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_product__dbt_tmp20250125203156360502" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_product" ("productId", "productName", "description", "price", "discount", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."productName",DBT_INTERNAL_SOURCE."description",DBT_INTERNAL_SOURCE."price",DBT_INTERNAL_SOURCE."discount",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_product__dbt_tmp20250125203156360502" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:31:56.430271 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:31:56.431465 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:31:56.431788 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:31:56.432023 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:31:56.436449 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:31:56.437631 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:31:56.437918 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
drop table if exists "snp_product__dbt_tmp20250125203156360502" cascade
[0m20:31:56.441150 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:31:56.442324 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: Close
[0m20:31:56.453723 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '70a49d53-c23a-49e6-ae31-a415c2410537', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3b3c104050>]}
[0m20:31:56.454448 [info ] [Thread-1 (]: 2 of 3 OK snapshotted snapshots.snp_product .................................... [[32mOK[0m in 0.16s]
[0m20:31:56.455072 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_product
[0m20:31:56.455773 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:31:56.456366 [info ] [Thread-1 (]: 3 of 3 START snapshot snapshots.snp_transaction ................................ [RUN]
[0m20:31:56.456971 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_product, now snapshot.dbt_duckdb_test.snp_transaction)
[0m20:31:56.457771 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_transaction
[0m20:31:56.461750 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_transaction
[0m20:31:56.473802 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:31:56.474177 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: BEGIN
[0m20:31:56.474426 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:31:56.483594 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:31:56.483998 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:31:56.484277 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:31:56.513786 [debug] [Thread-1 (]: SQL status: OK in 0.029 seconds
[0m20:31:56.516485 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:31:56.516881 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

        
  
    
    

    create  table
      "snp_transaction__dbt_tmp20250125203156515688"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        transactionId as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            
  
  coalesce(nullif(transactionDate, transactionDate), null)
  as dbt_valid_to
,
            md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(transactionDate as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            transactionDate as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data.dbt_valid_from < source_data.transactionDate))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.dbt_valid_from < source_data.transactionDate)
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:31:56.525830 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:31:56.528681 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:31:56.529005 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125203156515688'
      
      
      order by ordinal_position

  
[0m20:31:56.533106 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:31:56.535798 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:31:56.536108 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:31:56.540347 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:31:56.542942 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:31:56.543248 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125203156515688'
      
      
      order by ordinal_position

  
[0m20:31:56.546133 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:31:56.549308 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:31:56.549643 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:31:56.553521 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:31:56.556234 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:31:56.556530 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125203156515688'
      
      
      order by ordinal_position

  
[0m20:31:56.559739 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:31:56.561718 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:31:56.562073 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        transactionId as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            
  
  coalesce(nullif(transactionDate, transactionDate), null)
  as dbt_valid_to
,
            md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(transactionDate as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            transactionDate as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data.dbt_valid_from < source_data.transactionDate))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.dbt_valid_from < source_data.transactionDate)
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:31:56.564390 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:31:56.565337 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:31:56.565664 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:31:56.566678 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:31:56.567231 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:31:56.568590 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:31:56.568923 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      update "trial"."snapshots"."snp_transaction" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_transaction__dbt_tmp20250125203156515688" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_transaction" ("transactionId", "customerId", "productId", "amount", "transactionDate", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."transactionId",DBT_INTERNAL_SOURCE."customerId",DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."amount",DBT_INTERNAL_SOURCE."transactionDate",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_transaction__dbt_tmp20250125203156515688" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:31:56.571155 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:31:56.572311 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:31:56.572589 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:31:56.572816 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:31:56.577218 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:31:56.578303 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:31:56.578614 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
drop table if exists "snp_transaction__dbt_tmp20250125203156515688" cascade
[0m20:31:56.581601 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:31:56.582711 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: Close
[0m20:31:56.596044 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '70a49d53-c23a-49e6-ae31-a415c2410537', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3b3e517010>]}
[0m20:31:56.597370 [info ] [Thread-1 (]: 3 of 3 OK snapshotted snapshots.snp_transaction ................................ [[32mOK[0m in 0.14s]
[0m20:31:56.598442 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:31:56.600305 [debug] [MainThread]: Using duckdb connection "master"
[0m20:31:56.600709 [debug] [MainThread]: On master: BEGIN
[0m20:31:56.601212 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:31:56.609378 [debug] [MainThread]: SQL status: OK in 0.008 seconds
[0m20:31:56.609751 [debug] [MainThread]: On master: COMMIT
[0m20:31:56.609995 [debug] [MainThread]: Using duckdb connection "master"
[0m20:31:56.610195 [debug] [MainThread]: On master: COMMIT
[0m20:31:56.610696 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:31:56.610991 [debug] [MainThread]: On master: Close
[0m20:31:56.612945 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:31:56.613235 [debug] [MainThread]: Connection 'list_trial_main' was properly closed.
[0m20:31:56.613445 [debug] [MainThread]: Connection 'snapshot.dbt_duckdb_test.snp_transaction' was properly closed.
[0m20:31:56.613692 [info ] [MainThread]: 
[0m20:31:56.614012 [info ] [MainThread]: Finished running 3 snapshots in 0 hours 0 minutes and 0.87 seconds (0.87s).
[0m20:31:56.615350 [debug] [MainThread]: Command end result
[0m20:31:56.682935 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:31:56.684472 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:31:56.690396 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:31:56.690672 [info ] [MainThread]: 
[0m20:31:56.691388 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:31:56.691888 [info ] [MainThread]: 
[0m20:31:56.692406 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m20:31:56.694499 [debug] [MainThread]: Resource report: {"command_name": "snapshot", "command_success": true, "command_wall_clock_time": 1.8085929, "process_in_blocks": "155920", "process_kernel_time": 0.233637, "process_mem_max_rss": "186164", "process_out_blocks": "3880", "process_user_time": 2.7355}
[0m20:31:56.694861 [debug] [MainThread]: Command `dbt snapshot` succeeded at 20:31:56.694782 after 1.81 seconds
[0m20:31:56.695175 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3b4beed110>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3b4beec690>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3b4beed590>]}
[0m20:31:56.695483 [debug] [MainThread]: Flushing usage events
[0m20:31:58.141951 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:32:42.319985 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f00f1d756d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f00f2169cd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f00f2169a90>]}


============================== 20:32:42.323975 | 05b0f3a3-6de2-421b-aeb0-ff4ac90013b2 ==============================
[0m20:32:42.323975 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:32:42.324833 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/rani/.dbt', 'debug': 'False', 'warn_error': 'None', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'fail_fast': 'False', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'invocation_command': 'dbt snapshot', 'log_format': 'default', 'target_path': 'None', 'introspect': 'True', 'send_anonymous_usage_stats': 'True'}
[0m20:32:42.504600 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '05b0f3a3-6de2-421b-aeb0-ff4ac90013b2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f00f2451010>]}
[0m20:32:42.554374 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '05b0f3a3-6de2-421b-aeb0-ff4ac90013b2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f00f3fc2c90>]}
[0m20:32:42.556569 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:32:42.651708 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:32:42.809318 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m20:32:42.809951 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m20:32:42.825787 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:32:42.900772 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '05b0f3a3-6de2-421b-aeb0-ff4ac90013b2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f00f1c2be10>]}
[0m20:32:43.010632 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:32:43.013832 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:32:43.028823 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '05b0f3a3-6de2-421b-aeb0-ff4ac90013b2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f00e834ff50>]}
[0m20:32:43.029581 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:32:43.030163 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '05b0f3a3-6de2-421b-aeb0-ff4ac90013b2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f00e350bb10>]}
[0m20:32:43.032892 [info ] [MainThread]: 
[0m20:32:43.033266 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:32:43.033541 [info ] [MainThread]: 
[0m20:32:43.033997 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:32:43.041489 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:32:43.074416 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:32:43.074813 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:32:43.075059 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:32:43.084542 [debug] [ThreadPool]: SQL status: OK in 0.009 seconds
[0m20:32:43.085797 [debug] [ThreadPool]: On list_trial: Close
[0m20:32:43.089009 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_snapshots)
[0m20:32:43.089522 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "snapshots"
"
[0m20:32:43.095513 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:32:43.095833 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:32:43.096107 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:32:43.102917 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:32:43.105232 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:32:43.105894 [debug] [ThreadPool]: On create_trial_snapshots: BEGIN
[0m20:32:43.106727 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:32:43.107227 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:32:43.107509 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
    
        create schema if not exists "trial"."snapshots"
    
[0m20:32:43.108117 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:32:43.108916 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:32:43.109185 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:32:43.109393 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:32:43.109897 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:32:43.110196 [debug] [ThreadPool]: On create_trial_snapshots: Close
[0m20:32:43.113534 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_snapshots, now list_trial_snapshots)
[0m20:32:43.118619 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:32:43.118935 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:32:43.119142 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:32:43.128819 [debug] [ThreadPool]: SQL status: OK in 0.010 seconds
[0m20:32:43.129222 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:32:43.129478 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:32:43.152291 [debug] [ThreadPool]: SQL status: OK in 0.022 seconds
[0m20:32:43.153801 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:32:43.155348 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:32:43.155760 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:32:43.159973 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_snapshots, now list_trial_main)
[0m20:32:43.162800 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:32:43.163140 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:32:43.163351 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:32:43.169293 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:32:43.169620 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:32:43.169857 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:32:43.189179 [debug] [ThreadPool]: SQL status: OK in 0.019 seconds
[0m20:32:43.191107 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:32:43.191971 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:32:43.192267 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:32:43.195448 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '05b0f3a3-6de2-421b-aeb0-ff4ac90013b2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f00e8320e10>]}
[0m20:32:43.195926 [debug] [MainThread]: Using duckdb connection "master"
[0m20:32:43.196176 [debug] [MainThread]: On master: BEGIN
[0m20:32:43.196372 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:32:43.202550 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m20:32:43.202934 [debug] [MainThread]: On master: COMMIT
[0m20:32:43.203213 [debug] [MainThread]: Using duckdb connection "master"
[0m20:32:43.203434 [debug] [MainThread]: On master: COMMIT
[0m20:32:43.204125 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:32:43.205078 [debug] [MainThread]: On master: Close
[0m20:32:43.209162 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_customer
[0m20:32:43.209646 [info ] [Thread-1 (]: 1 of 3 START snapshot snapshots.snp_customer ................................... [RUN]
[0m20:32:43.210144 [debug] [Thread-1 (]: Acquiring new duckdb connection 'snapshot.dbt_duckdb_test.snp_customer'
[0m20:32:43.210416 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_customer
[0m20:32:43.216401 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_customer
[0m20:32:43.270059 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:32:43.270452 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
select * from (
        
    

    select *
    from '/tmp/customer.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:32:43.271003 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:32:43.289445 [debug] [Thread-1 (]: SQL status: OK in 0.018 seconds
[0m20:32:43.296388 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:32:43.296923 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: BEGIN
[0m20:32:43.297802 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:32:43.298182 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:32:43.298535 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:32:43.318879 [debug] [Thread-1 (]: SQL status: OK in 0.020 seconds
[0m20:32:43.326727 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:32:43.327212 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:32:43.332592 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:32:43.370731 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:32:43.371884 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

        
  
    
    

    create  table
      "snp_customer__dbt_tmp20250125203243363691"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:32:43.386111 [debug] [Thread-1 (]: SQL status: OK in 0.013 seconds
[0m20:32:43.389406 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:32:43.389783 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125203243363691'
      
      
      order by ordinal_position

  
[0m20:32:43.393451 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:32:43.396357 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:32:43.396708 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:32:43.399836 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:32:43.402418 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:32:43.402717 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125203243363691'
      
      
      order by ordinal_position

  
[0m20:32:43.406327 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:32:43.409202 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:32:43.409528 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:32:43.412552 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:32:43.418407 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:32:43.418749 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125203243363691'
      
      
      order by ordinal_position

  
[0m20:32:43.422443 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:32:43.433546 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:32:43.434085 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:32:43.439626 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:32:43.442615 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:32:43.442972 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:32:43.444239 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:32:43.444812 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_customer"
[0m20:32:43.445348 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:32:43.445658 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      update "trial"."snapshots"."snp_customer" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_customer__dbt_tmp20250125203243363691" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_customer" ("customerID", "RegionName", "customerName", "contactNumber", "Email", "loyaltyStatus", "flagActive", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."customerID",DBT_INTERNAL_SOURCE."RegionName",DBT_INTERNAL_SOURCE."customerName",DBT_INTERNAL_SOURCE."contactNumber",DBT_INTERNAL_SOURCE."Email",DBT_INTERNAL_SOURCE."loyaltyStatus",DBT_INTERNAL_SOURCE."flagActive",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_customer__dbt_tmp20250125203243363691" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:32:43.447810 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:32:43.456558 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:32:43.457076 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:32:43.457351 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:32:43.462400 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:32:43.467271 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:32:43.467611 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
drop table if exists "snp_customer__dbt_tmp20250125203243363691" cascade
[0m20:32:43.472016 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:32:43.474904 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: Close
[0m20:32:43.491631 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '05b0f3a3-6de2-421b-aeb0-ff4ac90013b2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f00d810b6d0>]}
[0m20:32:43.492869 [info ] [Thread-1 (]: 1 of 3 OK snapshotted snapshots.snp_customer ................................... [[32mOK[0m in 0.28s]
[0m20:32:43.493439 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_customer
[0m20:32:43.493828 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_product
[0m20:32:43.494233 [info ] [Thread-1 (]: 2 of 3 START snapshot snapshots.snp_product .................................... [RUN]
[0m20:32:43.494918 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_customer, now snapshot.dbt_duckdb_test.snp_product)
[0m20:32:43.495281 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_product
[0m20:32:43.497774 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_product
[0m20:32:43.500490 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:32:43.500775 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
select * from (
        
    

    select *
    from '/tmp/product.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:32:43.501009 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:32:43.510675 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:32:43.513635 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:32:43.514031 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: BEGIN
[0m20:32:43.514543 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:32:43.514888 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:32:43.515134 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:32:43.538043 [debug] [Thread-1 (]: SQL status: OK in 0.022 seconds
[0m20:32:43.542370 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:32:43.542925 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:32:43.546006 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:32:43.548780 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:32:43.549217 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

        
  
    
    

    create  table
      "snp_product__dbt_tmp20250125203243547986"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:32:43.560521 [debug] [Thread-1 (]: SQL status: OK in 0.011 seconds
[0m20:32:43.564018 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:32:43.564356 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125203243547986'
      
      
      order by ordinal_position

  
[0m20:32:43.567235 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:32:43.570046 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:32:43.570356 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:32:43.574745 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:32:43.578271 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:32:43.578837 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125203243547986'
      
      
      order by ordinal_position

  
[0m20:32:43.582299 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:32:43.585063 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:32:43.585371 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:32:43.588526 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:32:43.592940 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:32:43.593404 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125203243547986'
      
      
      order by ordinal_position

  
[0m20:32:43.596449 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:32:43.598287 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:32:43.598713 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:32:43.603118 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:32:43.604014 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:32:43.604571 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:32:43.606854 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:32:43.607637 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_product"
[0m20:32:43.608151 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:32:43.608452 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      update "trial"."snapshots"."snp_product" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_product__dbt_tmp20250125203243547986" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_product" ("productId", "productName", "description", "price", "discount", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."productName",DBT_INTERNAL_SOURCE."description",DBT_INTERNAL_SOURCE."price",DBT_INTERNAL_SOURCE."discount",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_product__dbt_tmp20250125203243547986" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:32:43.610643 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:32:43.611939 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:32:43.612251 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:32:43.612484 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:32:43.617728 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:32:43.618479 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:32:43.618744 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
drop table if exists "snp_product__dbt_tmp20250125203243547986" cascade
[0m20:32:43.623210 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:32:43.624841 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: Close
[0m20:32:43.637464 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '05b0f3a3-6de2-421b-aeb0-ff4ac90013b2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f00d811de10>]}
[0m20:32:43.638668 [info ] [Thread-1 (]: 2 of 3 OK snapshotted snapshots.snp_product .................................... [[32mOK[0m in 0.14s]
[0m20:32:43.639466 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_product
[0m20:32:43.639834 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:32:43.640574 [info ] [Thread-1 (]: 3 of 3 START snapshot snapshots.snp_transaction ................................ [RUN]
[0m20:32:43.641304 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_product, now snapshot.dbt_duckdb_test.snp_transaction)
[0m20:32:43.641688 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_transaction
[0m20:32:43.644594 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_transaction
[0m20:32:43.654031 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:32:43.654396 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: BEGIN
[0m20:32:43.656547 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:32:43.663541 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:32:43.663970 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:32:43.664243 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:32:43.687488 [debug] [Thread-1 (]: SQL status: OK in 0.023 seconds
[0m20:32:43.691930 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:32:43.692510 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

        
  
    
    

    create  table
      "snp_transaction__dbt_tmp20250125203243691087"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        transactionId as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            
  
  coalesce(nullif(transactionDate, transactionDate), null)
  as dbt_valid_to
,
            md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(transactionDate as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            transactionDate as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data.dbt_valid_from < source_data.transactionDate))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.dbt_valid_from < source_data.transactionDate)
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:32:43.698378 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:32:43.700718 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:32:43.701068 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125203243691087'
      
      
      order by ordinal_position

  
[0m20:32:43.704348 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:32:43.707742 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:32:43.708079 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:32:43.711350 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:32:43.714143 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:32:43.714459 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125203243691087'
      
      
      order by ordinal_position

  
[0m20:32:43.717220 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:32:43.719997 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:32:43.720315 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:32:43.723921 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:32:43.726995 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:32:43.727323 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125203243691087'
      
      
      order by ordinal_position

  
[0m20:32:43.730160 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:32:43.732090 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:32:43.732433 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        transactionId as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            
  
  coalesce(nullif(transactionDate, transactionDate), null)
  as dbt_valid_to
,
            md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(transactionDate as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            transactionDate as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data.dbt_valid_from < source_data.transactionDate))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.dbt_valid_from < source_data.transactionDate)
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:32:43.734905 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:32:43.735835 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:32:43.736108 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:32:43.737147 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:32:43.737720 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:32:43.738897 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:32:43.739335 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      update "trial"."snapshots"."snp_transaction" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_transaction__dbt_tmp20250125203243691087" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_transaction" ("transactionId", "customerId", "productId", "amount", "transactionDate", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."transactionId",DBT_INTERNAL_SOURCE."customerId",DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."amount",DBT_INTERNAL_SOURCE."transactionDate",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_transaction__dbt_tmp20250125203243691087" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:32:43.742102 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:32:43.743746 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:32:43.744063 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:32:43.744298 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:32:43.748871 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:32:43.749557 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:32:43.749821 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
drop table if exists "snp_transaction__dbt_tmp20250125203243691087" cascade
[0m20:32:43.753752 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:32:43.755967 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: Close
[0m20:32:43.768801 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '05b0f3a3-6de2-421b-aeb0-ff4ac90013b2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f00e2a752d0>]}
[0m20:32:43.769587 [info ] [Thread-1 (]: 3 of 3 OK snapshotted snapshots.snp_transaction ................................ [[32mOK[0m in 0.13s]
[0m20:32:43.770102 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:32:43.771998 [debug] [MainThread]: Using duckdb connection "master"
[0m20:32:43.772656 [debug] [MainThread]: On master: BEGIN
[0m20:32:43.773650 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:32:43.780276 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:32:43.780649 [debug] [MainThread]: On master: COMMIT
[0m20:32:43.780893 [debug] [MainThread]: Using duckdb connection "master"
[0m20:32:43.781101 [debug] [MainThread]: On master: COMMIT
[0m20:32:43.781589 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:32:43.781852 [debug] [MainThread]: On master: Close
[0m20:32:43.783687 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:32:43.783985 [debug] [MainThread]: Connection 'list_trial_main' was properly closed.
[0m20:32:43.784172 [debug] [MainThread]: Connection 'snapshot.dbt_duckdb_test.snp_transaction' was properly closed.
[0m20:32:43.784428 [info ] [MainThread]: 
[0m20:32:43.784745 [info ] [MainThread]: Finished running 3 snapshots in 0 hours 0 minutes and 0.75 seconds (0.75s).
[0m20:32:43.785476 [debug] [MainThread]: Command end result
[0m20:32:43.867561 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:32:43.869500 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:32:43.876111 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:32:43.876748 [info ] [MainThread]: 
[0m20:32:43.877992 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:32:43.878483 [info ] [MainThread]: 
[0m20:32:43.878903 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m20:32:43.880037 [debug] [MainThread]: Resource report: {"command_name": "snapshot", "command_success": true, "command_wall_clock_time": 1.6140026, "process_in_blocks": "0", "process_kernel_time": 0.219851, "process_mem_max_rss": "178440", "process_out_blocks": "3880", "process_user_time": 2.668195}
[0m20:32:43.880391 [debug] [MainThread]: Command `dbt snapshot` succeeded at 20:32:43.880313 after 1.61 seconds
[0m20:32:43.880718 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f00f5a1d050>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f00f5a1c710>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f00e85f1450>]}
[0m20:32:43.881014 [debug] [MainThread]: Flushing usage events
[0m20:32:45.187749 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:33:39.438242 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f40da385810>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f40da385450>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f40da385210>]}


============================== 20:33:39.442722 | 00815228-283e-4eca-a466-a04b7440bbe6 ==============================
[0m20:33:39.442722 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:33:39.443380 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/rani/.dbt', 'version_check': 'True', 'warn_error': 'None', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'debug': 'False', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'log_format': 'default', 'invocation_command': 'dbt snapshot', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m20:33:39.757885 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '00815228-283e-4eca-a466-a04b7440bbe6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f40da22bc50>]}
[0m20:33:39.810294 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '00815228-283e-4eca-a466-a04b7440bbe6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f40dc5ab6d0>]}
[0m20:33:39.813330 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:33:39.894570 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:33:40.053402 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m20:33:40.054133 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m20:33:40.060179 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:33:40.112967 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '00815228-283e-4eca-a466-a04b7440bbe6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f40d08baed0>]}
[0m20:33:40.199502 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:33:40.203685 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:33:40.227139 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '00815228-283e-4eca-a466-a04b7440bbe6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f40d0953b10>]}
[0m20:33:40.227897 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:33:40.228342 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '00815228-283e-4eca-a466-a04b7440bbe6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f40d0a8ddd0>]}
[0m20:33:40.230649 [info ] [MainThread]: 
[0m20:33:40.231182 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:33:40.231668 [info ] [MainThread]: 
[0m20:33:40.232634 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:33:40.236746 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:33:40.274138 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:33:40.274513 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:33:40.274744 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:33:40.292952 [debug] [ThreadPool]: SQL status: OK in 0.018 seconds
[0m20:33:40.294194 [debug] [ThreadPool]: On list_trial: Close
[0m20:33:40.297264 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_snapshots)
[0m20:33:40.297701 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "snapshots"
"
[0m20:33:40.303488 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:33:40.303859 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:33:40.304073 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:33:40.310620 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:33:40.312399 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:33:40.312671 [debug] [ThreadPool]: On create_trial_snapshots: BEGIN
[0m20:33:40.313244 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:33:40.313499 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:33:40.313692 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
    
        create schema if not exists "trial"."snapshots"
    
[0m20:33:40.314710 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:33:40.315419 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:33:40.315657 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:33:40.315853 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:33:40.317000 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:33:40.317312 [debug] [ThreadPool]: On create_trial_snapshots: Close
[0m20:33:40.320363 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_snapshots, now list_trial_snapshots)
[0m20:33:40.325586 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:33:40.325866 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:33:40.326114 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:33:40.332369 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:33:40.332708 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:33:40.332928 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:33:40.356103 [debug] [ThreadPool]: SQL status: OK in 0.023 seconds
[0m20:33:40.358019 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:33:40.359272 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:33:40.359567 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:33:40.362477 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_snapshots, now list_trial_main)
[0m20:33:40.364800 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:33:40.365090 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:33:40.365292 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:33:40.371408 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:33:40.372001 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:33:40.372377 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:33:40.394177 [debug] [ThreadPool]: SQL status: OK in 0.021 seconds
[0m20:33:40.395538 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:33:40.395948 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:33:40.396156 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:33:40.399889 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '00815228-283e-4eca-a466-a04b7440bbe6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f40c3b37fd0>]}
[0m20:33:40.400335 [debug] [MainThread]: Using duckdb connection "master"
[0m20:33:40.400558 [debug] [MainThread]: On master: BEGIN
[0m20:33:40.400758 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:33:40.407170 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m20:33:40.407536 [debug] [MainThread]: On master: COMMIT
[0m20:33:40.407768 [debug] [MainThread]: Using duckdb connection "master"
[0m20:33:40.407970 [debug] [MainThread]: On master: COMMIT
[0m20:33:40.408450 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:33:40.408710 [debug] [MainThread]: On master: Close
[0m20:33:40.411768 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_customer
[0m20:33:40.412480 [info ] [Thread-1 (]: 1 of 3 START snapshot snapshots.snp_customer ................................... [RUN]
[0m20:33:40.413155 [debug] [Thread-1 (]: Acquiring new duckdb connection 'snapshot.dbt_duckdb_test.snp_customer'
[0m20:33:40.413712 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_customer
[0m20:33:40.421156 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_customer
[0m20:33:40.473539 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:33:40.473925 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
select * from (
        
    

    select *
    from '/tmp/customer.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:33:40.474187 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:33:40.486723 [debug] [Thread-1 (]: SQL status: OK in 0.012 seconds
[0m20:33:40.496908 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:33:40.497457 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: BEGIN
[0m20:33:40.498404 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:33:40.498854 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:33:40.499164 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:33:40.518232 [debug] [Thread-1 (]: SQL status: OK in 0.019 seconds
[0m20:33:40.525209 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:33:40.525550 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:33:40.530345 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:33:40.569270 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:33:40.569835 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

        
  
    
    

    create  table
      "snp_customer__dbt_tmp20250125203340560598"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:33:40.588739 [debug] [Thread-1 (]: SQL status: OK in 0.018 seconds
[0m20:33:40.591112 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:33:40.591435 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125203340560598'
      
      
      order by ordinal_position

  
[0m20:33:40.595462 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:33:40.598243 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:33:40.598547 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:33:40.603118 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:33:40.605742 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:33:40.606046 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125203340560598'
      
      
      order by ordinal_position

  
[0m20:33:40.608866 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:33:40.611333 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:33:40.611632 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:33:40.615814 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:33:40.621012 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:33:40.621506 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125203340560598'
      
      
      order by ordinal_position

  
[0m20:33:40.625677 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:33:40.637143 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:33:40.638018 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:33:40.643362 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:33:40.646353 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:33:40.646667 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:33:40.647763 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:33:40.648224 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_customer"
[0m20:33:40.648667 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:33:40.648952 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      update "trial"."snapshots"."snp_customer" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_customer__dbt_tmp20250125203340560598" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_customer" ("customerID", "RegionName", "customerName", "contactNumber", "Email", "loyaltyStatus", "flagActive", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."customerID",DBT_INTERNAL_SOURCE."RegionName",DBT_INTERNAL_SOURCE."customerName",DBT_INTERNAL_SOURCE."contactNumber",DBT_INTERNAL_SOURCE."Email",DBT_INTERNAL_SOURCE."loyaltyStatus",DBT_INTERNAL_SOURCE."flagActive",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_customer__dbt_tmp20250125203340560598" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:33:40.652735 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:33:40.661201 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:33:40.661539 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:33:40.662029 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:33:40.670619 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:33:40.675664 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:33:40.676006 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
drop table if exists "snp_customer__dbt_tmp20250125203340560598" cascade
[0m20:33:40.679687 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:33:40.681827 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: Close
[0m20:33:40.701078 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '00815228-283e-4eca-a466-a04b7440bbe6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f40b8d05dd0>]}
[0m20:33:40.702249 [info ] [Thread-1 (]: 1 of 3 OK snapshotted snapshots.snp_customer ................................... [[32mOK[0m in 0.29s]
[0m20:33:40.703116 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_customer
[0m20:33:40.703869 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_product
[0m20:33:40.704421 [info ] [Thread-1 (]: 2 of 3 START snapshot snapshots.snp_product .................................... [RUN]
[0m20:33:40.705266 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_customer, now snapshot.dbt_duckdb_test.snp_product)
[0m20:33:40.706579 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_product
[0m20:33:40.709759 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_product
[0m20:33:40.713617 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:33:40.714162 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
select * from (
        
    

    select *
    from '/tmp/product.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:33:40.714486 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:33:40.722832 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:33:40.725426 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:33:40.725773 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: BEGIN
[0m20:33:40.726372 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:33:40.726686 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:33:40.727125 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:33:40.757062 [debug] [Thread-1 (]: SQL status: OK in 0.029 seconds
[0m20:33:40.759961 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:33:40.760267 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:33:40.763726 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:33:40.766398 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:33:40.766836 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

        
  
    
    

    create  table
      "snp_product__dbt_tmp20250125203340765643"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:33:40.777336 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m20:33:40.779955 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:33:40.780302 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125203340765643'
      
      
      order by ordinal_position

  
[0m20:33:40.784006 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:33:40.786675 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:33:40.787117 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:33:40.790123 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:33:40.793017 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:33:40.793327 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125203340765643'
      
      
      order by ordinal_position

  
[0m20:33:40.796332 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:33:40.798981 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:33:40.799302 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:33:40.802196 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:33:40.804779 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:33:40.805075 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125203340765643'
      
      
      order by ordinal_position

  
[0m20:33:40.808025 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:33:40.809813 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:33:40.810242 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:33:40.814714 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:33:40.815776 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:33:40.816051 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:33:40.817103 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:33:40.817600 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_product"
[0m20:33:40.818037 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:33:40.818320 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      update "trial"."snapshots"."snp_product" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_product__dbt_tmp20250125203340765643" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_product" ("productId", "productName", "description", "price", "discount", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."productName",DBT_INTERNAL_SOURCE."description",DBT_INTERNAL_SOURCE."price",DBT_INTERNAL_SOURCE."discount",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_product__dbt_tmp20250125203340765643" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:33:40.822345 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:33:40.823663 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:33:40.823956 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:33:40.824189 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:33:40.829271 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:33:40.829983 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:33:40.830237 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
drop table if exists "snp_product__dbt_tmp20250125203340765643" cascade
[0m20:33:40.833979 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:33:40.835138 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: Close
[0m20:33:40.848003 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '00815228-283e-4eca-a466-a04b7440bbe6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f40b8d2f690>]}
[0m20:33:40.848739 [info ] [Thread-1 (]: 2 of 3 OK snapshotted snapshots.snp_product .................................... [[32mOK[0m in 0.14s]
[0m20:33:40.849648 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_product
[0m20:33:40.850264 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:33:40.850750 [info ] [Thread-1 (]: 3 of 3 START snapshot snapshots.snp_transaction ................................ [RUN]
[0m20:33:40.851483 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_product, now snapshot.dbt_duckdb_test.snp_transaction)
[0m20:33:40.852358 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_transaction
[0m20:33:40.855828 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_transaction
[0m20:33:40.867523 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:33:40.867907 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: BEGIN
[0m20:33:40.868156 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:33:40.875094 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:33:40.875472 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:33:40.875735 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:33:40.894940 [debug] [Thread-1 (]: SQL status: OK in 0.019 seconds
[0m20:33:40.897910 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:33:40.898294 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

        
  
    
    

    create  table
      "snp_transaction__dbt_tmp20250125203340896813"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        transactionId as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            
  
  coalesce(nullif(transactionDate, transactionDate), null)
  as dbt_valid_to
,
            md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(transactionDate as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            transactionDate as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data.dbt_valid_from < source_data.transactionDate))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.dbt_valid_from < source_data.transactionDate)
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:33:40.905338 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:33:40.907706 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:33:40.908025 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125203340896813'
      
      
      order by ordinal_position

  
[0m20:33:40.911322 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:33:40.914193 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:33:40.914510 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:33:40.918456 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:33:40.921008 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:33:40.921350 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125203340896813'
      
      
      order by ordinal_position

  
[0m20:33:40.925515 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:33:40.928062 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:33:40.928358 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:33:40.931293 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:33:40.934086 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:33:40.934470 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125203340896813'
      
      
      order by ordinal_position

  
[0m20:33:40.938307 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:33:40.940152 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:33:40.940488 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        transactionId as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            
  
  coalesce(nullif(transactionDate, transactionDate), null)
  as dbt_valid_to
,
            md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(transactionDate as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            transactionDate as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data.dbt_valid_from < source_data.transactionDate))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.dbt_valid_from < source_data.transactionDate)
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:33:40.943191 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:33:40.944096 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:33:40.944368 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:33:40.945361 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:33:40.945849 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:33:40.947326 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:33:40.947653 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      update "trial"."snapshots"."snp_transaction" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_transaction__dbt_tmp20250125203340896813" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_transaction" ("transactionId", "customerId", "productId", "amount", "transactionDate", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."transactionId",DBT_INTERNAL_SOURCE."customerId",DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."amount",DBT_INTERNAL_SOURCE."transactionDate",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_transaction__dbt_tmp20250125203340896813" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:33:40.949678 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:33:40.951345 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:33:40.951697 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:33:40.952302 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:33:40.956702 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:33:40.957499 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:33:40.957768 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
drop table if exists "snp_transaction__dbt_tmp20250125203340896813" cascade
[0m20:33:40.961112 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:33:40.962885 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: Close
[0m20:33:40.975952 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '00815228-283e-4eca-a466-a04b7440bbe6', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f40c2fae610>]}
[0m20:33:40.976751 [info ] [Thread-1 (]: 3 of 3 OK snapshotted snapshots.snp_transaction ................................ [[32mOK[0m in 0.12s]
[0m20:33:40.977487 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:33:40.979317 [debug] [MainThread]: Using duckdb connection "master"
[0m20:33:40.979669 [debug] [MainThread]: On master: BEGIN
[0m20:33:40.980000 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:33:40.987598 [debug] [MainThread]: SQL status: OK in 0.008 seconds
[0m20:33:40.987959 [debug] [MainThread]: On master: COMMIT
[0m20:33:40.988191 [debug] [MainThread]: Using duckdb connection "master"
[0m20:33:40.988394 [debug] [MainThread]: On master: COMMIT
[0m20:33:40.989033 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:33:40.989394 [debug] [MainThread]: On master: Close
[0m20:33:40.991401 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:33:40.991707 [debug] [MainThread]: Connection 'list_trial_main' was properly closed.
[0m20:33:40.992255 [debug] [MainThread]: Connection 'snapshot.dbt_duckdb_test.snp_transaction' was properly closed.
[0m20:33:40.992558 [info ] [MainThread]: 
[0m20:33:40.992891 [info ] [MainThread]: Finished running 3 snapshots in 0 hours 0 minutes and 0.76 seconds (0.76s).
[0m20:33:40.994121 [debug] [MainThread]: Command end result
[0m20:33:41.066126 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:33:41.067668 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:33:41.073210 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:33:41.073482 [info ] [MainThread]: 
[0m20:33:41.073930 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:33:41.074353 [info ] [MainThread]: 
[0m20:33:41.074957 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m20:33:41.077187 [debug] [MainThread]: Resource report: {"command_name": "snapshot", "command_success": true, "command_wall_clock_time": 1.6916728, "process_in_blocks": "155768", "process_kernel_time": 0.222765, "process_mem_max_rss": "187852", "process_out_blocks": "4392", "process_user_time": 2.612432}
[0m20:33:41.077554 [debug] [MainThread]: Command `dbt snapshot` succeeded at 20:33:41.077476 after 1.69 seconds
[0m20:33:41.077835 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f40de010fd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f40de010690>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f40de011510>]}
[0m20:33:41.078114 [debug] [MainThread]: Flushing usage events
[0m20:33:42.622674 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:34:24.133447 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fdb598eb590>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fdb598eaf90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fdb598eae10>]}


============================== 20:34:24.137791 | 65f2a6fb-de58-41e7-93e5-c1fc981d4096 ==============================
[0m20:34:24.137791 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:34:24.138372 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'debug': 'False', 'version_check': 'True', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'profiles_dir': '/home/rani/.dbt', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'invocation_command': 'dbt snapshot', 'introspect': 'True', 'static_parser': 'True', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'send_anonymous_usage_stats': 'True'}
[0m20:34:24.486006 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '65f2a6fb-de58-41e7-93e5-c1fc981d4096', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fdb5612ba90>]}
[0m20:34:24.536880 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '65f2a6fb-de58-41e7-93e5-c1fc981d4096', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fdb5bb158d0>]}
[0m20:34:24.539872 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:34:24.614917 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:34:24.780051 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m20:34:24.780637 [debug] [MainThread]: Partial parsing: updated file: dbt_duckdb_test://snapshots/snp_transaction.sql
[0m20:34:24.975338 [error] [MainThread]: Encountered an error:
A 'timestamp' snapshot should not have 'check_cols'
[0m20:34:24.981684 [error] [MainThread]: Traceback (most recent call last):
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/cli/requires.py", line 153, in wrapper
    result, success = func(*args, **kwargs)
                      ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/cli/requires.py", line 103, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/cli/requires.py", line 235, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/cli/requires.py", line 264, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/cli/requires.py", line 311, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/cli/requires.py", line 327, in wrapper
    setup_manifest(ctx, write=write, write_perf_info=write_perf_info)
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/cli/requires.py", line 351, in setup_manifest
    ctx.obj["manifest"] = parse_manifest(
                          ^^^^^^^^^^^^^^^
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/parser/manifest.py", line 2061, in parse_manifest
    manifest = ManifestLoader.get_full_manifest(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/parser/manifest.py", line 312, in get_full_manifest
    manifest = loader.load()
               ^^^^^^^^^^^^^
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/parser/manifest.py", line 476, in load
    self.check_valid_snapshot_config()
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/parser/manifest.py", line 1412, in check_valid_snapshot_config
    node.config.final_validate()
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/artifacts/resources/v1/snapshot.py", line 67, in final_validate
    raise ValidationError("A 'timestamp' snapshot should not have 'check_cols'")
dbt_common.dataclass_schema.ValidationError: A 'timestamp' snapshot should not have 'check_cols'

[0m20:34:24.985486 [debug] [MainThread]: Resource report: {"command_name": "snapshot", "command_success": false, "command_wall_clock_time": 0.8997516, "process_in_blocks": "139568", "process_kernel_time": 0.160143, "process_mem_max_rss": "145840", "process_out_blocks": "16", "process_user_time": 1.801618}
[0m20:34:24.986157 [debug] [MainThread]: Command `dbt snapshot` failed at 20:34:24.985981 after 0.90 seconds
[0m20:34:24.986735 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fdb5d4d6790>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fdb598db3d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fdb4fbbd990>]}
[0m20:34:24.987364 [debug] [MainThread]: Flushing usage events
[0m20:34:26.433991 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:34:37.457847 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4b41d1e510>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4b41b7a150>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4b41b7b410>]}


============================== 20:34:37.460289 | 4e7266e9-ac05-4f83-95b8-8ef4b30d9729 ==============================
[0m20:34:37.460289 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:34:37.461172 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/rani/.dbt', 'version_check': 'True', 'fail_fast': 'False', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'debug': 'False', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'default', 'invocation_command': 'dbt snapshot', 'target_path': 'None', 'introspect': 'True', 'send_anonymous_usage_stats': 'True'}
[0m20:34:37.642621 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '4e7266e9-ac05-4f83-95b8-8ef4b30d9729', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4b41d29610>]}
[0m20:34:37.697130 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '4e7266e9-ac05-4f83-95b8-8ef4b30d9729', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4b43f4a250>]}
[0m20:34:37.699091 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:34:37.768793 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:34:37.883595 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m20:34:37.883952 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m20:34:37.890113 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:34:37.944103 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '4e7266e9-ac05-4f83-95b8-8ef4b30d9729', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4b41bc4d10>]}
[0m20:34:38.035492 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:34:38.039365 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:34:38.062489 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '4e7266e9-ac05-4f83-95b8-8ef4b30d9729', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4b3e56cdd0>]}
[0m20:34:38.062951 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:34:38.063374 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '4e7266e9-ac05-4f83-95b8-8ef4b30d9729', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4b37efbd50>]}
[0m20:34:38.066235 [info ] [MainThread]: 
[0m20:34:38.066780 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:34:38.067177 [info ] [MainThread]: 
[0m20:34:38.067846 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:34:38.075160 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:34:38.115854 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:34:38.116526 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:34:38.116823 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:34:38.136655 [debug] [ThreadPool]: SQL status: OK in 0.020 seconds
[0m20:34:38.138069 [debug] [ThreadPool]: On list_trial: Close
[0m20:34:38.140464 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_snapshots)
[0m20:34:38.140891 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "snapshots"
"
[0m20:34:38.146597 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:34:38.147061 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:34:38.147329 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:34:38.154194 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:34:38.155432 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:34:38.155702 [debug] [ThreadPool]: On create_trial_snapshots: BEGIN
[0m20:34:38.156486 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:34:38.156807 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:34:38.157116 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
    
        create schema if not exists "trial"."snapshots"
    
[0m20:34:38.158261 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:34:38.159000 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:34:38.159305 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:34:38.159510 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:34:38.160013 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:34:38.160285 [debug] [ThreadPool]: On create_trial_snapshots: Close
[0m20:34:38.164581 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_snapshots, now list_trial_snapshots)
[0m20:34:38.169999 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:34:38.170307 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:34:38.170512 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:34:38.176254 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:34:38.176805 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:34:38.177224 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:34:38.200229 [debug] [ThreadPool]: SQL status: OK in 0.023 seconds
[0m20:34:38.201964 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:34:38.203066 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:34:38.203357 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:34:38.205899 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_snapshots, now list_trial_main)
[0m20:34:38.209201 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:34:38.209703 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:34:38.210069 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:34:38.217940 [debug] [ThreadPool]: SQL status: OK in 0.008 seconds
[0m20:34:38.218294 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:34:38.218523 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:34:38.239394 [debug] [ThreadPool]: SQL status: OK in 0.021 seconds
[0m20:34:38.240689 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:34:38.241203 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:34:38.241480 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:34:38.244641 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '4e7266e9-ac05-4f83-95b8-8ef4b30d9729', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4b41d43890>]}
[0m20:34:38.245254 [debug] [MainThread]: Using duckdb connection "master"
[0m20:34:38.245503 [debug] [MainThread]: On master: BEGIN
[0m20:34:38.245703 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:34:38.252218 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m20:34:38.252590 [debug] [MainThread]: On master: COMMIT
[0m20:34:38.252827 [debug] [MainThread]: Using duckdb connection "master"
[0m20:34:38.253024 [debug] [MainThread]: On master: COMMIT
[0m20:34:38.253525 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:34:38.253797 [debug] [MainThread]: On master: Close
[0m20:34:38.257250 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_customer
[0m20:34:38.257738 [info ] [Thread-1 (]: 1 of 3 START snapshot snapshots.snp_customer ................................... [RUN]
[0m20:34:38.258341 [debug] [Thread-1 (]: Acquiring new duckdb connection 'snapshot.dbt_duckdb_test.snp_customer'
[0m20:34:38.258930 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_customer
[0m20:34:38.265074 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_customer
[0m20:34:38.316790 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:34:38.317398 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
select * from (
        
    

    select *
    from '/tmp/customer.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:34:38.317715 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:34:38.330384 [debug] [Thread-1 (]: SQL status: OK in 0.013 seconds
[0m20:34:38.340605 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:34:38.341009 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: BEGIN
[0m20:34:38.341744 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:34:38.342040 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:34:38.342302 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:34:38.361424 [debug] [Thread-1 (]: SQL status: OK in 0.019 seconds
[0m20:34:38.368912 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:34:38.369265 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:34:38.374283 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:34:38.410848 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:34:38.411391 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

        
  
    
    

    create  table
      "snp_customer__dbt_tmp20250125203438403408"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:34:38.431397 [debug] [Thread-1 (]: SQL status: OK in 0.019 seconds
[0m20:34:38.434507 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:34:38.434845 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125203438403408'
      
      
      order by ordinal_position

  
[0m20:34:38.438443 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:34:38.441159 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:34:38.441460 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:34:38.444538 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:34:38.446996 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:34:38.447543 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125203438403408'
      
      
      order by ordinal_position

  
[0m20:34:38.451066 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:34:38.454004 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:34:38.454341 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:34:38.458313 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:34:38.463693 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:34:38.464011 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125203438403408'
      
      
      order by ordinal_position

  
[0m20:34:38.466990 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:34:38.478599 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:34:38.479130 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:34:38.483929 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:34:38.486989 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:34:38.487370 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:34:38.488631 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:34:38.489132 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_customer"
[0m20:34:38.490900 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:34:38.491334 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      update "trial"."snapshots"."snp_customer" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_customer__dbt_tmp20250125203438403408" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_customer" ("customerID", "RegionName", "customerName", "contactNumber", "Email", "loyaltyStatus", "flagActive", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."customerID",DBT_INTERNAL_SOURCE."RegionName",DBT_INTERNAL_SOURCE."customerName",DBT_INTERNAL_SOURCE."contactNumber",DBT_INTERNAL_SOURCE."Email",DBT_INTERNAL_SOURCE."loyaltyStatus",DBT_INTERNAL_SOURCE."flagActive",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_customer__dbt_tmp20250125203438403408" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:34:38.494763 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:34:38.503748 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:34:38.504199 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:34:38.504625 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:34:38.511103 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m20:34:38.516310 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:34:38.516632 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
drop table if exists "snp_customer__dbt_tmp20250125203438403408" cascade
[0m20:34:38.521555 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:34:38.523771 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: Close
[0m20:34:38.542471 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4e7266e9-ac05-4f83-95b8-8ef4b30d9729', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4b36814910>]}
[0m20:34:38.543281 [info ] [Thread-1 (]: 1 of 3 OK snapshotted snapshots.snp_customer ................................... [[32mOK[0m in 0.28s]
[0m20:34:38.544049 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_customer
[0m20:34:38.544612 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_product
[0m20:34:38.545234 [info ] [Thread-1 (]: 2 of 3 START snapshot snapshots.snp_product .................................... [RUN]
[0m20:34:38.546096 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_customer, now snapshot.dbt_duckdb_test.snp_product)
[0m20:34:38.547125 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_product
[0m20:34:38.549990 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_product
[0m20:34:38.552838 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:34:38.553254 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
select * from (
        
    

    select *
    from '/tmp/product.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:34:38.553545 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:34:38.563154 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:34:38.565682 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:34:38.565977 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: BEGIN
[0m20:34:38.566568 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:34:38.566886 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:34:38.567403 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:34:38.599122 [debug] [Thread-1 (]: SQL status: OK in 0.031 seconds
[0m20:34:38.602177 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:34:38.602502 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:34:38.606517 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:34:38.609745 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:34:38.610186 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

        
  
    
    

    create  table
      "snp_product__dbt_tmp20250125203438608983"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:34:38.620210 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:34:38.622855 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:34:38.623213 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125203438608983'
      
      
      order by ordinal_position

  
[0m20:34:38.626141 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:34:38.629272 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:34:38.629586 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:34:38.633707 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:34:38.636229 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:34:38.636529 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125203438608983'
      
      
      order by ordinal_position

  
[0m20:34:38.640530 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:34:38.643018 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:34:38.643321 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:34:38.646111 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:34:38.649417 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:34:38.649750 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125203438608983'
      
      
      order by ordinal_position

  
[0m20:34:38.653563 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:34:38.655485 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:34:38.655913 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:34:38.660601 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:34:38.661505 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:34:38.661774 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:34:38.662797 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:34:38.663588 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_product"
[0m20:34:38.664136 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:34:38.664433 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      update "trial"."snapshots"."snp_product" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_product__dbt_tmp20250125203438608983" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_product" ("productId", "productName", "description", "price", "discount", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."productName",DBT_INTERNAL_SOURCE."description",DBT_INTERNAL_SOURCE."price",DBT_INTERNAL_SOURCE."discount",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_product__dbt_tmp20250125203438608983" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:34:38.666582 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:34:38.667814 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:34:38.668101 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:34:38.668386 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:34:38.673062 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:34:38.673805 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:34:38.674063 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
drop table if exists "snp_product__dbt_tmp20250125203438608983" cascade
[0m20:34:38.677637 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:34:38.679018 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: Close
[0m20:34:38.693038 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4e7266e9-ac05-4f83-95b8-8ef4b30d9729', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4b369c0a90>]}
[0m20:34:38.693863 [info ] [Thread-1 (]: 2 of 3 OK snapshotted snapshots.snp_product .................................... [[32mOK[0m in 0.15s]
[0m20:34:38.694967 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_product
[0m20:34:38.695520 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:34:38.696435 [info ] [Thread-1 (]: 3 of 3 START snapshot snapshots.snp_transaction ................................ [RUN]
[0m20:34:38.697073 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_product, now snapshot.dbt_duckdb_test.snp_transaction)
[0m20:34:38.697536 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_transaction
[0m20:34:38.700437 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_transaction
[0m20:34:38.711430 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:34:38.711823 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: BEGIN
[0m20:34:38.712066 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:34:38.718668 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:34:38.719210 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:34:38.719530 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:34:38.741348 [debug] [Thread-1 (]: SQL status: OK in 0.021 seconds
[0m20:34:38.744079 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:34:38.744457 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

        
  
    
    

    create  table
      "snp_transaction__dbt_tmp20250125203438743168"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        transactionId as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            
  
  coalesce(nullif(transactionDate, transactionDate), null)
  as dbt_valid_to
,
            md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(transactionDate as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            transactionDate as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data.dbt_valid_from < source_data.transactionDate))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.dbt_valid_from < source_data.transactionDate)
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:34:38.751169 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m20:34:38.753402 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:34:38.753814 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125203438743168'
      
      
      order by ordinal_position

  
[0m20:34:38.757041 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:34:38.759881 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:34:38.760185 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:34:38.764112 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:34:38.766508 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:34:38.766799 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125203438743168'
      
      
      order by ordinal_position

  
[0m20:34:38.771134 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:34:38.773731 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:34:38.774033 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:34:38.777916 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:34:38.781210 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:34:38.781540 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125203438743168'
      
      
      order by ordinal_position

  
[0m20:34:38.785417 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:34:38.787527 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:34:38.788100 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        transactionId as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            
  
  coalesce(nullif(transactionDate, transactionDate), null)
  as dbt_valid_to
,
            md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(transactionDate as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            transactionDate as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data.dbt_valid_from < source_data.transactionDate))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.dbt_valid_from < source_data.transactionDate)
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:34:38.791146 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:34:38.792054 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:34:38.792320 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:34:38.793389 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:34:38.793910 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:34:38.794394 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:34:38.794772 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      update "trial"."snapshots"."snp_transaction" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_transaction__dbt_tmp20250125203438743168" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_transaction" ("transactionId", "customerId", "productId", "amount", "transactionDate", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."transactionId",DBT_INTERNAL_SOURCE."customerId",DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."amount",DBT_INTERNAL_SOURCE."transactionDate",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_transaction__dbt_tmp20250125203438743168" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:34:38.797063 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:34:38.798241 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:34:38.798577 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:34:38.798817 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:34:38.803406 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:34:38.804210 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:34:38.804597 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
drop table if exists "snp_transaction__dbt_tmp20250125203438743168" cascade
[0m20:34:38.808586 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:34:38.810101 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: Close
[0m20:34:38.823795 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4e7266e9-ac05-4f83-95b8-8ef4b30d9729', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4b34183310>]}
[0m20:34:38.824568 [info ] [Thread-1 (]: 3 of 3 OK snapshotted snapshots.snp_transaction ................................ [[32mOK[0m in 0.13s]
[0m20:34:38.825688 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:34:38.827529 [debug] [MainThread]: Using duckdb connection "master"
[0m20:34:38.827909 [debug] [MainThread]: On master: BEGIN
[0m20:34:38.828170 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:34:38.835125 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:34:38.835461 [debug] [MainThread]: On master: COMMIT
[0m20:34:38.835687 [debug] [MainThread]: Using duckdb connection "master"
[0m20:34:38.835881 [debug] [MainThread]: On master: COMMIT
[0m20:34:38.836379 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:34:38.836650 [debug] [MainThread]: On master: Close
[0m20:34:38.839533 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:34:38.840096 [debug] [MainThread]: Connection 'list_trial_main' was properly closed.
[0m20:34:38.840344 [debug] [MainThread]: Connection 'snapshot.dbt_duckdb_test.snp_transaction' was properly closed.
[0m20:34:38.840670 [info ] [MainThread]: 
[0m20:34:38.841105 [info ] [MainThread]: Finished running 3 snapshots in 0 hours 0 minutes and 0.77 seconds (0.77s).
[0m20:34:38.842009 [debug] [MainThread]: Command end result
[0m20:34:38.906261 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:34:38.907815 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:34:38.913837 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:34:38.914113 [info ] [MainThread]: 
[0m20:34:38.915094 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:34:38.915533 [info ] [MainThread]: 
[0m20:34:38.915909 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m20:34:38.916858 [debug] [MainThread]: Resource report: {"command_name": "snapshot", "command_success": true, "command_wall_clock_time": 1.509937, "process_in_blocks": "15704", "process_kernel_time": 0.160089, "process_mem_max_rss": "192568", "process_out_blocks": "3880", "process_user_time": 2.471374}
[0m20:34:38.917318 [debug] [MainThread]: Command `dbt snapshot` succeeded at 20:34:38.917226 after 1.51 seconds
[0m20:34:38.917595 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4b459ad210>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4b459ac790>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4b459ad690>]}
[0m20:34:38.917850 [debug] [MainThread]: Flushing usage events
[0m20:34:40.200088 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:35:52.443718 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f73df8cf610>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f73df72a250>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f73df72a3d0>]}


============================== 20:35:52.448638 | 39773571-5496-4778-893d-ed40fa4de6f5 ==============================
[0m20:35:52.448638 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:35:52.449616 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/rani/.dbt', 'debug': 'False', 'warn_error': 'None', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'fail_fast': 'False', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'invocation_command': 'dbt snapshot', 'static_parser': 'True', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m20:35:52.775145 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '39773571-5496-4778-893d-ed40fa4de6f5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f73e142af50>]}
[0m20:35:52.827115 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '39773571-5496-4778-893d-ed40fa4de6f5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f73e1af9790>]}
[0m20:35:52.830269 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:35:52.907634 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:35:53.068134 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m20:35:53.068553 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m20:35:53.074168 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:35:53.129369 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '39773571-5496-4778-893d-ed40fa4de6f5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f73d5db7c50>]}
[0m20:35:53.227223 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:35:53.230291 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:35:53.258257 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '39773571-5496-4778-893d-ed40fa4de6f5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f73df773b10>]}
[0m20:35:53.258754 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:35:53.259138 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '39773571-5496-4778-893d-ed40fa4de6f5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f73df75aa90>]}
[0m20:35:53.261308 [info ] [MainThread]: 
[0m20:35:53.261899 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:35:53.262491 [info ] [MainThread]: 
[0m20:35:53.263307 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:35:53.267956 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:35:53.309337 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:35:53.309841 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:35:53.310108 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:35:53.345513 [debug] [ThreadPool]: SQL status: OK in 0.035 seconds
[0m20:35:53.346782 [debug] [ThreadPool]: On list_trial: Close
[0m20:35:53.349287 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_snapshots)
[0m20:35:53.349722 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "snapshots"
"
[0m20:35:53.355083 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:35:53.355357 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:35:53.355560 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:35:53.362212 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:35:53.363423 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:35:53.363767 [debug] [ThreadPool]: On create_trial_snapshots: BEGIN
[0m20:35:53.364806 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:35:53.365081 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:35:53.365288 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
    
        create schema if not exists "trial"."snapshots"
    
[0m20:35:53.366430 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:35:53.367295 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:35:53.367550 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:35:53.367752 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:35:53.368199 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:35:53.368438 [debug] [ThreadPool]: On create_trial_snapshots: Close
[0m20:35:53.371522 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_snapshots, now list_trial_snapshots)
[0m20:35:53.376152 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:35:53.376467 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:35:53.377120 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:35:53.383437 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:35:53.383777 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:35:53.383998 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:35:53.407669 [debug] [ThreadPool]: SQL status: OK in 0.023 seconds
[0m20:35:53.409614 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:35:53.410934 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:35:53.411231 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:35:53.413744 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_snapshots, now list_trial_main)
[0m20:35:53.415545 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:35:53.415822 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:35:53.416125 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:35:53.422380 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:35:53.422719 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:35:53.422941 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:35:53.442737 [debug] [ThreadPool]: SQL status: OK in 0.019 seconds
[0m20:35:53.444002 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:35:53.444385 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:35:53.444594 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:35:53.447957 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '39773571-5496-4778-893d-ed40fa4de6f5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f73dc110c10>]}
[0m20:35:53.448394 [debug] [MainThread]: Using duckdb connection "master"
[0m20:35:53.448651 [debug] [MainThread]: On master: BEGIN
[0m20:35:53.448907 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:35:53.456755 [debug] [MainThread]: SQL status: OK in 0.008 seconds
[0m20:35:53.457379 [debug] [MainThread]: On master: COMMIT
[0m20:35:53.457628 [debug] [MainThread]: Using duckdb connection "master"
[0m20:35:53.457818 [debug] [MainThread]: On master: COMMIT
[0m20:35:53.458406 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:35:53.458709 [debug] [MainThread]: On master: Close
[0m20:35:53.462364 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_customer
[0m20:35:53.462830 [info ] [Thread-1 (]: 1 of 3 START snapshot snapshots.snp_customer ................................... [RUN]
[0m20:35:53.463377 [debug] [Thread-1 (]: Acquiring new duckdb connection 'snapshot.dbt_duckdb_test.snp_customer'
[0m20:35:53.463787 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_customer
[0m20:35:53.470392 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_customer
[0m20:35:53.522811 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:35:53.523202 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
select * from (
        
    

    select *
    from '/tmp/customer.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:35:53.523461 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:35:53.538759 [debug] [Thread-1 (]: SQL status: OK in 0.015 seconds
[0m20:35:53.545227 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:35:53.545592 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: BEGIN
[0m20:35:53.546254 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:35:53.546567 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:35:53.546859 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:35:53.568190 [debug] [Thread-1 (]: SQL status: OK in 0.021 seconds
[0m20:35:53.576144 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:35:53.576545 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:35:53.582113 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:35:53.619520 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:35:53.620226 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

        
  
    
    

    create  table
      "snp_customer__dbt_tmp20250125203553612942"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:35:53.635613 [debug] [Thread-1 (]: SQL status: OK in 0.015 seconds
[0m20:35:53.637979 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:35:53.638308 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125203553612942'
      
      
      order by ordinal_position

  
[0m20:35:53.642061 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:35:53.644716 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:35:53.645019 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:35:53.647738 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:35:53.650089 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:35:53.650373 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125203553612942'
      
      
      order by ordinal_position

  
[0m20:35:53.653749 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:35:53.657189 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:35:53.657560 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:35:53.661232 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:35:53.666264 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:35:53.666570 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125203553612942'
      
      
      order by ordinal_position

  
[0m20:35:53.670335 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:35:53.680920 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:35:53.681405 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:35:53.686641 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:35:53.689520 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:35:53.689819 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:35:53.690876 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:35:53.691745 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_customer"
[0m20:35:53.693937 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:35:53.694433 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      update "trial"."snapshots"."snp_customer" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_customer__dbt_tmp20250125203553612942" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_customer" ("customerID", "RegionName", "customerName", "contactNumber", "Email", "loyaltyStatus", "flagActive", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."customerID",DBT_INTERNAL_SOURCE."RegionName",DBT_INTERNAL_SOURCE."customerName",DBT_INTERNAL_SOURCE."contactNumber",DBT_INTERNAL_SOURCE."Email",DBT_INTERNAL_SOURCE."loyaltyStatus",DBT_INTERNAL_SOURCE."flagActive",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_customer__dbt_tmp20250125203553612942" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:35:53.698477 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:35:53.706493 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:35:53.706843 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:35:53.707135 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:35:53.711945 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:35:53.716237 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:35:53.716535 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
drop table if exists "snp_customer__dbt_tmp20250125203553612942" cascade
[0m20:35:53.720075 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:35:53.722052 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: Close
[0m20:35:53.737697 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '39773571-5496-4778-893d-ed40fa4de6f5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f73d4127ed0>]}
[0m20:35:53.738502 [info ] [Thread-1 (]: 1 of 3 OK snapshotted snapshots.snp_customer ................................... [[32mOK[0m in 0.27s]
[0m20:35:53.739130 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_customer
[0m20:35:53.739768 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_product
[0m20:35:53.740323 [info ] [Thread-1 (]: 2 of 3 START snapshot snapshots.snp_product .................................... [RUN]
[0m20:35:53.740852 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_customer, now snapshot.dbt_duckdb_test.snp_product)
[0m20:35:53.741169 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_product
[0m20:35:53.744254 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_product
[0m20:35:53.747225 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:35:53.747527 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
select * from (
        
    

    select *
    from '/tmp/product.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:35:53.747763 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:35:53.756503 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:35:53.760372 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:35:53.760710 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: BEGIN
[0m20:35:53.761505 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:35:53.761828 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:35:53.762090 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:35:53.790850 [debug] [Thread-1 (]: SQL status: OK in 0.028 seconds
[0m20:35:53.793658 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:35:53.793948 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:35:53.797748 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:35:53.800253 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:35:53.800668 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

        
  
    
    

    create  table
      "snp_product__dbt_tmp20250125203553799553"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:35:53.810839 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m20:35:53.813086 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:35:53.813414 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125203553799553'
      
      
      order by ordinal_position

  
[0m20:35:53.816203 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:35:53.818849 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:35:53.819146 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:35:53.823264 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:35:53.826306 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:35:53.826618 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125203553799553'
      
      
      order by ordinal_position

  
[0m20:35:53.829585 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:35:53.832043 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:35:53.832372 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:35:53.836022 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:35:53.838606 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:35:53.838903 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125203553799553'
      
      
      order by ordinal_position

  
[0m20:35:53.842641 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:35:53.844336 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:35:53.844738 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:35:53.848672 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:35:53.849491 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:35:53.849749 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:35:53.850659 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:35:53.851133 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_product"
[0m20:35:53.852145 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:35:53.852454 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      update "trial"."snapshots"."snp_product" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_product__dbt_tmp20250125203553799553" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_product" ("productId", "productName", "description", "price", "discount", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."productName",DBT_INTERNAL_SOURCE."description",DBT_INTERNAL_SOURCE."price",DBT_INTERNAL_SOURCE."discount",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_product__dbt_tmp20250125203553799553" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:35:53.854753 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:35:53.855865 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:35:53.856136 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:35:53.856356 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:35:53.861306 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:35:53.862036 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:35:53.862304 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
drop table if exists "snp_product__dbt_tmp20250125203553799553" cascade
[0m20:35:53.865981 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:35:53.867176 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: Close
[0m20:35:53.879342 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '39773571-5496-4778-893d-ed40fa4de6f5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f73d45a7750>]}
[0m20:35:53.880067 [info ] [Thread-1 (]: 2 of 3 OK snapshotted snapshots.snp_product .................................... [[32mOK[0m in 0.14s]
[0m20:35:53.880736 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_product
[0m20:35:53.881373 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:35:53.881974 [info ] [Thread-1 (]: 3 of 3 START snapshot snapshots.snp_transaction ................................ [RUN]
[0m20:35:53.882546 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_product, now snapshot.dbt_duckdb_test.snp_transaction)
[0m20:35:53.882856 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_transaction
[0m20:35:53.886366 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_transaction
[0m20:35:53.897353 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:35:53.897760 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: BEGIN
[0m20:35:53.898007 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:35:53.905313 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:35:53.905800 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:35:53.906229 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:35:53.924968 [debug] [Thread-1 (]: SQL status: OK in 0.018 seconds
[0m20:35:53.927611 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:35:53.927991 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

        
  
    
    

    create  table
      "snp_transaction__dbt_tmp20250125203553926796"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        transactionId as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            
  
  coalesce(nullif(transactionDate, transactionDate), null)
  as dbt_valid_to
,
            md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(transactionDate as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            transactionDate as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data.dbt_valid_from < source_data.transactionDate))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.dbt_valid_from < source_data.transactionDate)
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:35:53.935258 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:35:53.937615 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:35:53.937914 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125203553926796'
      
      
      order by ordinal_position

  
[0m20:35:53.940660 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:35:53.943128 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:35:53.943418 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:35:53.947460 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:35:53.949901 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:35:53.950210 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125203553926796'
      
      
      order by ordinal_position

  
[0m20:35:53.952961 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:35:53.955299 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:35:53.955576 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:35:53.958248 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:35:53.960697 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:35:53.960976 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125203553926796'
      
      
      order by ordinal_position

  
[0m20:35:53.964450 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:35:53.966747 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:35:53.967126 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        transactionId as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            
  
  coalesce(nullif(transactionDate, transactionDate), null)
  as dbt_valid_to
,
            md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(transactionDate as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            transactionDate as dbt_updated_at,
            transactionDate as dbt_valid_from,
            transactionDate as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data.dbt_valid_from < source_data.transactionDate))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.dbt_valid_from < source_data.transactionDate)
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:35:53.969454 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:35:53.970293 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:35:53.970548 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:35:53.971459 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:35:53.971913 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:35:53.973110 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:35:53.973423 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      update "trial"."snapshots"."snp_transaction" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_transaction__dbt_tmp20250125203553926796" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_transaction" ("transactionId", "customerId", "productId", "amount", "transactionDate", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."transactionId",DBT_INTERNAL_SOURCE."customerId",DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."amount",DBT_INTERNAL_SOURCE."transactionDate",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_transaction__dbt_tmp20250125203553926796" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:35:53.977095 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:35:53.978267 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:35:53.978549 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:35:53.978812 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:35:53.984136 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:35:53.984936 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:35:53.985201 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
drop table if exists "snp_transaction__dbt_tmp20250125203553926796" cascade
[0m20:35:53.988104 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:35:53.989194 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: Close
[0m20:35:54.002408 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '39773571-5496-4778-893d-ed40fa4de6f5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f73d4111890>]}
[0m20:35:54.003111 [info ] [Thread-1 (]: 3 of 3 OK snapshotted snapshots.snp_transaction ................................ [[32mOK[0m in 0.12s]
[0m20:35:54.004113 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:35:54.005939 [debug] [MainThread]: Using duckdb connection "master"
[0m20:35:54.006353 [debug] [MainThread]: On master: BEGIN
[0m20:35:54.006787 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:35:54.014018 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:35:54.014364 [debug] [MainThread]: On master: COMMIT
[0m20:35:54.014581 [debug] [MainThread]: Using duckdb connection "master"
[0m20:35:54.014766 [debug] [MainThread]: On master: COMMIT
[0m20:35:54.015260 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:35:54.015512 [debug] [MainThread]: On master: Close
[0m20:35:54.017698 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:35:54.017979 [debug] [MainThread]: Connection 'list_trial_main' was properly closed.
[0m20:35:54.018173 [debug] [MainThread]: Connection 'snapshot.dbt_duckdb_test.snp_transaction' was properly closed.
[0m20:35:54.018413 [info ] [MainThread]: 
[0m20:35:54.018815 [info ] [MainThread]: Finished running 3 snapshots in 0 hours 0 minutes and 0.76 seconds (0.76s).
[0m20:35:54.019739 [debug] [MainThread]: Command end result
[0m20:35:54.081865 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:35:54.083432 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:35:54.089299 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:35:54.089652 [info ] [MainThread]: 
[0m20:35:54.090131 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:35:54.090588 [info ] [MainThread]: 
[0m20:35:54.091165 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m20:35:54.093185 [debug] [MainThread]: Resource report: {"command_name": "snapshot", "command_success": true, "command_wall_clock_time": 1.7006673, "process_in_blocks": "156336", "process_kernel_time": 0.253198, "process_mem_max_rss": "182744", "process_out_blocks": "4400", "process_user_time": 2.602876}
[0m20:35:54.093522 [debug] [MainThread]: Command `dbt snapshot` succeeded at 20:35:54.093448 after 1.70 seconds
[0m20:35:54.093791 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f73e355d0d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f73e355c790>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f73e355d610>]}
[0m20:35:54.094057 [debug] [MainThread]: Flushing usage events
[0m20:35:55.488785 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:38:19.317169 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57a3d4b550>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57a41315d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57a3ba6f90>]}


============================== 20:38:19.322295 | 061aa41c-5a52-43bf-a3c8-ad3257f3c8c7 ==============================
[0m20:38:19.322295 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:38:19.323002 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'fail_fast': 'False', 'debug': 'False', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'version_check': 'True', 'profiles_dir': '/home/rani/.dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'invocation_command': 'dbt snapshot', 'log_format': 'default', 'target_path': 'None', 'introspect': 'True', 'send_anonymous_usage_stats': 'True'}
[0m20:38:19.709329 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '061aa41c-5a52-43bf-a3c8-ad3257f3c8c7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57a3bf10d0>]}
[0m20:38:19.771226 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '061aa41c-5a52-43bf-a3c8-ad3257f3c8c7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57a5f6f650>]}
[0m20:38:19.774186 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:38:19.863840 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:38:20.052049 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m20:38:20.052987 [debug] [MainThread]: Partial parsing: updated file: dbt_duckdb_test://snapshots/snp_transaction.sql
[0m20:38:20.335067 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:38:20.352211 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '061aa41c-5a52-43bf-a3c8-ad3257f3c8c7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f579a5eaf10>]}
[0m20:38:20.442873 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:38:20.445495 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:38:20.470095 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '061aa41c-5a52-43bf-a3c8-ad3257f3c8c7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5799501c10>]}
[0m20:38:20.470707 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:38:20.471184 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '061aa41c-5a52-43bf-a3c8-ad3257f3c8c7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57994b5690>]}
[0m20:38:20.473476 [info ] [MainThread]: 
[0m20:38:20.474044 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:38:20.475265 [info ] [MainThread]: 
[0m20:38:20.476040 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:38:20.482942 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:38:20.520634 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:38:20.520988 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:38:20.521211 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:38:20.542468 [debug] [ThreadPool]: SQL status: OK in 0.021 seconds
[0m20:38:20.543718 [debug] [ThreadPool]: On list_trial: Close
[0m20:38:20.555110 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_snapshots)
[0m20:38:20.555651 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "snapshots"
"
[0m20:38:20.562081 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:38:20.562391 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:38:20.562618 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:38:20.569804 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:38:20.571124 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:38:20.571396 [debug] [ThreadPool]: On create_trial_snapshots: BEGIN
[0m20:38:20.571943 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:38:20.572233 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:38:20.572437 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
    
        create schema if not exists "trial"."snapshots"
    
[0m20:38:20.573406 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:38:20.574144 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:38:20.574394 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:38:20.575609 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:38:20.576360 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:38:20.576768 [debug] [ThreadPool]: On create_trial_snapshots: Close
[0m20:38:20.582992 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_snapshots, now list_trial_main)
[0m20:38:20.589174 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:38:20.589488 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:38:20.589691 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:38:20.596050 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:38:20.596442 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:38:20.596677 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:38:20.620886 [debug] [ThreadPool]: SQL status: OK in 0.024 seconds
[0m20:38:20.623588 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:38:20.625091 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:38:20.625364 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:38:20.628252 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_main, now list_trial_snapshots)
[0m20:38:20.631595 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:38:20.631874 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:38:20.632071 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:38:20.637713 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:38:20.638078 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:38:20.638330 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:38:20.660162 [debug] [ThreadPool]: SQL status: OK in 0.022 seconds
[0m20:38:20.661442 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:38:20.661852 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:38:20.662104 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:38:20.664876 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '061aa41c-5a52-43bf-a3c8-ad3257f3c8c7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f579a2ecd50>]}
[0m20:38:20.665367 [debug] [MainThread]: Using duckdb connection "master"
[0m20:38:20.665604 [debug] [MainThread]: On master: BEGIN
[0m20:38:20.665811 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:38:20.672921 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:38:20.673280 [debug] [MainThread]: On master: COMMIT
[0m20:38:20.673531 [debug] [MainThread]: Using duckdb connection "master"
[0m20:38:20.673763 [debug] [MainThread]: On master: COMMIT
[0m20:38:20.674286 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:38:20.674556 [debug] [MainThread]: On master: Close
[0m20:38:20.677931 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_customer
[0m20:38:20.678394 [info ] [Thread-1 (]: 1 of 3 START snapshot snapshots.snp_customer ................................... [RUN]
[0m20:38:20.679034 [debug] [Thread-1 (]: Acquiring new duckdb connection 'snapshot.dbt_duckdb_test.snp_customer'
[0m20:38:20.679496 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_customer
[0m20:38:20.686630 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_customer
[0m20:38:20.767410 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:38:20.767839 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        
    

    select *,
        md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/customer.csv'
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:38:20.768638 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:38:20.790400 [debug] [Thread-1 (]: SQL status: OK in 0.022 seconds
[0m20:38:20.795458 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:38:20.796147 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:38:20.798825 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:38:20.799678 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_customer"
[0m20:38:20.802036 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:38:20.802496 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: BEGIN
[0m20:38:20.804398 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:38:20.804950 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:38:20.805250 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      
  
    
    

    create  table
      "trial"."snapshots"."snp_customer"
  
    as (
      
    

    select *,
        md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/customer.csv'
    ) sbq



    );
  
  
  
[0m20:38:20.812987 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:38:20.831969 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:38:20.833000 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:38:20.833451 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:38:20.842605 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:38:20.845728 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: Close
[0m20:38:20.865773 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '061aa41c-5a52-43bf-a3c8-ad3257f3c8c7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f579a3b1b10>]}
[0m20:38:20.866837 [info ] [Thread-1 (]: 1 of 3 OK snapshotted snapshots.snp_customer ................................... [[32mOK[0m in 0.18s]
[0m20:38:20.867682 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_customer
[0m20:38:20.868269 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_product
[0m20:38:20.869526 [info ] [Thread-1 (]: 2 of 3 START snapshot snapshots.snp_product .................................... [RUN]
[0m20:38:20.875460 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_customer, now snapshot.dbt_duckdb_test.snp_product)
[0m20:38:20.876522 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_product
[0m20:38:20.880534 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_product
[0m20:38:20.884522 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:38:20.885079 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        
    

    select *,
        md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/product.csv'
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:38:20.885513 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:38:20.910303 [debug] [Thread-1 (]: SQL status: OK in 0.025 seconds
[0m20:38:20.911848 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:38:20.912307 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:38:20.913612 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:38:20.914336 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_product"
[0m20:38:20.914852 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:38:20.915225 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: BEGIN
[0m20:38:20.915839 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:38:20.916107 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:38:20.916381 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      
  
    
    

    create  table
      "trial"."snapshots"."snp_product"
  
    as (
      
    

    select *,
        md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/product.csv'
    ) sbq



    );
  
  
  
[0m20:38:20.920895 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:38:20.922407 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:38:20.922710 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:38:20.923083 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:38:20.927531 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:38:20.928273 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: Close
[0m20:38:20.939228 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '061aa41c-5a52-43bf-a3c8-ad3257f3c8c7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57989dfbd0>]}
[0m20:38:20.940015 [info ] [Thread-1 (]: 2 of 3 OK snapshotted snapshots.snp_product .................................... [[32mOK[0m in 0.06s]
[0m20:38:20.940704 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_product
[0m20:38:20.941396 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:38:20.942322 [info ] [Thread-1 (]: 3 of 3 START snapshot snapshots.snp_transaction ................................ [RUN]
[0m20:38:20.942986 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_product, now snapshot.dbt_duckdb_test.snp_transaction)
[0m20:38:20.943301 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_transaction
[0m20:38:20.946027 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_transaction
[0m20:38:20.954516 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:38:20.955097 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        
    

    select *,
        md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(id as varchar ), '')
        ) as dbt_scd_id,
        id as dbt_updated_at,
        id as dbt_valid_from,
        
  
  coalesce(nullif(id, id), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/transaction.csv'
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:38:20.955386 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:38:20.962822 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:38:20.963825 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:38:20.964179 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:38:20.965394 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:38:20.965727 [warn ] [Thread-1 (]: Data type of snapshot table timestamp columns (TIMESTAMP) doesn't match derived column 'updated_at' (BIGINT). Please update snapshot config 'updated_at'.
[0m20:38:20.966442 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:38:20.966978 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:38:20.967518 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: BEGIN
[0m20:38:20.968292 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:38:20.968785 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:38:20.969213 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      
  
    
    

    create  table
      "trial"."snapshots"."snp_transaction"
  
    as (
      
    

    select *,
        md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(id as varchar ), '')
        ) as dbt_scd_id,
        id as dbt_updated_at,
        id as dbt_valid_from,
        
  
  coalesce(nullif(id, id), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/transaction.csv'
    ) sbq



    );
  
  
  
[0m20:38:20.972549 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:38:20.975077 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:38:20.975422 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:38:20.975673 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:38:20.980221 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:38:20.980991 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: Close
[0m20:38:20.995880 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '061aa41c-5a52-43bf-a3c8-ad3257f3c8c7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f579a29a3d0>]}
[0m20:38:20.996702 [info ] [Thread-1 (]: 3 of 3 OK snapshotted snapshots.snp_transaction ................................ [[32mOK[0m in 0.05s]
[0m20:38:20.997706 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:38:20.999276 [debug] [MainThread]: Using duckdb connection "master"
[0m20:38:20.999582 [debug] [MainThread]: On master: BEGIN
[0m20:38:20.999795 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:38:21.009225 [debug] [MainThread]: SQL status: OK in 0.009 seconds
[0m20:38:21.009620 [debug] [MainThread]: On master: COMMIT
[0m20:38:21.009851 [debug] [MainThread]: Using duckdb connection "master"
[0m20:38:21.010053 [debug] [MainThread]: On master: COMMIT
[0m20:38:21.010556 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:38:21.010864 [debug] [MainThread]: On master: Close
[0m20:38:21.012885 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:38:21.013209 [debug] [MainThread]: Connection 'list_trial_snapshots' was properly closed.
[0m20:38:21.013429 [debug] [MainThread]: Connection 'snapshot.dbt_duckdb_test.snp_transaction' was properly closed.
[0m20:38:21.013687 [info ] [MainThread]: 
[0m20:38:21.014042 [info ] [MainThread]: Finished running 3 snapshots in 0 hours 0 minutes and 0.54 seconds (0.54s).
[0m20:38:21.015461 [debug] [MainThread]: Command end result
[0m20:38:21.088498 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:38:21.089959 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:38:21.095084 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:38:21.095468 [info ] [MainThread]: 
[0m20:38:21.095942 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:38:21.097184 [info ] [MainThread]: 
[0m20:38:21.097745 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m20:38:21.099733 [debug] [MainThread]: Resource report: {"command_name": "snapshot", "command_success": true, "command_wall_clock_time": 1.8374164, "process_in_blocks": "153264", "process_kernel_time": 0.27128, "process_mem_max_rss": "170320", "process_out_blocks": "6792", "process_user_time": 2.848446}
[0m20:38:21.100090 [debug] [MainThread]: Command `dbt snapshot` succeeded at 20:38:21.100011 after 1.84 seconds
[0m20:38:21.100375 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57a79d4e90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57a79d4690>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f57987bf6d0>]}
[0m20:38:21.100649 [debug] [MainThread]: Flushing usage events
[0m20:38:23.037866 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:40:50.702738 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f093b23e010>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f093b09a150>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f093b23dad0>]}


============================== 20:40:50.706821 | 081ba1cc-2f76-46bb-b493-58d653973d16 ==============================
[0m20:40:50.706821 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:40:50.707863 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/rani/.dbt', 'fail_fast': 'False', 'version_check': 'True', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'debug': 'False', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'invocation_command': 'dbt snapshot', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m20:40:50.991654 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '081ba1cc-2f76-46bb-b493-58d653973d16', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f093b0fe9d0>]}
[0m20:40:51.044379 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '081ba1cc-2f76-46bb-b493-58d653973d16', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f093d469a10>]}
[0m20:40:51.047225 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:40:51.122798 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:40:51.281832 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m20:40:51.282432 [debug] [MainThread]: Partial parsing: updated file: dbt_duckdb_test://snapshots/snp_transaction.sql
[0m20:40:51.544015 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:40:51.558892 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '081ba1cc-2f76-46bb-b493-58d653973d16', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0931562ad0>]}
[0m20:40:51.656687 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:40:51.660348 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:40:51.684671 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '081ba1cc-2f76-46bb-b493-58d653973d16', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f09316f0290>]}
[0m20:40:51.685255 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:40:51.685952 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '081ba1cc-2f76-46bb-b493-58d653973d16', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f093093bb50>]}
[0m20:40:51.688155 [info ] [MainThread]: 
[0m20:40:51.688679 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:40:51.689072 [info ] [MainThread]: 
[0m20:40:51.689887 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:40:51.695474 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:40:51.733549 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:40:51.734076 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:40:51.734602 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:40:51.758660 [debug] [ThreadPool]: SQL status: OK in 0.024 seconds
[0m20:40:51.760211 [debug] [ThreadPool]: On list_trial: Close
[0m20:40:51.773555 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_snapshots)
[0m20:40:51.774063 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "snapshots"
"
[0m20:40:51.780923 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:40:51.781258 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:40:51.781502 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:40:51.788460 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:40:51.790154 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:40:51.790446 [debug] [ThreadPool]: On create_trial_snapshots: BEGIN
[0m20:40:51.791023 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:40:51.791278 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:40:51.791489 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
    
        create schema if not exists "trial"."snapshots"
    
[0m20:40:51.792626 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:40:51.793453 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:40:51.793713 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:40:51.793914 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:40:51.794371 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:40:51.794625 [debug] [ThreadPool]: On create_trial_snapshots: Close
[0m20:40:51.798402 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_snapshots, now list_trial_main)
[0m20:40:51.803976 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:40:51.804472 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:40:51.804755 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:40:51.810603 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:40:51.810959 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:40:51.811204 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:40:51.837194 [debug] [ThreadPool]: SQL status: OK in 0.026 seconds
[0m20:40:51.839234 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:40:51.840817 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:40:51.841106 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:40:51.844295 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_main, now list_trial_snapshots)
[0m20:40:51.847827 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:40:51.848144 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:40:51.848357 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:40:51.854508 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:40:51.854850 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:40:51.855072 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:40:51.876597 [debug] [ThreadPool]: SQL status: OK in 0.021 seconds
[0m20:40:51.878054 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:40:51.878462 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:40:51.878770 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:40:51.881578 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '081ba1cc-2f76-46bb-b493-58d653973d16', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f093b11a5d0>]}
[0m20:40:51.882260 [debug] [MainThread]: Using duckdb connection "master"
[0m20:40:51.882513 [debug] [MainThread]: On master: BEGIN
[0m20:40:51.882787 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:40:51.888838 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m20:40:51.889223 [debug] [MainThread]: On master: COMMIT
[0m20:40:51.889718 [debug] [MainThread]: Using duckdb connection "master"
[0m20:40:51.889971 [debug] [MainThread]: On master: COMMIT
[0m20:40:51.890501 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:40:51.890984 [debug] [MainThread]: On master: Close
[0m20:40:51.894303 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_customer
[0m20:40:51.894776 [info ] [Thread-1 (]: 1 of 3 START snapshot snapshots.snp_customer ................................... [RUN]
[0m20:40:51.895342 [debug] [Thread-1 (]: Acquiring new duckdb connection 'snapshot.dbt_duckdb_test.snp_customer'
[0m20:40:51.895884 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_customer
[0m20:40:51.904424 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_customer
[0m20:40:51.975502 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:40:51.975909 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        
    

    select *,
        md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/customer.csv'
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:40:51.976181 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:40:51.993787 [debug] [Thread-1 (]: SQL status: OK in 0.017 seconds
[0m20:40:51.997221 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:40:51.997562 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:40:52.000062 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:40:52.000927 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_customer"
[0m20:40:52.001761 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:40:52.002052 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: BEGIN
[0m20:40:52.002828 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:40:52.003144 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:40:52.003410 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      
  
    
    

    create  table
      "trial"."snapshots"."snp_customer"
  
    as (
      
    

    select *,
        md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/customer.csv'
    ) sbq



    );
  
  
  
[0m20:40:52.008392 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:40:52.021959 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:40:52.022414 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:40:52.022683 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:40:52.030094 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:40:52.031788 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: Close
[0m20:40:52.046752 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '081ba1cc-2f76-46bb-b493-58d653973d16', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f093192dbd0>]}
[0m20:40:52.047675 [info ] [Thread-1 (]: 1 of 3 OK snapshotted snapshots.snp_customer ................................... [[32mOK[0m in 0.15s]
[0m20:40:52.048448 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_customer
[0m20:40:52.049210 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_product
[0m20:40:52.049954 [info ] [Thread-1 (]: 2 of 3 START snapshot snapshots.snp_product .................................... [RUN]
[0m20:40:52.050715 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_customer, now snapshot.dbt_duckdb_test.snp_product)
[0m20:40:52.051022 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_product
[0m20:40:52.053839 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_product
[0m20:40:52.056862 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:40:52.057415 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        
    

    select *,
        md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/product.csv'
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:40:52.057719 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:40:52.067686 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m20:40:52.069899 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:40:52.070401 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:40:52.071592 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:40:52.072129 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_product"
[0m20:40:52.072616 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:40:52.072867 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: BEGIN
[0m20:40:52.073605 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:40:52.073921 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:40:52.074186 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      
  
    
    

    create  table
      "trial"."snapshots"."snp_product"
  
    as (
      
    

    select *,
        md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/product.csv'
    ) sbq



    );
  
  
  
[0m20:40:52.077680 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:40:52.079209 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:40:52.080567 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:40:52.080891 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:40:52.088736 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:40:52.089885 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: Close
[0m20:40:52.104114 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '081ba1cc-2f76-46bb-b493-58d653973d16', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0931873310>]}
[0m20:40:52.104919 [info ] [Thread-1 (]: 2 of 3 OK snapshotted snapshots.snp_product .................................... [[32mOK[0m in 0.05s]
[0m20:40:52.105664 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_product
[0m20:40:52.106230 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:40:52.106969 [info ] [Thread-1 (]: 3 of 3 START snapshot snapshots.snp_transaction ................................ [RUN]
[0m20:40:52.107800 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_product, now snapshot.dbt_duckdb_test.snp_transaction)
[0m20:40:52.108377 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_transaction
[0m20:40:52.111498 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_transaction
[0m20:40:52.114659 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:40:52.114971 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        
    

    select *,
        md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/transaction.csv'
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:40:52.115221 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:40:52.130816 [debug] [Thread-1 (]: SQL status: OK in 0.015 seconds
[0m20:40:52.131828 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:40:52.132352 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:40:52.133596 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:40:52.136551 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:40:52.137304 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:40:52.137783 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: BEGIN
[0m20:40:52.138572 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:40:52.138937 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:40:52.139203 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      
  
    
    

    create  table
      "trial"."snapshots"."snp_transaction"
  
    as (
      
    

    select *,
        md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/transaction.csv'
    ) sbq



    );
  
  
  
[0m20:40:52.144062 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:40:52.145447 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:40:52.145740 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:40:52.145978 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:40:52.156395 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m20:40:52.158315 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: Close
[0m20:40:52.170045 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '081ba1cc-2f76-46bb-b493-58d653973d16', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f09317e9790>]}
[0m20:40:52.170885 [info ] [Thread-1 (]: 3 of 3 OK snapshotted snapshots.snp_transaction ................................ [[32mOK[0m in 0.06s]
[0m20:40:52.171652 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:40:52.173724 [debug] [MainThread]: Using duckdb connection "master"
[0m20:40:52.174191 [debug] [MainThread]: On master: BEGIN
[0m20:40:52.174550 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:40:52.181752 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:40:52.182157 [debug] [MainThread]: On master: COMMIT
[0m20:40:52.182390 [debug] [MainThread]: Using duckdb connection "master"
[0m20:40:52.182583 [debug] [MainThread]: On master: COMMIT
[0m20:40:52.184605 [debug] [MainThread]: SQL status: OK in 0.002 seconds
[0m20:40:52.185186 [debug] [MainThread]: On master: Close
[0m20:40:52.188089 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:40:52.188457 [debug] [MainThread]: Connection 'list_trial_snapshots' was properly closed.
[0m20:40:52.188660 [debug] [MainThread]: Connection 'snapshot.dbt_duckdb_test.snp_transaction' was properly closed.
[0m20:40:52.189184 [info ] [MainThread]: 
[0m20:40:52.190003 [info ] [MainThread]: Finished running 3 snapshots in 0 hours 0 minutes and 0.50 seconds (0.50s).
[0m20:40:52.190984 [debug] [MainThread]: Command end result
[0m20:40:52.271273 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:40:52.272800 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:40:52.278689 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:40:52.278968 [info ] [MainThread]: 
[0m20:40:52.280018 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:40:52.280473 [info ] [MainThread]: 
[0m20:40:52.280888 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m20:40:52.282952 [debug] [MainThread]: Resource report: {"command_name": "snapshot", "command_success": true, "command_wall_clock_time": 1.628874, "process_in_blocks": "153272", "process_kernel_time": 0.225624, "process_mem_max_rss": "174064", "process_out_blocks": "6792", "process_user_time": 2.511298}
[0m20:40:52.285306 [debug] [MainThread]: Command `dbt snapshot` succeeded at 20:40:52.285190 after 1.63 seconds
[0m20:40:52.285706 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f093eeccf90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f093eecc790>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f09300ba1d0>]}
[0m20:40:52.286038 [debug] [MainThread]: Flushing usage events
[0m20:40:53.647278 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:41:16.655707 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8a71969650>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8a71969750>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8a71969310>]}


============================== 20:41:16.658333 | b5b9a7c6-cc10-4406-8114-ee58152d708d ==============================
[0m20:41:16.658333 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:41:16.659313 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'debug': 'False', 'profiles_dir': '/home/rani/.dbt', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'fail_fast': 'False', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'invocation_command': 'dbt snapshot', 'static_parser': 'True', 'introspect': 'True', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'send_anonymous_usage_stats': 'True'}
[0m20:41:16.836441 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'b5b9a7c6-cc10-4406-8114-ee58152d708d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8a720514d0>]}
[0m20:41:16.924663 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'b5b9a7c6-cc10-4406-8114-ee58152d708d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8a73ba3450>]}
[0m20:41:16.927499 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:41:16.976092 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:41:17.089711 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m20:41:17.090072 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m20:41:17.096159 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:41:17.146698 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'b5b9a7c6-cc10-4406-8114-ee58152d708d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8a71810650>]}
[0m20:41:17.253064 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:41:17.254280 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:41:17.269475 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'b5b9a7c6-cc10-4406-8114-ee58152d708d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8a6716ff50>]}
[0m20:41:17.270184 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:41:17.270946 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'b5b9a7c6-cc10-4406-8114-ee58152d708d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8a717f4f10>]}
[0m20:41:17.273147 [info ] [MainThread]: 
[0m20:41:17.273634 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:41:17.274053 [info ] [MainThread]: 
[0m20:41:17.274684 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:41:17.280118 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:41:17.310592 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:41:17.311011 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:41:17.311268 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:41:17.318560 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:41:17.319799 [debug] [ThreadPool]: On list_trial: Close
[0m20:41:17.323129 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_snapshots)
[0m20:41:17.323548 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "snapshots"
"
[0m20:41:17.329141 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:41:17.329429 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:41:17.329931 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:41:17.335821 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:41:17.337280 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:41:17.337558 [debug] [ThreadPool]: On create_trial_snapshots: BEGIN
[0m20:41:17.338086 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:41:17.338318 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:41:17.338537 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
    
        create schema if not exists "trial"."snapshots"
    
[0m20:41:17.339104 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:41:17.340116 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:41:17.340375 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:41:17.340616 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:41:17.341181 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:41:17.341468 [debug] [ThreadPool]: On create_trial_snapshots: Close
[0m20:41:17.344554 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_snapshots, now list_trial_snapshots)
[0m20:41:17.349611 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:41:17.349901 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:41:17.350109 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:41:17.355631 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m20:41:17.355950 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:41:17.356185 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:41:17.377154 [debug] [ThreadPool]: SQL status: OK in 0.021 seconds
[0m20:41:17.378379 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:41:17.379249 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:41:17.379515 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:41:17.382031 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_snapshots, now list_trial_main)
[0m20:41:17.384531 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:41:17.384797 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:41:17.384993 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:41:17.391109 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:41:17.391431 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:41:17.391652 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:41:17.411973 [debug] [ThreadPool]: SQL status: OK in 0.020 seconds
[0m20:41:17.413238 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:41:17.413637 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:41:17.413848 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:41:17.419476 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'b5b9a7c6-cc10-4406-8114-ee58152d708d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8a6812eb10>]}
[0m20:41:17.419951 [debug] [MainThread]: Using duckdb connection "master"
[0m20:41:17.420170 [debug] [MainThread]: On master: BEGIN
[0m20:41:17.420371 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:41:17.426473 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m20:41:17.427019 [debug] [MainThread]: On master: COMMIT
[0m20:41:17.427295 [debug] [MainThread]: Using duckdb connection "master"
[0m20:41:17.427509 [debug] [MainThread]: On master: COMMIT
[0m20:41:17.428198 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:41:17.428524 [debug] [MainThread]: On master: Close
[0m20:41:17.431563 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_customer
[0m20:41:17.432009 [info ] [Thread-1 (]: 1 of 3 START snapshot snapshots.snp_customer ................................... [RUN]
[0m20:41:17.432754 [debug] [Thread-1 (]: Acquiring new duckdb connection 'snapshot.dbt_duckdb_test.snp_customer'
[0m20:41:17.433221 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_customer
[0m20:41:17.441390 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_customer
[0m20:41:17.493552 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:17.493933 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
select * from (
        
    

    select *
    from '/tmp/customer.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:41:17.494574 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:41:17.506401 [debug] [Thread-1 (]: SQL status: OK in 0.012 seconds
[0m20:41:17.513615 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:17.513950 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: BEGIN
[0m20:41:17.514626 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:41:17.514893 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:17.515130 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:17.533964 [debug] [Thread-1 (]: SQL status: OK in 0.018 seconds
[0m20:41:17.541063 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:17.541915 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:17.547121 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:41:17.582842 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:17.583418 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

        
  
    
    

    create  table
      "snp_customer__dbt_tmp20250125204117576209"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:41:17.597672 [debug] [Thread-1 (]: SQL status: OK in 0.014 seconds
[0m20:41:17.599938 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:17.600229 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125204117576209'
      
      
      order by ordinal_position

  
[0m20:41:17.604095 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:17.606862 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:17.607234 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:17.610157 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:17.612685 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:17.613011 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125204117576209'
      
      
      order by ordinal_position

  
[0m20:41:17.616930 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:17.619741 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:17.620054 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:17.623635 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:17.629203 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:17.629514 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125204117576209'
      
      
      order by ordinal_position

  
[0m20:41:17.632249 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:41:17.644033 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:17.644742 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:41:17.649976 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:41:17.653080 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:17.653413 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:41:17.654989 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:41:17.655484 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:17.655963 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:17.656392 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      update "trial"."snapshots"."snp_customer" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_customer__dbt_tmp20250125204117576209" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_customer" ("customerID", "RegionName", "customerName", "contactNumber", "Email", "loyaltyStatus", "flagActive", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."customerID",DBT_INTERNAL_SOURCE."RegionName",DBT_INTERNAL_SOURCE."customerName",DBT_INTERNAL_SOURCE."contactNumber",DBT_INTERNAL_SOURCE."Email",DBT_INTERNAL_SOURCE."loyaltyStatus",DBT_INTERNAL_SOURCE."flagActive",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_customer__dbt_tmp20250125204117576209" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:41:17.659253 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:41:17.668000 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:41:17.668328 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:17.668572 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:41:17.672540 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:17.677696 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:17.677998 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
drop table if exists "snp_customer__dbt_tmp20250125204117576209" cascade
[0m20:41:17.681354 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:17.683624 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: Close
[0m20:41:17.700430 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b5b9a7c6-cc10-4406-8114-ee58152d708d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8a665f2c10>]}
[0m20:41:17.701492 [info ] [Thread-1 (]: 1 of 3 OK snapshotted snapshots.snp_customer ................................... [[32mOK[0m in 0.26s]
[0m20:41:17.702616 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_customer
[0m20:41:17.703154 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_product
[0m20:41:17.704046 [info ] [Thread-1 (]: 2 of 3 START snapshot snapshots.snp_product .................................... [RUN]
[0m20:41:17.704700 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_customer, now snapshot.dbt_duckdb_test.snp_product)
[0m20:41:17.705153 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_product
[0m20:41:17.708766 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_product
[0m20:41:17.719369 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:17.719977 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
select * from (
        
    

    select *
    from '/tmp/product.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:41:17.720300 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:41:17.727608 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:41:17.730866 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:17.731189 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: BEGIN
[0m20:41:17.731886 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:41:17.732223 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:17.732537 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:17.753645 [debug] [Thread-1 (]: SQL status: OK in 0.021 seconds
[0m20:41:17.756580 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:17.757073 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:17.761125 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:17.764115 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:17.764560 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

        
  
    
    

    create  table
      "snp_product__dbt_tmp20250125204117763379"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:41:17.773429 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:41:17.776070 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:17.776479 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125204117763379'
      
      
      order by ordinal_position

  
[0m20:41:17.782311 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:17.785398 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:17.785711 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:17.789663 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:17.792918 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:17.793269 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125204117763379'
      
      
      order by ordinal_position

  
[0m20:41:17.796112 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:41:17.798666 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:17.798967 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:17.803139 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:17.805757 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:17.806055 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125204117763379'
      
      
      order by ordinal_position

  
[0m20:41:17.809889 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:17.811964 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:17.812590 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:41:17.816604 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:17.817546 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:17.817823 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:41:17.818721 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:41:17.819188 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:17.819644 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:17.819927 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      update "trial"."snapshots"."snp_product" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_product__dbt_tmp20250125204117763379" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_product" ("productId", "productName", "description", "price", "discount", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."productName",DBT_INTERNAL_SOURCE."description",DBT_INTERNAL_SOURCE."price",DBT_INTERNAL_SOURCE."discount",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_product__dbt_tmp20250125204117763379" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:41:17.822437 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:41:17.823588 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:41:17.823915 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:17.824174 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:41:17.828672 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:17.829429 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:17.829686 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
drop table if exists "snp_product__dbt_tmp20250125204117763379" cascade
[0m20:41:17.832852 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:17.833985 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: Close
[0m20:41:17.845000 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b5b9a7c6-cc10-4406-8114-ee58152d708d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8a6661b390>]}
[0m20:41:17.845783 [info ] [Thread-1 (]: 2 of 3 OK snapshotted snapshots.snp_product .................................... [[32mOK[0m in 0.14s]
[0m20:41:17.846472 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_product
[0m20:41:17.847275 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:41:17.847835 [info ] [Thread-1 (]: 3 of 3 START snapshot snapshots.snp_transaction ................................ [RUN]
[0m20:41:17.848382 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_product, now snapshot.dbt_duckdb_test.snp_transaction)
[0m20:41:17.848735 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_transaction
[0m20:41:17.851479 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_transaction
[0m20:41:17.854605 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:17.854912 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
select * from (
        select id from (
                
    

    select *
    from '/tmp/transaction.csv'
            ) subq
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:41:17.855164 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:41:17.862466 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:41:17.868472 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:17.868987 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: BEGIN
[0m20:41:17.871610 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:41:17.872313 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:17.872648 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:17.896713 [debug] [Thread-1 (]: SQL status: OK in 0.023 seconds
[0m20:41:17.900670 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:17.901194 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:17.905512 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:17.908162 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:17.908571 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

        
  
    
    

    create  table
      "snp_transaction__dbt_tmp20250125204117907441"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        transactionId as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."id" != source_data."id"
        or
        (
            ((snapshotted_data."id" is null) and not (source_data."id" is null))
            or
            ((not snapshotted_data."id" is null) and (source_data."id" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."id" != source_data."id"
        or
        (
            ((snapshotted_data."id" is null) and not (source_data."id" is null))
            or
            ((not snapshotted_data."id" is null) and (source_data."id" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:41:17.916942 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:41:17.920208 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:17.920652 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125204117907441'
      
      
      order by ordinal_position

  
[0m20:41:17.924585 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:17.927070 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:17.927365 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:17.931889 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:17.934354 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:17.934649 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125204117907441'
      
      
      order by ordinal_position

  
[0m20:41:17.937407 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:41:17.940120 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:17.940447 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:17.943211 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:41:17.945719 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:17.946123 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125204117907441'
      
      
      order by ordinal_position

  
[0m20:41:17.950270 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:17.952090 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:17.952432 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        transactionId as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."id" != source_data."id"
        or
        (
            ((snapshotted_data."id" is null) and not (source_data."id" is null))
            or
            ((not snapshotted_data."id" is null) and (source_data."id" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."id" != source_data."id"
        or
        (
            ((snapshotted_data."id" is null) and not (source_data."id" is null))
            or
            ((not snapshotted_data."id" is null) and (source_data."id" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:41:17.956271 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:17.957271 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:17.957551 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:41:17.958545 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:41:17.959027 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:17.959795 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:17.960214 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      update "trial"."snapshots"."snp_transaction" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_transaction__dbt_tmp20250125204117907441" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_transaction" ("id", "transactionId", "customerId", "productId", "amount", "transactionDate", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."id",DBT_INTERNAL_SOURCE."transactionId",DBT_INTERNAL_SOURCE."customerId",DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."amount",DBT_INTERNAL_SOURCE."transactionDate",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_transaction__dbt_tmp20250125204117907441" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:41:17.962096 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:41:17.964062 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:41:17.964422 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:17.964699 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:41:17.968434 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:17.969365 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:17.969876 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
drop table if exists "snp_transaction__dbt_tmp20250125204117907441" cascade
[0m20:41:17.973321 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:17.974474 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: Close
[0m20:41:17.985642 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b5b9a7c6-cc10-4406-8114-ee58152d708d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8a66541f50>]}
[0m20:41:17.986393 [info ] [Thread-1 (]: 3 of 3 OK snapshotted snapshots.snp_transaction ................................ [[32mOK[0m in 0.14s]
[0m20:41:17.987139 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:41:17.989288 [debug] [MainThread]: Using duckdb connection "master"
[0m20:41:17.989860 [debug] [MainThread]: On master: BEGIN
[0m20:41:17.990235 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:41:17.997500 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:41:17.997882 [debug] [MainThread]: On master: COMMIT
[0m20:41:17.998120 [debug] [MainThread]: Using duckdb connection "master"
[0m20:41:17.998310 [debug] [MainThread]: On master: COMMIT
[0m20:41:17.998971 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:41:17.999306 [debug] [MainThread]: On master: Close
[0m20:41:18.001101 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:41:18.001380 [debug] [MainThread]: Connection 'list_trial_main' was properly closed.
[0m20:41:18.001581 [debug] [MainThread]: Connection 'snapshot.dbt_duckdb_test.snp_transaction' was properly closed.
[0m20:41:18.001834 [info ] [MainThread]: 
[0m20:41:18.002177 [info ] [MainThread]: Finished running 3 snapshots in 0 hours 0 minutes and 0.73 seconds (0.73s).
[0m20:41:18.003119 [debug] [MainThread]: Command end result
[0m20:41:18.067387 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:41:18.069233 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:41:18.074813 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:41:18.075077 [info ] [MainThread]: 
[0m20:41:18.075777 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:41:18.076375 [info ] [MainThread]: 
[0m20:41:18.076802 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m20:41:18.078288 [debug] [MainThread]: Resource report: {"command_name": "snapshot", "command_success": true, "command_wall_clock_time": 1.4692614, "process_in_blocks": "1232", "process_kernel_time": 0.113611, "process_mem_max_rss": "186700", "process_out_blocks": "3872", "process_user_time": 2.726684}
[0m20:41:18.078628 [debug] [MainThread]: Command `dbt snapshot` succeeded at 20:41:18.078554 after 1.47 seconds
[0m20:41:18.078949 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8a75609110>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8a75608690>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8a75609590>]}
[0m20:41:18.079252 [debug] [MainThread]: Flushing usage events
[0m20:41:19.551825 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:41:38.165835 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe95adad750>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe95adad590>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe95adad350>]}


============================== 20:41:38.169150 | 7e9c292f-2a84-49d1-a022-779aaa0242ae ==============================
[0m20:41:38.169150 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:41:38.170562 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'debug': 'False', 'fail_fast': 'False', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'version_check': 'True', 'profiles_dir': '/home/rani/.dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'invocation_command': 'dbt snapshot', 'log_format': 'default', 'static_parser': 'True', 'target_path': 'None', 'introspect': 'True', 'send_anonymous_usage_stats': 'True'}
[0m20:41:38.354823 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '7e9c292f-2a84-49d1-a022-779aaa0242ae', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe951539010>]}
[0m20:41:38.411557 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '7e9c292f-2a84-49d1-a022-779aaa0242ae', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe95cfe70d0>]}
[0m20:41:38.413901 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:41:38.470178 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:41:38.584350 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m20:41:38.584706 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m20:41:38.590420 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:41:38.647904 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '7e9c292f-2a84-49d1-a022-779aaa0242ae', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe951544f50>]}
[0m20:41:38.743883 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:41:38.745514 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:41:38.757477 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '7e9c292f-2a84-49d1-a022-779aaa0242ae', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe95ac5ea90>]}
[0m20:41:38.757944 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:41:38.758384 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '7e9c292f-2a84-49d1-a022-779aaa0242ae', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe951339450>]}
[0m20:41:38.760768 [info ] [MainThread]: 
[0m20:41:38.762638 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:41:38.763474 [info ] [MainThread]: 
[0m20:41:38.764225 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:41:38.770159 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:41:38.800793 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:41:38.801140 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:41:38.801355 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:41:38.810016 [debug] [ThreadPool]: SQL status: OK in 0.009 seconds
[0m20:41:38.811178 [debug] [ThreadPool]: On list_trial: Close
[0m20:41:38.814338 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_snapshots)
[0m20:41:38.814824 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "snapshots"
"
[0m20:41:38.820935 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:41:38.821222 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:41:38.821432 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:41:38.828820 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:41:38.830110 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:41:38.830372 [debug] [ThreadPool]: On create_trial_snapshots: BEGIN
[0m20:41:38.830993 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:41:38.831234 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:41:38.831429 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
    
        create schema if not exists "trial"."snapshots"
    
[0m20:41:38.832030 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:41:38.833008 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:41:38.833269 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:41:38.833473 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:41:38.833994 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:41:38.834287 [debug] [ThreadPool]: On create_trial_snapshots: Close
[0m20:41:38.837394 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_snapshots, now list_trial_snapshots)
[0m20:41:38.842162 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:41:38.842684 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:41:38.843084 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:41:38.848710 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:41:38.849049 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:41:38.849284 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:41:38.871011 [debug] [ThreadPool]: SQL status: OK in 0.021 seconds
[0m20:41:38.872290 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:41:38.873158 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:41:38.873408 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:41:38.875771 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_snapshots, now list_trial_main)
[0m20:41:38.878109 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:41:38.878384 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:41:38.878616 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:41:38.885190 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:41:38.885544 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:41:38.885802 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:41:38.906379 [debug] [ThreadPool]: SQL status: OK in 0.020 seconds
[0m20:41:38.907802 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:41:38.908238 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:41:38.908464 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:41:38.911924 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '7e9c292f-2a84-49d1-a022-779aaa0242ae', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe95c920f90>]}
[0m20:41:38.912627 [debug] [MainThread]: Using duckdb connection "master"
[0m20:41:38.912904 [debug] [MainThread]: On master: BEGIN
[0m20:41:38.913146 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:41:38.919504 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m20:41:38.919830 [debug] [MainThread]: On master: COMMIT
[0m20:41:38.920070 [debug] [MainThread]: Using duckdb connection "master"
[0m20:41:38.920272 [debug] [MainThread]: On master: COMMIT
[0m20:41:38.920765 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:41:38.921048 [debug] [MainThread]: On master: Close
[0m20:41:38.924580 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_customer
[0m20:41:38.925079 [info ] [Thread-1 (]: 1 of 3 START snapshot snapshots.snp_customer ................................... [RUN]
[0m20:41:38.925717 [debug] [Thread-1 (]: Acquiring new duckdb connection 'snapshot.dbt_duckdb_test.snp_customer'
[0m20:41:38.926213 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_customer
[0m20:41:38.932885 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_customer
[0m20:41:38.985186 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:38.985588 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
select * from (
        
    

    select *
    from '/tmp/customer.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:41:38.985858 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:41:38.996733 [debug] [Thread-1 (]: SQL status: OK in 0.011 seconds
[0m20:41:39.003387 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:39.003721 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: BEGIN
[0m20:41:39.004349 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:41:39.004635 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:39.004880 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:39.022942 [debug] [Thread-1 (]: SQL status: OK in 0.018 seconds
[0m20:41:39.029863 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:39.030208 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:39.034634 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:39.071386 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:39.072310 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

        
  
    
    

    create  table
      "snp_customer__dbt_tmp20250125204139063688"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:41:39.083246 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m20:41:39.085461 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:39.085764 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125204139063688'
      
      
      order by ordinal_position

  
[0m20:41:39.090936 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:41:39.093956 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:39.094273 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:39.097203 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:39.099714 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:39.100014 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125204139063688'
      
      
      order by ordinal_position

  
[0m20:41:39.103198 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:39.105689 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:39.106011 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:39.109707 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:39.115396 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:39.115721 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125204139063688'
      
      
      order by ordinal_position

  
[0m20:41:39.119130 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:39.130265 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:39.130772 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:41:39.136284 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:41:39.139237 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:39.139547 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:41:39.140716 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:41:39.141241 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:39.142565 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:39.143016 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      update "trial"."snapshots"."snp_customer" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_customer__dbt_tmp20250125204139063688" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_customer" ("customerID", "RegionName", "customerName", "contactNumber", "Email", "loyaltyStatus", "flagActive", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."customerID",DBT_INTERNAL_SOURCE."RegionName",DBT_INTERNAL_SOURCE."customerName",DBT_INTERNAL_SOURCE."contactNumber",DBT_INTERNAL_SOURCE."Email",DBT_INTERNAL_SOURCE."loyaltyStatus",DBT_INTERNAL_SOURCE."flagActive",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_customer__dbt_tmp20250125204139063688" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:41:39.145198 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:41:39.155462 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:41:39.155829 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:39.156081 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:41:39.160147 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:39.165091 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:41:39.165402 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
drop table if exists "snp_customer__dbt_tmp20250125204139063688" cascade
[0m20:41:39.169446 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:39.171572 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: Close
[0m20:41:39.186487 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7e9c292f-2a84-49d1-a022-779aaa0242ae', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe9501e5790>]}
[0m20:41:39.187451 [info ] [Thread-1 (]: 1 of 3 OK snapshotted snapshots.snp_customer ................................... [[32mOK[0m in 0.26s]
[0m20:41:39.188123 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_customer
[0m20:41:39.188777 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_product
[0m20:41:39.189375 [info ] [Thread-1 (]: 2 of 3 START snapshot snapshots.snp_product .................................... [RUN]
[0m20:41:39.190053 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_customer, now snapshot.dbt_duckdb_test.snp_product)
[0m20:41:39.190556 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_product
[0m20:41:39.193204 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_product
[0m20:41:39.197316 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:39.197682 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
select * from (
        
    

    select *
    from '/tmp/product.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:41:39.198324 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:41:39.205846 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:41:39.208408 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:39.208702 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: BEGIN
[0m20:41:39.209301 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:41:39.209630 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:39.209901 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:39.239799 [debug] [Thread-1 (]: SQL status: OK in 0.030 seconds
[0m20:41:39.243162 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:39.243495 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:39.247110 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:39.249792 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:39.250221 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

        
  
    
    

    create  table
      "snp_product__dbt_tmp20250125204139248950"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:41:39.258350 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:41:39.260522 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:39.261072 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125204139248950'
      
      
      order by ordinal_position

  
[0m20:41:39.264701 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:39.267338 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:39.267641 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:39.270658 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:39.273391 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:39.273739 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125204139248950'
      
      
      order by ordinal_position

  
[0m20:41:39.276941 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:39.279674 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:39.279991 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:39.283200 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:39.285890 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:39.286201 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125204139248950'
      
      
      order by ordinal_position

  
[0m20:41:39.289198 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:39.291190 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:39.291634 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:41:39.295897 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:39.297057 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:39.297442 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:41:39.298469 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:41:39.299047 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:39.299493 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:39.299772 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      update "trial"."snapshots"."snp_product" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_product__dbt_tmp20250125204139248950" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_product" ("productId", "productName", "description", "price", "discount", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."productName",DBT_INTERNAL_SOURCE."description",DBT_INTERNAL_SOURCE."price",DBT_INTERNAL_SOURCE."discount",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_product__dbt_tmp20250125204139248950" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:41:39.302302 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:41:39.303490 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:41:39.303856 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:39.304188 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:41:39.309313 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:41:39.310065 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:41:39.310337 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
drop table if exists "snp_product__dbt_tmp20250125204139248950" cascade
[0m20:41:39.314587 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:39.315831 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: Close
[0m20:41:39.329456 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7e9c292f-2a84-49d1-a022-779aaa0242ae', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe9501c4210>]}
[0m20:41:39.330440 [info ] [Thread-1 (]: 2 of 3 OK snapshotted snapshots.snp_product .................................... [[32mOK[0m in 0.14s]
[0m20:41:39.331754 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_product
[0m20:41:39.332669 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:41:39.333466 [info ] [Thread-1 (]: 3 of 3 START snapshot snapshots.snp_transaction ................................ [RUN]
[0m20:41:39.334498 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_product, now snapshot.dbt_duckdb_test.snp_transaction)
[0m20:41:39.335111 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_transaction
[0m20:41:39.338279 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_transaction
[0m20:41:39.341168 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:39.341721 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
select * from (
        select id from (
                
    

    select *
    from '/tmp/transaction.csv'
            ) subq
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:41:39.342220 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:41:39.351856 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:41:39.355992 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:39.356431 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: BEGIN
[0m20:41:39.358037 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:41:39.358437 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:39.358802 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:39.380649 [debug] [Thread-1 (]: SQL status: OK in 0.021 seconds
[0m20:41:39.384053 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:39.384371 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:39.387325 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:39.390200 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:39.390582 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

        
  
    
    

    create  table
      "snp_transaction__dbt_tmp20250125204139389418"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        transactionId as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."id" != source_data."id"
        or
        (
            ((snapshotted_data."id" is null) and not (source_data."id" is null))
            or
            ((not snapshotted_data."id" is null) and (source_data."id" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."id" != source_data."id"
        or
        (
            ((snapshotted_data."id" is null) and not (source_data."id" is null))
            or
            ((not snapshotted_data."id" is null) and (source_data."id" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:41:39.399237 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:41:39.401968 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:39.402333 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125204139389418'
      
      
      order by ordinal_position

  
[0m20:41:39.405230 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:39.407835 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:39.408135 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:39.411845 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:39.414446 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:39.414760 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125204139389418'
      
      
      order by ordinal_position

  
[0m20:41:39.418583 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:39.421469 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:39.422018 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:41:39.425984 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:39.428671 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:39.428982 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125204139389418'
      
      
      order by ordinal_position

  
[0m20:41:39.433021 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:41:39.434820 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:39.435179 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        transactionId as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(transactionId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        transactionId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."id" != source_data."id"
        or
        (
            ((snapshotted_data."id" is null) and not (source_data."id" is null))
            or
            ((not snapshotted_data."id" is null) and (source_data."id" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."id" != source_data."id"
        or
        (
            ((snapshotted_data."id" is null) and not (source_data."id" is null))
            or
            ((not snapshotted_data."id" is null) and (source_data."id" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:41:39.440561 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:41:39.441941 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:39.442256 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:41:39.443207 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:41:39.443787 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:39.444279 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:39.444564 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      update "trial"."snapshots"."snp_transaction" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_transaction__dbt_tmp20250125204139389418" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_transaction" ("id", "transactionId", "customerId", "productId", "amount", "transactionDate", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."id",DBT_INTERNAL_SOURCE."transactionId",DBT_INTERNAL_SOURCE."customerId",DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."amount",DBT_INTERNAL_SOURCE."transactionDate",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_transaction__dbt_tmp20250125204139389418" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:41:39.450385 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:41:39.452292 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:41:39.452605 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:39.452836 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:41:39.459197 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m20:41:39.459945 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:41:39.460207 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
drop table if exists "snp_transaction__dbt_tmp20250125204139389418" cascade
[0m20:41:39.463857 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:41:39.464996 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: Close
[0m20:41:39.479008 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7e9c292f-2a84-49d1-a022-779aaa0242ae', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe9501dbc10>]}
[0m20:41:39.479743 [info ] [Thread-1 (]: 3 of 3 OK snapshotted snapshots.snp_transaction ................................ [[32mOK[0m in 0.14s]
[0m20:41:39.480383 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:41:39.482621 [debug] [MainThread]: Using duckdb connection "master"
[0m20:41:39.483005 [debug] [MainThread]: On master: BEGIN
[0m20:41:39.483372 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:41:39.490743 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:41:39.491107 [debug] [MainThread]: On master: COMMIT
[0m20:41:39.491603 [debug] [MainThread]: Using duckdb connection "master"
[0m20:41:39.491859 [debug] [MainThread]: On master: COMMIT
[0m20:41:39.492383 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:41:39.492649 [debug] [MainThread]: On master: Close
[0m20:41:39.495057 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:41:39.495357 [debug] [MainThread]: Connection 'list_trial_main' was properly closed.
[0m20:41:39.495545 [debug] [MainThread]: Connection 'snapshot.dbt_duckdb_test.snp_transaction' was properly closed.
[0m20:41:39.495862 [info ] [MainThread]: 
[0m20:41:39.496366 [info ] [MainThread]: Finished running 3 snapshots in 0 hours 0 minutes and 0.73 seconds (0.73s).
[0m20:41:39.497592 [debug] [MainThread]: Command end result
[0m20:41:39.562745 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:41:39.564443 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:41:39.569759 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:41:39.570028 [info ] [MainThread]: 
[0m20:41:39.570839 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:41:39.571745 [info ] [MainThread]: 
[0m20:41:39.572202 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m20:41:39.573303 [debug] [MainThread]: Resource report: {"command_name": "snapshot", "command_success": true, "command_wall_clock_time": 1.4580003, "process_in_blocks": "264", "process_kernel_time": 0.160191, "process_mem_max_rss": "191388", "process_out_blocks": "4392", "process_user_time": 2.533034}
[0m20:41:39.573636 [debug] [MainThread]: Command `dbt snapshot` succeeded at 20:41:39.573563 after 1.46 seconds
[0m20:41:39.573908 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe95ea4cfd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe95ea4c690>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe95ceaff10>]}
[0m20:41:39.574166 [debug] [MainThread]: Flushing usage events
[0m20:41:40.798685 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:42:14.207289 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5fe29a2c10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5fe29a28d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5fe29a2610>]}


============================== 20:42:14.210170 | ae06fd31-217a-4c4a-90c0-4ba12997b7e8 ==============================
[0m20:42:14.210170 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:42:14.210775 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/rani/.dbt', 'fail_fast': 'False', 'debug': 'False', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'version_check': 'True', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'invocation_command': 'dbt snapshot', 'send_anonymous_usage_stats': 'True'}
[0m20:42:14.390752 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'ae06fd31-217a-4c4a-90c0-4ba12997b7e8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5fe35fcb10>]}
[0m20:42:14.444182 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'ae06fd31-217a-4c4a-90c0-4ba12997b7e8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5fe4be1750>]}
[0m20:42:14.446383 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:42:14.519524 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:42:14.641688 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m20:42:14.642266 [debug] [MainThread]: Partial parsing: updated file: dbt_duckdb_test://snapshots/snp_transaction.sql
[0m20:42:14.849695 [error] [MainThread]: Encountered an error:
Invalid value for 'check_cols': id. Expected 'all' or a list of strings.
[0m20:42:14.855655 [error] [MainThread]: Traceback (most recent call last):
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/cli/requires.py", line 153, in wrapper
    result, success = func(*args, **kwargs)
                      ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/cli/requires.py", line 103, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/cli/requires.py", line 235, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/cli/requires.py", line 264, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/cli/requires.py", line 311, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/cli/requires.py", line 327, in wrapper
    setup_manifest(ctx, write=write, write_perf_info=write_perf_info)
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/cli/requires.py", line 351, in setup_manifest
    ctx.obj["manifest"] = parse_manifest(
                          ^^^^^^^^^^^^^^^
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/parser/manifest.py", line 2061, in parse_manifest
    manifest = ManifestLoader.get_full_manifest(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/parser/manifest.py", line 312, in get_full_manifest
    manifest = loader.load()
               ^^^^^^^^^^^^^
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/parser/manifest.py", line 476, in load
    self.check_valid_snapshot_config()
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/parser/manifest.py", line 1412, in check_valid_snapshot_config
    node.config.final_validate()
  File "/home/rani/apps/dbt-demo/dbt-env/lib/python3.11/site-packages/dbt/artifacts/resources/v1/snapshot.py", line 56, in final_validate
    raise ValidationError(
dbt_common.dataclass_schema.ValidationError: Invalid value for 'check_cols': id. Expected 'all' or a list of strings.

[0m20:42:14.857166 [debug] [MainThread]: Resource report: {"command_name": "snapshot", "command_success": false, "command_wall_clock_time": 0.6994272, "process_in_blocks": "8", "process_kernel_time": 0.141938, "process_mem_max_rss": "148628", "process_out_blocks": "24", "process_user_time": 1.764095}
[0m20:42:14.857692 [debug] [MainThread]: Command `dbt snapshot` failed at 20:42:14.857577 after 0.70 seconds
[0m20:42:14.858154 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5fe2d91dd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5fe65a2790>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5fd8d99e50>]}
[0m20:42:14.858745 [debug] [MainThread]: Flushing usage events
[0m20:42:16.450451 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:42:27.472928 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4d0a322790>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4d09f39b50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4d09f39910>]}


============================== 20:42:27.475516 | c846802c-8063-4d66-9dad-3c0bcde50d1a ==============================
[0m20:42:27.475516 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:42:27.476132 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'fail_fast': 'False', 'debug': 'False', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'version_check': 'True', 'profiles_dir': '/home/rani/.dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'invocation_command': 'dbt snapshot', 'introspect': 'True', 'log_format': 'default', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m20:42:27.656197 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'c846802c-8063-4d66-9dad-3c0bcde50d1a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4d09f44cd0>]}
[0m20:42:27.706929 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'c846802c-8063-4d66-9dad-3c0bcde50d1a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4d0c185a90>]}
[0m20:42:27.708783 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:42:27.778460 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:42:27.901342 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m20:42:27.901892 [debug] [MainThread]: Partial parsing: updated file: dbt_duckdb_test://snapshots/snp_transaction.sql
[0m20:42:28.156249 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:42:28.171155 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'c846802c-8063-4d66-9dad-3c0bcde50d1a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4d0038cb90>]}
[0m20:42:28.263078 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:42:28.264663 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:42:28.277686 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'c846802c-8063-4d66-9dad-3c0bcde50d1a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4d003ad390>]}
[0m20:42:28.278230 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:42:28.278645 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'c846802c-8063-4d66-9dad-3c0bcde50d1a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4d00113dd0>]}
[0m20:42:28.280931 [info ] [MainThread]: 
[0m20:42:28.282075 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:42:28.282487 [info ] [MainThread]: 
[0m20:42:28.283164 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:42:28.288354 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:42:28.320178 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:42:28.320616 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:42:28.321060 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:42:28.330407 [debug] [ThreadPool]: SQL status: OK in 0.009 seconds
[0m20:42:28.331570 [debug] [ThreadPool]: On list_trial: Close
[0m20:42:28.333978 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_snapshots)
[0m20:42:28.334433 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "snapshots"
"
[0m20:42:28.341092 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:42:28.341428 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:42:28.341637 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:42:28.349307 [debug] [ThreadPool]: SQL status: OK in 0.008 seconds
[0m20:42:28.350564 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:42:28.350862 [debug] [ThreadPool]: On create_trial_snapshots: BEGIN
[0m20:42:28.351421 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:42:28.351669 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:42:28.351899 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
    
        create schema if not exists "trial"."snapshots"
    
[0m20:42:28.352503 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:42:28.353258 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:42:28.353514 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:42:28.353709 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:42:28.354157 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:42:28.354413 [debug] [ThreadPool]: On create_trial_snapshots: Close
[0m20:42:28.357911 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_snapshots, now list_trial_snapshots)
[0m20:42:28.362658 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:42:28.362942 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:42:28.363144 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:42:28.370033 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:42:28.370377 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:42:28.370664 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:42:28.393044 [debug] [ThreadPool]: SQL status: OK in 0.022 seconds
[0m20:42:28.394435 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:42:28.395414 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:42:28.395719 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:42:28.398347 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_snapshots, now list_trial_main)
[0m20:42:28.400877 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:42:28.401177 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:42:28.401374 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:42:28.408369 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:42:28.408711 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:42:28.408942 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:42:28.430102 [debug] [ThreadPool]: SQL status: OK in 0.021 seconds
[0m20:42:28.431874 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:42:28.432305 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:42:28.432547 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:42:28.436205 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'c846802c-8063-4d66-9dad-3c0bcde50d1a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4d00396350>]}
[0m20:42:28.436977 [debug] [MainThread]: Using duckdb connection "master"
[0m20:42:28.437280 [debug] [MainThread]: On master: BEGIN
[0m20:42:28.437480 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:42:28.444064 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m20:42:28.444669 [debug] [MainThread]: On master: COMMIT
[0m20:42:28.444925 [debug] [MainThread]: Using duckdb connection "master"
[0m20:42:28.445128 [debug] [MainThread]: On master: COMMIT
[0m20:42:28.445626 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:42:28.445883 [debug] [MainThread]: On master: Close
[0m20:42:28.450019 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_customer
[0m20:42:28.450470 [info ] [Thread-1 (]: 1 of 3 START snapshot snapshots.snp_customer ................................... [RUN]
[0m20:42:28.451222 [debug] [Thread-1 (]: Acquiring new duckdb connection 'snapshot.dbt_duckdb_test.snp_customer'
[0m20:42:28.451716 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_customer
[0m20:42:28.459946 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_customer
[0m20:42:28.512357 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:42:28.512755 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
select * from (
        
    

    select *
    from '/tmp/customer.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:42:28.513019 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:42:28.521815 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:42:28.529361 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:42:28.529708 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: BEGIN
[0m20:42:28.530370 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:42:28.530640 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:42:28.530875 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:42:28.559491 [debug] [Thread-1 (]: SQL status: OK in 0.028 seconds
[0m20:42:28.566367 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:42:28.566700 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:42:28.570666 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:42:28.616838 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:42:28.617410 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

        
  
    
    

    create  table
      "snp_customer__dbt_tmp20250125204228609702"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:42:28.629040 [debug] [Thread-1 (]: SQL status: OK in 0.011 seconds
[0m20:42:28.631734 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:42:28.632243 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125204228609702'
      
      
      order by ordinal_position

  
[0m20:42:28.635665 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:42:28.638381 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:42:28.638684 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:42:28.642741 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:42:28.645189 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:42:28.645484 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125204228609702'
      
      
      order by ordinal_position

  
[0m20:42:28.648279 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:42:28.650654 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:42:28.650949 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:42:28.655126 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:42:28.660396 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:42:28.660705 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125204228609702'
      
      
      order by ordinal_position

  
[0m20:42:28.665071 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:42:28.676190 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:42:28.676679 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:42:28.681762 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:42:28.684604 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:42:28.684905 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:42:28.685977 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:42:28.686442 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_customer"
[0m20:42:28.686975 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:42:28.687318 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      update "trial"."snapshots"."snp_customer" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_customer__dbt_tmp20250125204228609702" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_customer" ("customerID", "RegionName", "customerName", "contactNumber", "Email", "loyaltyStatus", "flagActive", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."customerID",DBT_INTERNAL_SOURCE."RegionName",DBT_INTERNAL_SOURCE."customerName",DBT_INTERNAL_SOURCE."contactNumber",DBT_INTERNAL_SOURCE."Email",DBT_INTERNAL_SOURCE."loyaltyStatus",DBT_INTERNAL_SOURCE."flagActive",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_customer__dbt_tmp20250125204228609702" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:42:28.689361 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:42:28.698966 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:42:28.699344 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:42:28.699591 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:42:28.704021 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:42:28.708565 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:42:28.709026 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
drop table if exists "snp_customer__dbt_tmp20250125204228609702" cascade
[0m20:42:28.712624 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:42:28.714709 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: Close
[0m20:42:28.728651 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c846802c-8063-4d66-9dad-3c0bcde50d1a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4cfb52ded0>]}
[0m20:42:28.729434 [info ] [Thread-1 (]: 1 of 3 OK snapshotted snapshots.snp_customer ................................... [[32mOK[0m in 0.28s]
[0m20:42:28.730281 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_customer
[0m20:42:28.731159 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_product
[0m20:42:28.731748 [info ] [Thread-1 (]: 2 of 3 START snapshot snapshots.snp_product .................................... [RUN]
[0m20:42:28.732428 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_customer, now snapshot.dbt_duckdb_test.snp_product)
[0m20:42:28.733888 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_product
[0m20:42:28.738791 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_product
[0m20:42:28.743825 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:42:28.744178 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
select * from (
        
    

    select *
    from '/tmp/product.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:42:28.744432 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:42:28.752169 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:42:28.755056 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:42:28.755364 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: BEGIN
[0m20:42:28.756441 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:42:28.757044 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:42:28.757351 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:42:28.776952 [debug] [Thread-1 (]: SQL status: OK in 0.019 seconds
[0m20:42:28.825448 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:42:28.825850 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:42:28.830917 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:42:28.833353 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:42:28.834298 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

        
  
    
    

    create  table
      "snp_product__dbt_tmp20250125204228832592"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:42:28.862364 [debug] [Thread-1 (]: SQL status: OK in 0.027 seconds
[0m20:42:28.869050 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:42:28.869437 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125204228832592'
      
      
      order by ordinal_position

  
[0m20:42:28.872467 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:42:28.875052 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:42:28.875346 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:42:28.878536 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:42:28.881246 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:42:28.881544 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125204228832592'
      
      
      order by ordinal_position

  
[0m20:42:28.884236 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:42:28.886668 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:42:28.887100 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:42:28.891202 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:42:28.893756 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:42:28.894047 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125204228832592'
      
      
      order by ordinal_position

  
[0m20:42:28.898234 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:42:28.900154 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:42:28.900585 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:42:28.904581 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:42:28.905442 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:42:28.905700 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:42:28.906681 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:42:28.907234 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_product"
[0m20:42:28.908078 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:42:28.908531 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      update "trial"."snapshots"."snp_product" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_product__dbt_tmp20250125204228832592" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_product" ("productId", "productName", "description", "price", "discount", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."productName",DBT_INTERNAL_SOURCE."description",DBT_INTERNAL_SOURCE."price",DBT_INTERNAL_SOURCE."discount",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_product__dbt_tmp20250125204228832592" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:42:28.910546 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:42:28.911875 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:42:28.912166 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:42:28.912393 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:42:28.917026 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:42:28.918165 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:42:28.918500 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
drop table if exists "snp_product__dbt_tmp20250125204228832592" cascade
[0m20:42:28.921761 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:42:28.922842 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: Close
[0m20:42:28.934658 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c846802c-8063-4d66-9dad-3c0bcde50d1a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4d004aa450>]}
[0m20:42:28.935385 [info ] [Thread-1 (]: 2 of 3 OK snapshotted snapshots.snp_product .................................... [[32mOK[0m in 0.20s]
[0m20:42:28.936062 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_product
[0m20:42:28.936723 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:42:28.937775 [info ] [Thread-1 (]: 3 of 3 START snapshot snapshots.snp_transaction ................................ [RUN]
[0m20:42:28.938481 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_product, now snapshot.dbt_duckdb_test.snp_transaction)
[0m20:42:28.939885 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_transaction
[0m20:42:28.944008 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_transaction
[0m20:42:28.947530 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:42:28.947863 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
select * from (
        select id from (
                
    

    select *
    from '/tmp/transaction.csv'
            ) subq
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:42:28.948231 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:42:28.955725 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:42:28.959263 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:42:28.959579 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: BEGIN
[0m20:42:28.960250 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:42:28.960562 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:42:28.960840 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:42:28.995314 [debug] [Thread-1 (]: SQL status: OK in 0.034 seconds
[0m20:42:28.998636 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:42:28.998955 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:42:29.002124 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:42:29.004451 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:42:29.004798 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

        
  
    
    

    create  table
      "snp_transaction__dbt_tmp20250125204229003759"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        id as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        id as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(id as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        id as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."id" != source_data."id"
        or
        (
            ((snapshotted_data."id" is null) and not (source_data."id" is null))
            or
            ((not snapshotted_data."id" is null) and (source_data."id" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."id" != source_data."id"
        or
        (
            ((snapshotted_data."id" is null) and not (source_data."id" is null))
            or
            ((not snapshotted_data."id" is null) and (source_data."id" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:42:29.015518 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m20:42:29.019199 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:42:29.019524 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125204229003759'
      
      
      order by ordinal_position

  
[0m20:42:29.022876 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:42:29.025463 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:42:29.025934 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:42:29.029361 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:42:29.031929 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:42:29.032223 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125204229003759'
      
      
      order by ordinal_position

  
[0m20:42:29.035084 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:42:29.038127 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:42:29.038459 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:42:29.041466 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:42:29.043984 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:42:29.044276 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125204229003759'
      
      
      order by ordinal_position

  
[0m20:42:29.047241 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:42:29.049031 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:42:29.049387 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        id as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        id as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(id as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        id as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."id" != source_data."id"
        or
        (
            ((snapshotted_data."id" is null) and not (source_data."id" is null))
            or
            ((not snapshotted_data."id" is null) and (source_data."id" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."id" != source_data."id"
        or
        (
            ((snapshotted_data."id" is null) and not (source_data."id" is null))
            or
            ((not snapshotted_data."id" is null) and (source_data."id" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:42:29.053399 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:42:29.054381 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:42:29.054674 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:42:29.055932 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:42:29.056400 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:42:29.056865 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:42:29.057340 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      update "trial"."snapshots"."snp_transaction" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_transaction__dbt_tmp20250125204229003759" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_transaction" ("id", "transactionId", "customerId", "productId", "amount", "transactionDate", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."id",DBT_INTERNAL_SOURCE."transactionId",DBT_INTERNAL_SOURCE."customerId",DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."amount",DBT_INTERNAL_SOURCE."transactionDate",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_transaction__dbt_tmp20250125204229003759" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:42:29.059443 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:42:29.060636 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:42:29.060905 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:42:29.061126 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:42:29.065829 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:42:29.066518 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:42:29.066780 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
drop table if exists "snp_transaction__dbt_tmp20250125204229003759" cascade
[0m20:42:29.071190 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:42:29.072484 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: Close
[0m20:42:29.085625 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c846802c-8063-4d66-9dad-3c0bcde50d1a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4d09de8350>]}
[0m20:42:29.086431 [info ] [Thread-1 (]: 3 of 3 OK snapshotted snapshots.snp_transaction ................................ [[32mOK[0m in 0.15s]
[0m20:42:29.087223 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:42:29.089187 [debug] [MainThread]: Using duckdb connection "master"
[0m20:42:29.089573 [debug] [MainThread]: On master: BEGIN
[0m20:42:29.089934 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:42:29.097727 [debug] [MainThread]: SQL status: OK in 0.008 seconds
[0m20:42:29.098124 [debug] [MainThread]: On master: COMMIT
[0m20:42:29.098365 [debug] [MainThread]: Using duckdb connection "master"
[0m20:42:29.098564 [debug] [MainThread]: On master: COMMIT
[0m20:42:29.099064 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:42:29.099343 [debug] [MainThread]: On master: Close
[0m20:42:29.101371 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:42:29.101721 [debug] [MainThread]: Connection 'list_trial_main' was properly closed.
[0m20:42:29.101924 [debug] [MainThread]: Connection 'snapshot.dbt_duckdb_test.snp_transaction' was properly closed.
[0m20:42:29.102185 [info ] [MainThread]: 
[0m20:42:29.102517 [info ] [MainThread]: Finished running 3 snapshots in 0 hours 0 minutes and 0.82 seconds (0.82s).
[0m20:42:29.103635 [debug] [MainThread]: Command end result
[0m20:42:29.124005 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:42:29.125810 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:42:29.133321 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:42:29.133794 [info ] [MainThread]: 
[0m20:42:29.134957 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:42:29.135300 [info ] [MainThread]: 
[0m20:42:29.136095 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m20:42:29.137365 [debug] [MainThread]: Resource report: {"command_name": "snapshot", "command_success": true, "command_wall_clock_time": 1.711928, "process_in_blocks": "168", "process_kernel_time": 0.211114, "process_mem_max_rss": "189920", "process_out_blocks": "4848", "process_user_time": 2.724387}
[0m20:42:29.137771 [debug] [MainThread]: Command `dbt snapshot` succeeded at 20:42:29.137691 after 1.71 seconds
[0m20:42:29.138035 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4d0db42750>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4d0dbe5010>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4d0dbe4710>]}
[0m20:42:29.138291 [debug] [MainThread]: Flushing usage events
[0m20:42:30.366719 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:43:02.033136 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0a313bd710>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0a313bd490>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0a313bd190>]}


============================== 20:43:02.035692 | 86432320-56a3-482f-b87b-74e720d01aa0 ==============================
[0m20:43:02.035692 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:43:02.036298 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/rani/.dbt', 'version_check': 'True', 'warn_error': 'None', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'fail_fast': 'False', 'debug': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'invocation_command': 'dbt snapshot', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m20:43:02.222432 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '86432320-56a3-482f-b87b-74e720d01aa0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0a312bfad0>]}
[0m20:43:02.274888 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '86432320-56a3-482f-b87b-74e720d01aa0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0a3360b010>]}
[0m20:43:02.277347 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:43:02.344166 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:43:02.467906 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m20:43:02.468424 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m20:43:02.474912 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:43:02.528367 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '86432320-56a3-482f-b87b-74e720d01aa0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0a31249850>]}
[0m20:43:02.619230 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:43:02.620962 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:43:02.633413 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '86432320-56a3-482f-b87b-74e720d01aa0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0a31237910>]}
[0m20:43:02.634229 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:43:02.634861 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '86432320-56a3-482f-b87b-74e720d01aa0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0a277e3b90>]}
[0m20:43:02.637370 [info ] [MainThread]: 
[0m20:43:02.638129 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:43:02.638584 [info ] [MainThread]: 
[0m20:43:02.639368 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:43:02.647894 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:43:02.678544 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:43:02.678897 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:43:02.679309 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:43:02.688125 [debug] [ThreadPool]: SQL status: OK in 0.009 seconds
[0m20:43:02.689856 [debug] [ThreadPool]: On list_trial: Close
[0m20:43:02.699488 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_snapshots)
[0m20:43:02.699974 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "snapshots"
"
[0m20:43:02.705593 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:43:02.705871 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:43:02.706174 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:43:02.713026 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:43:02.714254 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:43:02.714524 [debug] [ThreadPool]: On create_trial_snapshots: BEGIN
[0m20:43:02.715078 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:43:02.715357 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:43:02.715574 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
    
        create schema if not exists "trial"."snapshots"
    
[0m20:43:02.716233 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:43:02.717216 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:43:02.717498 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:43:02.717767 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:43:02.718315 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:43:02.718587 [debug] [ThreadPool]: On create_trial_snapshots: Close
[0m20:43:02.722560 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_snapshots, now list_trial_main)
[0m20:43:02.727746 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:43:02.728031 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:43:02.728332 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:43:02.734574 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:43:02.734897 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:43:02.735251 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:43:02.760225 [debug] [ThreadPool]: SQL status: OK in 0.024 seconds
[0m20:43:02.761690 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:43:02.762302 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:43:02.762558 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:43:02.765152 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_main, now list_trial_snapshots)
[0m20:43:02.768468 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:43:02.769204 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:43:02.769443 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:43:02.774901 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m20:43:02.775227 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:43:02.775458 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:43:02.796173 [debug] [ThreadPool]: SQL status: OK in 0.020 seconds
[0m20:43:02.797549 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:43:02.797968 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:43:02.798218 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:43:02.800583 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '86432320-56a3-482f-b87b-74e720d01aa0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0a31acd510>]}
[0m20:43:02.801028 [debug] [MainThread]: Using duckdb connection "master"
[0m20:43:02.801285 [debug] [MainThread]: On master: BEGIN
[0m20:43:02.801502 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:43:02.808179 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:43:02.809005 [debug] [MainThread]: On master: COMMIT
[0m20:43:02.809300 [debug] [MainThread]: Using duckdb connection "master"
[0m20:43:02.809510 [debug] [MainThread]: On master: COMMIT
[0m20:43:02.810098 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:43:02.810397 [debug] [MainThread]: On master: Close
[0m20:43:02.813673 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_customer
[0m20:43:02.814137 [info ] [Thread-1 (]: 1 of 3 START snapshot snapshots.snp_customer ................................... [RUN]
[0m20:43:02.814725 [debug] [Thread-1 (]: Acquiring new duckdb connection 'snapshot.dbt_duckdb_test.snp_customer'
[0m20:43:02.815242 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_customer
[0m20:43:02.821905 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_customer
[0m20:43:02.890386 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:02.890821 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        
    

    select *,
        md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/customer.csv'
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:43:02.891152 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:43:02.900267 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:43:02.903353 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:02.903775 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:43:02.907062 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:02.907586 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:02.908056 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:02.908382 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: BEGIN
[0m20:43:02.909038 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:02.909714 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:02.910031 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      
  
    
    

    create  table
      "trial"."snapshots"."snp_customer"
  
    as (
      
    

    select *,
        md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/customer.csv'
    ) sbq



    );
  
  
  
[0m20:43:02.913478 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:02.925123 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:43:02.925464 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:02.925715 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:43:02.930787 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:43:02.932439 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: Close
[0m20:43:02.945764 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '86432320-56a3-482f-b87b-74e720d01aa0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0a3126d0d0>]}
[0m20:43:02.946510 [info ] [Thread-1 (]: 1 of 3 OK snapshotted snapshots.snp_customer ................................... [[32mOK[0m in 0.13s]
[0m20:43:02.947257 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_customer
[0m20:43:02.947837 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_product
[0m20:43:02.948493 [info ] [Thread-1 (]: 2 of 3 START snapshot snapshots.snp_product .................................... [RUN]
[0m20:43:02.949086 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_customer, now snapshot.dbt_duckdb_test.snp_product)
[0m20:43:02.949559 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_product
[0m20:43:02.952582 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_product
[0m20:43:02.955738 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:02.956112 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        
    

    select *,
        md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/product.csv'
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:43:02.956430 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:43:02.965560 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:43:02.966835 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:02.967401 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:43:02.968561 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:43:02.969071 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:02.970185 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:02.970611 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: BEGIN
[0m20:43:02.971250 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:02.971517 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:02.971757 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      
  
    
    

    create  table
      "trial"."snapshots"."snp_product"
  
    as (
      
    

    select *,
        md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/product.csv'
    ) sbq



    );
  
  
  
[0m20:43:02.976281 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:43:02.977978 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:43:02.978323 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:02.978654 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:43:02.984101 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:43:02.984869 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: Close
[0m20:43:02.996286 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '86432320-56a3-482f-b87b-74e720d01aa0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0a279f9fd0>]}
[0m20:43:02.997208 [info ] [Thread-1 (]: 2 of 3 OK snapshotted snapshots.snp_product .................................... [[32mOK[0m in 0.05s]
[0m20:43:02.998317 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_product
[0m20:43:03.000235 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:43:03.001087 [info ] [Thread-1 (]: 3 of 3 START snapshot snapshots.snp_transaction ................................ [RUN]
[0m20:43:03.001791 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_product, now snapshot.dbt_duckdb_test.snp_transaction)
[0m20:43:03.002394 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_transaction
[0m20:43:03.005966 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_transaction
[0m20:43:03.010645 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:03.011035 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        
    

    select *,
        md5(coalesce(cast(id as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/transaction.csv'
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:43:03.011302 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:43:03.020321 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m20:43:03.021350 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:03.021665 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:43:03.022692 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:43:03.023248 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:03.023964 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:03.024430 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: BEGIN
[0m20:43:03.025494 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:03.025775 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:03.026021 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      
  
    
    

    create  table
      "trial"."snapshots"."snp_transaction"
  
    as (
      
    

    select *,
        md5(coalesce(cast(id as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id,
        now()::timestamp as dbt_updated_at,
        now()::timestamp as dbt_valid_from,
        
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
from (
        
    

    select *
    from '/tmp/transaction.csv'
    ) sbq



    );
  
  
  
[0m20:43:03.029312 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:03.031231 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:43:03.031543 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:03.031809 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:43:03.037326 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:43:03.038101 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: Close
[0m20:43:03.049921 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '86432320-56a3-482f-b87b-74e720d01aa0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0a2606b9d0>]}
[0m20:43:03.051136 [info ] [Thread-1 (]: 3 of 3 OK snapshotted snapshots.snp_transaction ................................ [[32mOK[0m in 0.05s]
[0m20:43:03.052177 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:43:03.054020 [debug] [MainThread]: Using duckdb connection "master"
[0m20:43:03.054416 [debug] [MainThread]: On master: BEGIN
[0m20:43:03.054628 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:43:03.062085 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:43:03.062447 [debug] [MainThread]: On master: COMMIT
[0m20:43:03.062683 [debug] [MainThread]: Using duckdb connection "master"
[0m20:43:03.062881 [debug] [MainThread]: On master: COMMIT
[0m20:43:03.063403 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:43:03.063697 [debug] [MainThread]: On master: Close
[0m20:43:03.065607 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:43:03.065987 [debug] [MainThread]: Connection 'list_trial_snapshots' was properly closed.
[0m20:43:03.066226 [debug] [MainThread]: Connection 'snapshot.dbt_duckdb_test.snp_transaction' was properly closed.
[0m20:43:03.066484 [info ] [MainThread]: 
[0m20:43:03.066963 [info ] [MainThread]: Finished running 3 snapshots in 0 hours 0 minutes and 0.43 seconds (0.43s).
[0m20:43:03.067962 [debug] [MainThread]: Command end result
[0m20:43:03.088404 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:43:03.090355 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:43:03.096808 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:43:03.097425 [info ] [MainThread]: 
[0m20:43:03.098178 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:43:03.098587 [info ] [MainThread]: 
[0m20:43:03.099373 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m20:43:03.100227 [debug] [MainThread]: Resource report: {"command_name": "snapshot", "command_success": true, "command_wall_clock_time": 1.1178472, "process_in_blocks": "0", "process_kernel_time": 0.179308, "process_mem_max_rss": "169304", "process_out_blocks": "5824", "process_user_time": 2.052081}
[0m20:43:03.100918 [debug] [MainThread]: Command `dbt snapshot` succeeded at 20:43:03.100818 after 1.12 seconds
[0m20:43:03.101205 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0a34fc27d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0a317adb10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0a31896b90>]}
[0m20:43:03.101489 [debug] [MainThread]: Flushing usage events
[0m20:43:04.725392 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:43:22.306346 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f94918c1690>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f94918c1390>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f94918c1090>]}


============================== 20:43:22.309167 | 7d7937f9-9b3e-455c-b80a-af6dbf8af7fc ==============================
[0m20:43:22.309167 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:43:22.309873 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'debug': 'False', 'fail_fast': 'False', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'version_check': 'True', 'profiles_dir': '/home/rani/.dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'invocation_command': 'dbt snapshot', 'static_parser': 'True', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m20:43:22.507901 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '7d7937f9-9b3e-455c-b80a-af6dbf8af7fc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f94918cd610>]}
[0m20:43:22.562582 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '7d7937f9-9b3e-455c-b80a-af6dbf8af7fc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9493aedb90>]}
[0m20:43:22.564824 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:43:22.642172 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:43:22.766659 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m20:43:22.767050 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m20:43:22.773584 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:43:22.828823 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '7d7937f9-9b3e-455c-b80a-af6dbf8af7fc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f949174c210>]}
[0m20:43:22.918030 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:43:22.919970 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:43:22.932534 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '7d7937f9-9b3e-455c-b80a-af6dbf8af7fc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f948e105690>]}
[0m20:43:22.933059 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:43:22.934052 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '7d7937f9-9b3e-455c-b80a-af6dbf8af7fc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9487e34b50>]}
[0m20:43:22.936133 [info ] [MainThread]: 
[0m20:43:22.936652 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:43:22.937023 [info ] [MainThread]: 
[0m20:43:22.937562 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:43:22.942656 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:43:22.973232 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:43:22.973634 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:43:22.973905 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:43:22.982783 [debug] [ThreadPool]: SQL status: OK in 0.009 seconds
[0m20:43:22.984703 [debug] [ThreadPool]: On list_trial: Close
[0m20:43:22.987145 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_snapshots)
[0m20:43:22.987580 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "snapshots"
"
[0m20:43:22.993891 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:43:22.994261 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:43:22.994504 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:43:23.001284 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:43:23.002510 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:43:23.002847 [debug] [ThreadPool]: On create_trial_snapshots: BEGIN
[0m20:43:23.004437 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:43:23.004686 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:43:23.004883 [debug] [ThreadPool]: On create_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_snapshots"} */

    
    
        create schema if not exists "trial"."snapshots"
    
[0m20:43:23.005442 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:43:23.006130 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:43:23.006398 [debug] [ThreadPool]: Using duckdb connection "create_trial_snapshots"
[0m20:43:23.006594 [debug] [ThreadPool]: On create_trial_snapshots: COMMIT
[0m20:43:23.007205 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:43:23.007490 [debug] [ThreadPool]: On create_trial_snapshots: Close
[0m20:43:23.010966 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_snapshots, now list_trial_snapshots)
[0m20:43:23.015958 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:43:23.016241 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:43:23.016447 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:43:23.022494 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:43:23.022826 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:43:23.023069 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:43:23.045855 [debug] [ThreadPool]: SQL status: OK in 0.022 seconds
[0m20:43:23.047342 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:43:23.047978 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:43:23.048223 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:43:23.051068 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_snapshots, now list_trial_main)
[0m20:43:23.053928 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:43:23.054205 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:43:23.054438 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:43:23.060732 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:43:23.061105 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:43:23.061365 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:43:23.082735 [debug] [ThreadPool]: SQL status: OK in 0.021 seconds
[0m20:43:23.084233 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:43:23.084655 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:43:23.084878 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:43:23.088756 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '7d7937f9-9b3e-455c-b80a-af6dbf8af7fc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9487f172d0>]}
[0m20:43:23.089256 [debug] [MainThread]: Using duckdb connection "master"
[0m20:43:23.089488 [debug] [MainThread]: On master: BEGIN
[0m20:43:23.089690 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:43:23.096358 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:43:23.096739 [debug] [MainThread]: On master: COMMIT
[0m20:43:23.097030 [debug] [MainThread]: Using duckdb connection "master"
[0m20:43:23.097394 [debug] [MainThread]: On master: COMMIT
[0m20:43:23.097941 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:43:23.098213 [debug] [MainThread]: On master: Close
[0m20:43:23.101522 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_customer
[0m20:43:23.102048 [info ] [Thread-1 (]: 1 of 3 START snapshot snapshots.snp_customer ................................... [RUN]
[0m20:43:23.103180 [debug] [Thread-1 (]: Acquiring new duckdb connection 'snapshot.dbt_duckdb_test.snp_customer'
[0m20:43:23.103520 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_customer
[0m20:43:23.111800 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_customer
[0m20:43:23.169488 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:23.169894 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
select * from (
        
    

    select *
    from '/tmp/customer.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:43:23.170201 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:43:23.179922 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m20:43:23.188156 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:23.188565 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: BEGIN
[0m20:43:23.189272 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:23.189560 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:23.189806 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:43:23.208949 [debug] [Thread-1 (]: SQL status: OK in 0.019 seconds
[0m20:43:23.216279 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:23.216630 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:43:23.220090 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:23.257789 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:23.258351 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

        
  
    
    

    create  table
      "snp_customer__dbt_tmp20250125204323250288"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:43:23.292882 [debug] [Thread-1 (]: SQL status: OK in 0.034 seconds
[0m20:43:23.295285 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:23.295614 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125204323250288'
      
      
      order by ordinal_position

  
[0m20:43:23.299537 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:23.302779 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:23.303089 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:43:23.306097 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:23.308643 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:23.308961 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125204323250288'
      
      
      order by ordinal_position

  
[0m20:43:23.311542 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:43:23.313994 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:23.314299 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:43:23.317226 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:23.323041 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:23.323384 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_customer__dbt_tmp20250125204323250288'
      
      
      order by ordinal_position

  
[0m20:43:23.326499 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:23.337953 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:23.338675 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/customer.csv'

    ),

    snapshotted_data as (

        select *, 
    
        customerId as dbt_unique_key
    

        from "trial"."snapshots"."snp_customer"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(customerId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        customerId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."customerID" != source_data."customerID"
        or
        (
            ((snapshotted_data."customerID" is null) and not (source_data."customerID" is null))
            or
            ((not snapshotted_data."customerID" is null) and (source_data."customerID" is null))
        ) or snapshotted_data."RegionName" != source_data."RegionName"
        or
        (
            ((snapshotted_data."RegionName" is null) and not (source_data."RegionName" is null))
            or
            ((not snapshotted_data."RegionName" is null) and (source_data."RegionName" is null))
        ) or snapshotted_data."customerName" != source_data."customerName"
        or
        (
            ((snapshotted_data."customerName" is null) and not (source_data."customerName" is null))
            or
            ((not snapshotted_data."customerName" is null) and (source_data."customerName" is null))
        ) or snapshotted_data."contactNumber" != source_data."contactNumber"
        or
        (
            ((snapshotted_data."contactNumber" is null) and not (source_data."contactNumber" is null))
            or
            ((not snapshotted_data."contactNumber" is null) and (source_data."contactNumber" is null))
        ) or snapshotted_data."Email" != source_data."Email"
        or
        (
            ((snapshotted_data."Email" is null) and not (source_data."Email" is null))
            or
            ((not snapshotted_data."Email" is null) and (source_data."Email" is null))
        ) or snapshotted_data."loyaltyStatus" != source_data."loyaltyStatus"
        or
        (
            ((snapshotted_data."loyaltyStatus" is null) and not (source_data."loyaltyStatus" is null))
            or
            ((not snapshotted_data."loyaltyStatus" is null) and (source_data."loyaltyStatus" is null))
        ) or snapshotted_data."flagActive" != source_data."flagActive"
        or
        (
            ((snapshotted_data."flagActive" is null) and not (source_data."flagActive" is null))
            or
            ((not snapshotted_data."flagActive" is null) and (source_data."flagActive" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:43:23.344790 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:43:23.348073 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:23.348432 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:43:23.349745 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:43:23.350258 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:23.350723 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:23.351016 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */

      update "trial"."snapshots"."snp_customer" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_customer__dbt_tmp20250125204323250288" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_customer" ("customerID", "RegionName", "customerName", "contactNumber", "Email", "loyaltyStatus", "flagActive", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."customerID",DBT_INTERNAL_SOURCE."RegionName",DBT_INTERNAL_SOURCE."customerName",DBT_INTERNAL_SOURCE."contactNumber",DBT_INTERNAL_SOURCE."Email",DBT_INTERNAL_SOURCE."loyaltyStatus",DBT_INTERNAL_SOURCE."flagActive",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_customer__dbt_tmp20250125204323250288" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:43:23.354051 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:23.363114 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:43:23.363459 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:23.363793 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: COMMIT
[0m20:43:23.370381 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m20:43:23.375172 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_customer"
[0m20:43:23.375502 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_customer"} */
drop table if exists "snp_customer__dbt_tmp20250125204323250288" cascade
[0m20:43:23.380772 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:43:23.383216 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_customer: Close
[0m20:43:23.405997 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7d7937f9-9b3e-455c-b80a-af6dbf8af7fc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9484127c90>]}
[0m20:43:23.407776 [info ] [Thread-1 (]: 1 of 3 OK snapshotted snapshots.snp_customer ................................... [[32mOK[0m in 0.30s]
[0m20:43:23.409076 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_customer
[0m20:43:23.409680 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_product
[0m20:43:23.412003 [info ] [Thread-1 (]: 2 of 3 START snapshot snapshots.snp_product .................................... [RUN]
[0m20:43:23.412912 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_customer, now snapshot.dbt_duckdb_test.snp_product)
[0m20:43:23.413258 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_product
[0m20:43:23.416428 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_product
[0m20:43:23.419951 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:23.420317 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
select * from (
        
    

    select *
    from '/tmp/product.csv'
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:43:23.420571 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:43:23.433338 [debug] [Thread-1 (]: SQL status: OK in 0.013 seconds
[0m20:43:23.436058 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:23.436430 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: BEGIN
[0m20:43:23.437269 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:23.438049 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:23.438323 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:43:23.461175 [debug] [Thread-1 (]: SQL status: OK in 0.022 seconds
[0m20:43:23.464569 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:23.464963 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:43:23.468320 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:23.470881 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:23.471307 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

        
  
    
    

    create  table
      "snp_product__dbt_tmp20250125204323470162"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:43:23.480283 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:43:23.482504 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:23.482808 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125204323470162'
      
      
      order by ordinal_position

  
[0m20:43:23.486643 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:43:23.489586 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:23.489897 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:43:23.492862 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:23.495298 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:23.495877 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125204323470162'
      
      
      order by ordinal_position

  
[0m20:43:23.499982 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:43:23.502487 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:23.502795 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:43:23.506563 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:23.509619 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:23.509940 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_product__dbt_tmp20250125204323470162'
      
      
      order by ordinal_position

  
[0m20:43:23.512865 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:23.514638 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:23.515094 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/product.csv'

    ),

    snapshotted_data as (

        select *, 
    
        productId as dbt_unique_key
    

        from "trial"."snapshots"."snp_product"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(productId as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        productId as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."productId" != source_data."productId"
        or
        (
            ((snapshotted_data."productId" is null) and not (source_data."productId" is null))
            or
            ((not snapshotted_data."productId" is null) and (source_data."productId" is null))
        ) or snapshotted_data."productName" != source_data."productName"
        or
        (
            ((snapshotted_data."productName" is null) and not (source_data."productName" is null))
            or
            ((not snapshotted_data."productName" is null) and (source_data."productName" is null))
        ) or snapshotted_data."description" != source_data."description"
        or
        (
            ((snapshotted_data."description" is null) and not (source_data."description" is null))
            or
            ((not snapshotted_data."description" is null) and (source_data."description" is null))
        ) or snapshotted_data."price" != source_data."price"
        or
        (
            ((snapshotted_data."price" is null) and not (source_data."price" is null))
            or
            ((not snapshotted_data."price" is null) and (source_data."price" is null))
        ) or snapshotted_data."discount" != source_data."discount"
        or
        (
            ((snapshotted_data."discount" is null) and not (source_data."discount" is null))
            or
            ((not snapshotted_data."discount" is null) and (source_data."discount" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:43:23.520889 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:43:23.521835 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:23.522107 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:43:23.523373 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:43:23.523878 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:23.524334 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:23.524628 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */

      update "trial"."snapshots"."snp_product" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_product__dbt_tmp20250125204323470162" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_product" ("productId", "productName", "description", "price", "discount", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."productName",DBT_INTERNAL_SOURCE."description",DBT_INTERNAL_SOURCE."price",DBT_INTERNAL_SOURCE."discount",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_product__dbt_tmp20250125204323470162" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:43:23.526733 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:43:23.528295 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:43:23.528674 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:23.528926 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: COMMIT
[0m20:43:23.533058 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:43:23.533788 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_product"
[0m20:43:23.534093 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_product"} */
drop table if exists "snp_product__dbt_tmp20250125204323470162" cascade
[0m20:43:23.537808 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:23.538994 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_product: Close
[0m20:43:23.551793 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7d7937f9-9b3e-455c-b80a-af6dbf8af7fc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9487b93a50>]}
[0m20:43:23.552545 [info ] [Thread-1 (]: 2 of 3 OK snapshotted snapshots.snp_product .................................... [[32mOK[0m in 0.14s]
[0m20:43:23.553189 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_product
[0m20:43:23.553839 [debug] [Thread-1 (]: Began running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:43:23.554464 [info ] [Thread-1 (]: 3 of 3 START snapshot snapshots.snp_transaction ................................ [RUN]
[0m20:43:23.555085 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.dbt_duckdb_test.snp_product, now snapshot.dbt_duckdb_test.snp_transaction)
[0m20:43:23.555531 [debug] [Thread-1 (]: Began compiling node snapshot.dbt_duckdb_test.snp_transaction
[0m20:43:23.558322 [debug] [Thread-1 (]: Began executing node snapshot.dbt_duckdb_test.snp_transaction
[0m20:43:23.563118 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:23.563489 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
select * from (
        select id from (
                
    

    select *
    from '/tmp/transaction.csv'
            ) subq
    ) as __dbt_sbq
    where false
    limit 0

    
[0m20:43:23.563786 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:43:23.571526 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:43:23.575310 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:23.575626 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: BEGIN
[0m20:43:23.580471 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:23.581044 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:23.581335 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:43:23.617380 [debug] [Thread-1 (]: SQL status: OK in 0.036 seconds
[0m20:43:23.620546 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:23.621060 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:43:23.625292 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:23.628167 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:23.628557 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

        
  
    
    

    create  table
      "snp_transaction__dbt_tmp20250125204323627255"
  
    as (
      

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        id as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        id as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(id as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        id as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."id" != source_data."id"
        or
        (
            ((snapshotted_data."id" is null) and not (source_data."id" is null))
            or
            ((not snapshotted_data."id" is null) and (source_data."id" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."id" != source_data."id"
        or
        (
            ((snapshotted_data."id" is null) and not (source_data."id" is null))
            or
            ((not snapshotted_data."id" is null) and (source_data."id" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    );
  
  
    
[0m20:43:23.641105 [debug] [Thread-1 (]: SQL status: OK in 0.011 seconds
[0m20:43:23.646234 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:23.646803 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125204323627255'
      
      
      order by ordinal_position

  
[0m20:43:23.651521 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:43:23.654483 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:23.654824 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:43:23.659121 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:43:23.663177 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:23.663546 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125204323627255'
      
      
      order by ordinal_position

  
[0m20:43:23.666922 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:23.669741 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:23.670061 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction'
      
      and lower(table_schema) = 'snapshots'
      
      
      and lower(table_catalog) = 'trial'
      
      order by ordinal_position

  
[0m20:43:23.674176 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:43:23.676963 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:23.677473 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from system.information_schema.columns
      where table_name = 'snp_transaction__dbt_tmp20250125204323627255'
      
      
      order by ordinal_position

  
[0m20:43:23.680443 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:23.682483 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:23.682973 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        

    with snapshot_query as (

        
    

    select *
    from '/tmp/transaction.csv'

    ),

    snapshotted_data as (

        select *, 
    
        id as dbt_unique_key
    

        from "trial"."snapshots"."snp_transaction"
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        id as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            
  
  coalesce(nullif(now()::timestamp, now()::timestamp), null)
  as dbt_valid_to
,
            md5(coalesce(cast(id as varchar ), '')
         || '|' || coalesce(cast(now()::timestamp as varchar ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        id as dbt_unique_key
    
,
            now()::timestamp as dbt_updated_at,
            now()::timestamp as dbt_valid_from,
            now()::timestamp as dbt_valid_to

        from snapshot_query
    ),

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and ((snapshotted_data."id" != source_data."id"
        or
        (
            ((snapshotted_data."id" is null) and not (source_data."id" is null))
            or
            ((not snapshotted_data."id" is null) and (source_data."id" is null))
        )))

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data."id" != source_data."id"
        or
        (
            ((snapshotted_data."id" is null) and not (source_data."id" is null))
            or
            ((not snapshotted_data."id" is null) and (source_data."id" is null))
        ))
        )
    )

    select * from insertions
    union all
    select * from updates

    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:43:23.686939 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:43:23.687858 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:23.688140 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
DESCRIBE (select * from (
        select now()::timestamp as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:43:23.689330 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:43:23.689819 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:23.690273 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:23.690570 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */

      update "trial"."snapshots"."snp_transaction" as DBT_INTERNAL_TARGET
    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to
    from "snp_transaction__dbt_tmp20250125204323627255" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = DBT_INTERNAL_TARGET.dbt_scd_id::text
      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)
      and DBT_INTERNAL_TARGET.dbt_valid_to is null;

    insert into "trial"."snapshots"."snp_transaction" ("id", "transactionId", "customerId", "productId", "amount", "transactionDate", "dbt_updated_at", "dbt_valid_from", "dbt_valid_to", "dbt_scd_id")
    select DBT_INTERNAL_SOURCE."id",DBT_INTERNAL_SOURCE."transactionId",DBT_INTERNAL_SOURCE."customerId",DBT_INTERNAL_SOURCE."productId",DBT_INTERNAL_SOURCE."amount",DBT_INTERNAL_SOURCE."transactionDate",DBT_INTERNAL_SOURCE."dbt_updated_at",DBT_INTERNAL_SOURCE."dbt_valid_from",DBT_INTERNAL_SOURCE."dbt_valid_to",DBT_INTERNAL_SOURCE."dbt_scd_id"
    from "snp_transaction__dbt_tmp20250125204323627255" as DBT_INTERNAL_SOURCE
    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;


  
[0m20:43:23.692897 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:43:23.694055 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:43:23.694356 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:23.694586 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: COMMIT
[0m20:43:23.701275 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m20:43:23.702049 [debug] [Thread-1 (]: Using duckdb connection "snapshot.dbt_duckdb_test.snp_transaction"
[0m20:43:23.702327 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "snapshot.dbt_duckdb_test.snp_transaction"} */
drop table if exists "snp_transaction__dbt_tmp20250125204323627255" cascade
[0m20:43:23.707361 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:43:23.708590 [debug] [Thread-1 (]: On snapshot.dbt_duckdb_test.snp_transaction: Close
[0m20:43:23.725621 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7d7937f9-9b3e-455c-b80a-af6dbf8af7fc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f94865dee90>]}
[0m20:43:23.726413 [info ] [Thread-1 (]: 3 of 3 OK snapshotted snapshots.snp_transaction ................................ [[32mOK[0m in 0.17s]
[0m20:43:23.727207 [debug] [Thread-1 (]: Finished running node snapshot.dbt_duckdb_test.snp_transaction
[0m20:43:23.729410 [debug] [MainThread]: Using duckdb connection "master"
[0m20:43:23.730073 [debug] [MainThread]: On master: BEGIN
[0m20:43:23.730343 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:43:23.738410 [debug] [MainThread]: SQL status: OK in 0.008 seconds
[0m20:43:23.738819 [debug] [MainThread]: On master: COMMIT
[0m20:43:23.739064 [debug] [MainThread]: Using duckdb connection "master"
[0m20:43:23.739259 [debug] [MainThread]: On master: COMMIT
[0m20:43:23.739777 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:43:23.740071 [debug] [MainThread]: On master: Close
[0m20:43:23.742098 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:43:23.742411 [debug] [MainThread]: Connection 'list_trial_main' was properly closed.
[0m20:43:23.742613 [debug] [MainThread]: Connection 'snapshot.dbt_duckdb_test.snp_transaction' was properly closed.
[0m20:43:23.742863 [info ] [MainThread]: 
[0m20:43:23.743182 [info ] [MainThread]: Finished running 3 snapshots in 0 hours 0 minutes and 0.81 seconds (0.81s).
[0m20:43:23.744405 [debug] [MainThread]: Command end result
[0m20:43:23.818785 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:43:23.820226 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:43:23.825856 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:43:23.826147 [info ] [MainThread]: 
[0m20:43:23.826654 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:43:23.827094 [info ] [MainThread]: 
[0m20:43:23.827564 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m20:43:23.828506 [debug] [MainThread]: Resource report: {"command_name": "snapshot", "command_success": true, "command_wall_clock_time": 1.5722731, "process_in_blocks": "0", "process_kernel_time": 0.218312, "process_mem_max_rss": "194488", "process_out_blocks": "4392", "process_user_time": 2.619753}
[0m20:43:23.828840 [debug] [MainThread]: Command `dbt snapshot` succeeded at 20:43:23.828762 after 1.57 seconds
[0m20:43:23.829187 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f949554d110>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f949554c690>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f949554d590>]}
[0m20:43:23.829719 [debug] [MainThread]: Flushing usage events
[0m20:43:25.560200 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m20:43:46.620432 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59c90f57d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59c90f5450>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59c90f5210>]}


============================== 20:43:46.623011 | 9003138f-d083-4053-bd0d-21712ba174ac ==============================
[0m20:43:46.623011 [info ] [MainThread]: Running with dbt=1.9.1
[0m20:43:46.623614 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/rani/.dbt', 'debug': 'False', 'warn_error': 'None', 'log_path': '/home/rani/apps/dbt-demo/dbt_duckdb/logs', 'version_check': 'True', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'invocation_command': 'dbt run', 'static_parser': 'True', 'introspect': 'True', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'send_anonymous_usage_stats': 'True'}
[0m20:43:46.803357 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '9003138f-d083-4053-bd0d-21712ba174ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59c5932050>]}
[0m20:43:46.869279 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '9003138f-d083-4053-bd0d-21712ba174ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59cb32e810>]}
[0m20:43:46.871127 [info ] [MainThread]: Registered adapter: duckdb=1.9.1
[0m20:43:46.944926 [debug] [MainThread]: checksum: 5e8d1596cf4eae33c11286bbb248a722d21b9f00d8a7ced8137c642517055418, vars: {}, profile: , target: , version: 1.9.1
[0m20:43:47.058657 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m20:43:47.059007 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m20:43:47.065320 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.dbt_duckdb.example
[0m20:43:47.117238 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '9003138f-d083-4053-bd0d-21712ba174ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59c594ead0>]}
[0m20:43:47.208848 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:43:47.210073 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:43:47.222713 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '9003138f-d083-4053-bd0d-21712ba174ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59bf35fe10>]}
[0m20:43:47.223192 [info ] [MainThread]: Found 8 models, 23 data tests, 3 snapshots, 4 sources, 424 macros
[0m20:43:47.224006 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '9003138f-d083-4053-bd0d-21712ba174ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59c8fab950>]}
[0m20:43:47.227514 [info ] [MainThread]: 
[0m20:43:47.228074 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m20:43:47.228557 [info ] [MainThread]: 
[0m20:43:47.229475 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:43:47.239330 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_trial'
[0m20:43:47.273905 [debug] [ThreadPool]: Using duckdb connection "list_trial"
[0m20:43:47.274251 [debug] [ThreadPool]: On list_trial: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where lower(catalog_name) = '"trial"'
    
  
  
[0m20:43:47.274466 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:43:47.284386 [debug] [ThreadPool]: SQL status: OK in 0.010 seconds
[0m20:43:47.285552 [debug] [ThreadPool]: On list_trial: Close
[0m20:43:47.288106 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial, now create_trial_main)
[0m20:43:47.288557 [debug] [ThreadPool]: Creating schema "database: "trial"
schema: "main"
"
[0m20:43:47.294136 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:43:47.294407 [debug] [ThreadPool]: On create_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_main"} */

    
        select type from duckdb_databases()
        where lower(database_name)='trial'
        and type='sqlite'
    
  
[0m20:43:47.294613 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:43:47.301143 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:43:47.302423 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:43:47.302681 [debug] [ThreadPool]: On create_trial_main: BEGIN
[0m20:43:47.303815 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:43:47.304071 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:43:47.304353 [debug] [ThreadPool]: On create_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "create_trial_main"} */

    
    
        create schema if not exists "trial"."main"
    
[0m20:43:47.304903 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:43:47.305594 [debug] [ThreadPool]: On create_trial_main: COMMIT
[0m20:43:47.305839 [debug] [ThreadPool]: Using duckdb connection "create_trial_main"
[0m20:43:47.306033 [debug] [ThreadPool]: On create_trial_main: COMMIT
[0m20:43:47.306568 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:43:47.307015 [debug] [ThreadPool]: On create_trial_main: Close
[0m20:43:47.310172 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_trial_main, now list_trial_main)
[0m20:43:47.315565 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:43:47.315846 [debug] [ThreadPool]: On list_trial_main: BEGIN
[0m20:43:47.316043 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:43:47.322909 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:43:47.323254 [debug] [ThreadPool]: Using duckdb connection "list_trial_main"
[0m20:43:47.323483 [debug] [ThreadPool]: On list_trial_main: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_main"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'main'
    and lower(table_catalog) = 'trial'
  
[0m20:43:47.345792 [debug] [ThreadPool]: SQL status: OK in 0.022 seconds
[0m20:43:47.347296 [debug] [ThreadPool]: On list_trial_main: ROLLBACK
[0m20:43:47.347919 [debug] [ThreadPool]: Failed to rollback 'list_trial_main'
[0m20:43:47.348202 [debug] [ThreadPool]: On list_trial_main: Close
[0m20:43:47.350862 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_trial_main, now list_trial_snapshots)
[0m20:43:47.353790 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:43:47.354128 [debug] [ThreadPool]: On list_trial_snapshots: BEGIN
[0m20:43:47.354334 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:43:47.360755 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:43:47.361123 [debug] [ThreadPool]: Using duckdb connection "list_trial_snapshots"
[0m20:43:47.361361 [debug] [ThreadPool]: On list_trial_snapshots: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "connection_name": "list_trial_snapshots"} */
select
      'trial' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where lower(table_schema) = 'snapshots'
    and lower(table_catalog) = 'trial'
  
[0m20:43:47.382165 [debug] [ThreadPool]: SQL status: OK in 0.020 seconds
[0m20:43:47.383501 [debug] [ThreadPool]: On list_trial_snapshots: ROLLBACK
[0m20:43:47.383966 [debug] [ThreadPool]: Failed to rollback 'list_trial_snapshots'
[0m20:43:47.384184 [debug] [ThreadPool]: On list_trial_snapshots: Close
[0m20:43:47.386890 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '9003138f-d083-4053-bd0d-21712ba174ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59c8f821d0>]}
[0m20:43:47.387521 [debug] [MainThread]: Using duckdb connection "master"
[0m20:43:47.387790 [debug] [MainThread]: On master: BEGIN
[0m20:43:47.387987 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:43:47.394720 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:43:47.395085 [debug] [MainThread]: On master: COMMIT
[0m20:43:47.395314 [debug] [MainThread]: Using duckdb connection "master"
[0m20:43:47.395508 [debug] [MainThread]: On master: COMMIT
[0m20:43:47.396030 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:43:47.396286 [debug] [MainThread]: On master: Close
[0m20:43:47.399922 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.my_first_dbt_model
[0m20:43:47.400419 [info ] [Thread-1 (]: 1 of 8 START sql table model main.my_first_dbt_model ........................... [RUN]
[0m20:43:47.401044 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.dbt_duckdb_test.my_first_dbt_model'
[0m20:43:47.401562 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.my_first_dbt_model
[0m20:43:47.408777 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:43:47.409531 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.my_first_dbt_model
[0m20:43:47.440306 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:43:47.440886 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:43:47.441156 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: BEGIN
[0m20:43:47.441425 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:43:47.449046 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:43:47.449560 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:43:47.449828 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */

  
    
    

    create  table
      "trial"."main"."my_first_dbt_model__dbt_tmp"
  
    as (
      /*
    Welcome to your first dbt model!
    Did you know that you can also configure models directly within SQL files?
    This will override configurations stated in dbt_project.yml

    Try changing "table" to "view" below
*/



with source_data as (

    select 1 as id
    union all
    select null as id

)

select *
from source_data

/*
    Uncomment the line below to remove records with null `id` values
*/

-- where id is not null
    );
  
  
[0m20:43:47.451063 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:43:47.456117 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:43:47.456422 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
alter table "trial"."main"."my_first_dbt_model" rename to "my_first_dbt_model__dbt_backup"
[0m20:43:47.457210 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:47.459964 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:43:47.460258 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
alter table "trial"."main"."my_first_dbt_model__dbt_tmp" rename to "my_first_dbt_model"
[0m20:43:47.460971 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:47.473801 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: COMMIT
[0m20:43:47.474124 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:43:47.474363 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: COMMIT
[0m20:43:47.479071 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:43:47.483510 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_first_dbt_model"
[0m20:43:47.483860 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_first_dbt_model"} */
drop table if exists "trial"."main"."my_first_dbt_model__dbt_backup" cascade
[0m20:43:47.487568 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:47.489822 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_first_dbt_model: Close
[0m20:43:47.506564 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9003138f-d083-4053-bd0d-21712ba174ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59bdd91390>]}
[0m20:43:47.507337 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.my_first_dbt_model ...................... [[32mOK[0m in 0.10s]
[0m20:43:47.508052 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.my_first_dbt_model
[0m20:43:47.508847 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_customer
[0m20:43:47.509540 [info ] [Thread-1 (]: 2 of 8 START sql view model main.stg_customer .................................. [RUN]
[0m20:43:47.510527 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.my_first_dbt_model, now model.dbt_duckdb_test.stg_customer)
[0m20:43:47.511328 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_customer
[0m20:43:47.514065 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_customer"
[0m20:43:47.514503 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_customer
[0m20:43:47.532925 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_customer"
[0m20:43:47.533506 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:43:47.533764 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: BEGIN
[0m20:43:47.533981 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:43:47.540455 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m20:43:47.540819 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:43:47.541095 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */

  
  create view "trial"."main"."stg_customer__dbt_tmp" as (
    

SELECT 
    customerID,
    customerName,
    contactNumber,
    Email,
    loyaltyStatus,
    RegionName AS regionName,
    flagActive,
    dbt_scd_id,
    dbt_valid_from,
    CASE
        WHEN flagActive = TRUE THEN dbt_valid_to
        ELSE NOW()
    END AS dbt_valid_to,
    dbt_updated_at
FROM "trial"."snapshots"."snp_customer"
  );

[0m20:43:47.541946 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:43:47.546178 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:43:47.546960 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */
alter view "trial"."main"."stg_customer" rename to "stg_customer__dbt_backup"
[0m20:43:47.547891 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:43:47.550628 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:43:47.550951 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */
alter view "trial"."main"."stg_customer__dbt_tmp" rename to "stg_customer"
[0m20:43:47.551596 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:47.552964 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: COMMIT
[0m20:43:47.553336 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:43:47.553584 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: COMMIT
[0m20:43:47.557461 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:43:47.559778 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_customer"
[0m20:43:47.560068 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_customer"} */
drop view if exists "trial"."main"."stg_customer__dbt_backup" cascade
[0m20:43:47.566474 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m20:43:47.569200 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_customer: Close
[0m20:43:47.581703 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9003138f-d083-4053-bd0d-21712ba174ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59bdcc4dd0>]}
[0m20:43:47.582358 [info ] [Thread-1 (]: 2 of 8 OK created sql view model main.stg_customer ............................. [[32mOK[0m in 0.07s]
[0m20:43:47.582954 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_customer
[0m20:43:47.583606 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_product
[0m20:43:47.584384 [info ] [Thread-1 (]: 3 of 8 START sql view model main.stg_product ................................... [RUN]
[0m20:43:47.585401 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_customer, now model.dbt_duckdb_test.stg_product)
[0m20:43:47.585840 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_product
[0m20:43:47.588610 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_product"
[0m20:43:47.589041 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_product
[0m20:43:47.593117 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_product"
[0m20:43:47.593791 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:43:47.594210 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: BEGIN
[0m20:43:47.594584 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:43:47.602855 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:43:47.603255 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:43:47.603511 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */

  
  create view "trial"."main"."stg_product__dbt_tmp" as (
    

SELECT 
    *
FROM "trial"."snapshots"."snp_product"
  );

[0m20:43:47.604210 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:47.607309 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:43:47.607988 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */
alter view "trial"."main"."stg_product" rename to "stg_product__dbt_backup"
[0m20:43:47.608787 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:47.611870 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:43:47.612586 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */
alter view "trial"."main"."stg_product__dbt_tmp" rename to "stg_product"
[0m20:43:47.613409 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:47.614980 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: COMMIT
[0m20:43:47.615268 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:43:47.615491 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: COMMIT
[0m20:43:47.621050 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:43:47.623418 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_product"
[0m20:43:47.623746 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_product"} */
drop view if exists "trial"."main"."stg_product__dbt_backup" cascade
[0m20:43:47.627875 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:43:47.629471 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_product: Close
[0m20:43:47.639604 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9003138f-d083-4053-bd0d-21712ba174ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59bddcfa10>]}
[0m20:43:47.640299 [info ] [Thread-1 (]: 3 of 8 OK created sql view model main.stg_product .............................. [[32mOK[0m in 0.05s]
[0m20:43:47.640967 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_product
[0m20:43:47.641492 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.stg_transaction
[0m20:43:47.642183 [info ] [Thread-1 (]: 4 of 8 START sql view model main.stg_transaction ............................... [RUN]
[0m20:43:47.642739 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_product, now model.dbt_duckdb_test.stg_transaction)
[0m20:43:47.643168 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.stg_transaction
[0m20:43:47.645507 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.stg_transaction"
[0m20:43:47.645978 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.stg_transaction
[0m20:43:47.649642 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.stg_transaction"
[0m20:43:47.650174 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:43:47.650469 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: BEGIN
[0m20:43:47.650877 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:43:47.657979 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:43:47.658350 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:43:47.658606 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */

  
  create view "trial"."main"."stg_transaction__dbt_tmp" as (
    

SELECT 
    transactionId,
    customerId,
    productId,
    amount,
    transactionDate
FROM "trial"."snapshots"."snp_transaction"
  );

[0m20:43:47.659314 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:47.662340 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:43:47.662630 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */
alter view "trial"."main"."stg_transaction" rename to "stg_transaction__dbt_backup"
[0m20:43:47.663407 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:47.665608 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:43:47.665876 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */
alter view "trial"."main"."stg_transaction__dbt_tmp" rename to "stg_transaction"
[0m20:43:47.666657 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:47.668274 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: COMMIT
[0m20:43:47.668547 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:43:47.668769 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: COMMIT
[0m20:43:47.673560 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:43:47.675515 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.stg_transaction"
[0m20:43:47.675794 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.stg_transaction"} */
drop view if exists "trial"."main"."stg_transaction__dbt_backup" cascade
[0m20:43:47.680053 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:43:47.681246 [debug] [Thread-1 (]: On model.dbt_duckdb_test.stg_transaction: Close
[0m20:43:47.692937 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9003138f-d083-4053-bd0d-21712ba174ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59bdccda50>]}
[0m20:43:47.693733 [info ] [Thread-1 (]: 4 of 8 OK created sql view model main.stg_transaction .......................... [[32mOK[0m in 0.05s]
[0m20:43:47.694359 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.stg_transaction
[0m20:43:47.694865 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.my_second_dbt_model
[0m20:43:47.695859 [info ] [Thread-1 (]: 5 of 8 START sql view model main.my_second_dbt_model ........................... [RUN]
[0m20:43:47.696418 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.stg_transaction, now model.dbt_duckdb_test.my_second_dbt_model)
[0m20:43:47.697279 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.my_second_dbt_model
[0m20:43:47.699470 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:43:47.699878 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.my_second_dbt_model
[0m20:43:47.703870 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:43:47.704420 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:43:47.704801 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: BEGIN
[0m20:43:47.705030 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:43:47.712260 [debug] [Thread-1 (]: SQL status: OK in 0.007 seconds
[0m20:43:47.712646 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:43:47.712908 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */

  
  create view "trial"."main"."my_second_dbt_model__dbt_tmp" as (
    -- Use the `ref` function to select from other models

select *
from "trial"."main"."my_first_dbt_model"
where id = 1
  );

[0m20:43:47.713642 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:47.716078 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:43:47.716843 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */
alter view "trial"."main"."my_second_dbt_model" rename to "my_second_dbt_model__dbt_backup"
[0m20:43:47.719961 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:43:47.725038 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:43:47.726974 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */
alter view "trial"."main"."my_second_dbt_model__dbt_tmp" rename to "my_second_dbt_model"
[0m20:43:47.728026 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:43:47.729411 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: COMMIT
[0m20:43:47.729702 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:43:47.729942 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: COMMIT
[0m20:43:47.734163 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:43:47.736593 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.my_second_dbt_model"
[0m20:43:47.737039 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.my_second_dbt_model"} */
drop view if exists "trial"."main"."my_second_dbt_model__dbt_backup" cascade
[0m20:43:47.740569 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:47.741635 [debug] [Thread-1 (]: On model.dbt_duckdb_test.my_second_dbt_model: Close
[0m20:43:47.752554 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9003138f-d083-4053-bd0d-21712ba174ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59bdcace90>]}
[0m20:43:47.753172 [info ] [Thread-1 (]: 5 of 8 OK created sql view model main.my_second_dbt_model ...................... [[32mOK[0m in 0.06s]
[0m20:43:47.753856 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.my_second_dbt_model
[0m20:43:47.754481 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.dim_customer
[0m20:43:47.755077 [info ] [Thread-1 (]: 6 of 8 START sql view model main.dim_customer .................................. [RUN]
[0m20:43:47.755693 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.my_second_dbt_model, now model.dbt_duckdb_test.dim_customer)
[0m20:43:47.756215 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.dim_customer
[0m20:43:47.759529 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.dim_customer"
[0m20:43:47.760149 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.dim_customer
[0m20:43:47.763168 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.dim_customer"
[0m20:43:47.763605 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:43:47.764231 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: BEGIN
[0m20:43:47.764581 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:43:47.770912 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m20:43:47.771258 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:43:47.771564 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */

  
  create view "trial"."main"."dim_customer__dbt_tmp" as (
    

WITH 
first_record AS (
    SELECT
        customerID AS customerId,
        min(dbt_valid_from)::TIMESTAMP AS created_time
    FROM
        "trial"."main"."stg_customer"
    GROUP BY
        customerID
),

cust AS (
    SELECT
        customerID AS customerId,
        regionName,
        customerName,
        contactNumber,	
        Email,	
        loyaltyStatus,
        CAST(dbt_valid_from AS TIMESTAMP) AS dbt_updated_at,	
        CAST(COALESCE(dbt_valid_to, '2999-12-31') AS TIMESTAMP) AS dbt_valid_to
    FROM
        "trial"."main"."stg_customer"
),

scust AS (
    SELECT
        cust.*,  -- Selecting all columns from the 'cust' CTE
        first_record.created_time  -- Adding the '_created_datetime' from 'first_record'
    FROM
        cust
    LEFT JOIN first_record
        ON cust.customerId = first_record.customerId
)

SELECT
    *
FROM
    scust
WHERE dbt_valid_to > NOW()
  );

[0m20:43:47.772696 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:43:47.775264 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:43:47.775799 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */
alter view "trial"."main"."dim_customer" rename to "dim_customer__dbt_backup"
[0m20:43:47.777248 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:43:47.779623 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:43:47.780465 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */
alter view "trial"."main"."dim_customer__dbt_tmp" rename to "dim_customer"
[0m20:43:47.781238 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:47.782396 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: COMMIT
[0m20:43:47.782673 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:43:47.782922 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: COMMIT
[0m20:43:47.787348 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:43:47.789242 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_customer"
[0m20:43:47.789516 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_customer"} */
drop view if exists "trial"."main"."dim_customer__dbt_backup" cascade
[0m20:43:47.793049 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:43:47.794147 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_customer: Close
[0m20:43:47.804586 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9003138f-d083-4053-bd0d-21712ba174ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59bddb7710>]}
[0m20:43:47.805212 [info ] [Thread-1 (]: 6 of 8 OK created sql view model main.dim_customer ............................. [[32mOK[0m in 0.05s]
[0m20:43:47.806105 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.dim_customer
[0m20:43:47.806654 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.dim_transaction
[0m20:43:47.807430 [info ] [Thread-1 (]: 7 of 8 START sql view model main.dim_transaction ............................... [RUN]
[0m20:43:47.808252 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.dim_customer, now model.dbt_duckdb_test.dim_transaction)
[0m20:43:47.808703 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.dim_transaction
[0m20:43:47.811473 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.dim_transaction"
[0m20:43:47.812734 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.dim_transaction
[0m20:43:47.833300 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:43:47.833711 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
DESCRIBE (select * from (
        

WITH product AS (
  SELECT *
  FROM "trial"."main"."stg_product" 
  WHERE dbt_valid_to IS NULL
),
transactions AS (
  SELECT
    t.transactionId,
    t.customerId,
    p.productId,
    p.productName,
    p.description,
    t.amount,
    t.transactionDate,
    p.discount,
    p.price,
    p.price - (p.price * (p.discount / 100.0)) AS finalPrice,
    p.dbt_valid_from,
    p.dbt_valid_to
  FROM
    "trial"."main"."stg_transaction" t
  JOIN
    product p ON t.productId = p.productId
)

SELECT
  dt.transactionId,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  (dt.discount / 100.0) as dicount,
  SUM(dt.finalPrice) * dt.amount AS finalPrice,
  dt.transactionDate
FROM
  transactions dt
GROUP BY
  dt.transactionId,
  dt.transactionDate,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  dicount
ORDER BY
  dt.transactionDate,
  dt.customerId
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:43:47.833993 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:43:47.845218 [debug] [Thread-1 (]: SQL status: OK in 0.011 seconds
[0m20:43:47.857286 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:43:47.857864 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
DESCRIBE (select * from (
        select
    
      
    cast(null as VARCHAR)
 as transactionId, 
      
    cast(null as VARCHAR)
 as customerId, 
      
    cast(null as VARCHAR)
 as productId, 
      
    cast(null as VARCHAR)
 as productName, 
      
    cast(null as VARCHAR)
 as description, 
      
    cast(null as BIGINT)
 as amount, 
      
    cast(null as DOUBLE)
 as price, 
      
    cast(null as DOUBLE)
 as dicount, 
      
    cast(null as DOUBLE)
 as finalPrice, 
      
    cast(null as TIMESTAMP)
 as transactionDate
    ) as __dbt_sbq
    where false
    limit 0
)
[0m20:43:47.858981 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:43:47.868859 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.dim_transaction"
[0m20:43:47.869504 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:43:47.869791 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: BEGIN
[0m20:43:47.870385 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:47.870659 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:43:47.870924 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */

  
    
  create view "trial"."main"."dim_transaction__dbt_tmp" as (
    

WITH product AS (
  SELECT *
  FROM "trial"."main"."stg_product" 
  WHERE dbt_valid_to IS NULL
),
transactions AS (
  SELECT
    t.transactionId,
    t.customerId,
    p.productId,
    p.productName,
    p.description,
    t.amount,
    t.transactionDate,
    p.discount,
    p.price,
    p.price - (p.price * (p.discount / 100.0)) AS finalPrice,
    p.dbt_valid_from,
    p.dbt_valid_to
  FROM
    "trial"."main"."stg_transaction" t
  JOIN
    product p ON t.productId = p.productId
)

SELECT
  dt.transactionId,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  (dt.discount / 100.0) as dicount,
  SUM(dt.finalPrice) * dt.amount AS finalPrice,
  dt.transactionDate
FROM
  transactions dt
GROUP BY
  dt.transactionId,
  dt.transactionDate,
  dt.customerId,
  dt.productId,
  dt.productName,
  dt.description,
  dt.amount,
  dt.price,
  dicount
ORDER BY
  dt.transactionDate,
  dt.customerId
  );

[0m20:43:47.872042 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:43:47.875436 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:43:47.875756 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
alter view "trial"."main"."dim_transaction" rename to "dim_transaction__dbt_backup"
[0m20:43:47.876518 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:47.880021 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:43:47.880390 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
alter view "trial"."main"."dim_transaction__dbt_tmp" rename to "dim_transaction"
[0m20:43:47.881098 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:47.882325 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: COMMIT
[0m20:43:47.882600 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:43:47.882826 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: COMMIT
[0m20:43:47.887506 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:43:47.940646 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.dim_transaction"
[0m20:43:47.941255 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.dim_transaction"} */
drop view if exists "trial"."main"."dim_transaction__dbt_backup" cascade
[0m20:43:47.946954 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:43:47.948382 [debug] [Thread-1 (]: On model.dbt_duckdb_test.dim_transaction: Close
[0m20:43:47.962947 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9003138f-d083-4053-bd0d-21712ba174ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59be75c390>]}
[0m20:43:47.963613 [info ] [Thread-1 (]: 7 of 8 OK created sql view model main.dim_transaction .......................... [[32mOK[0m in 0.15s]
[0m20:43:47.964410 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.dim_transaction
[0m20:43:47.965749 [debug] [Thread-1 (]: Began running node model.dbt_duckdb_test.fct_sale
[0m20:43:47.966164 [info ] [Thread-1 (]: 8 of 8 START sql view model main.fct_sale ...................................... [RUN]
[0m20:43:47.966791 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.dbt_duckdb_test.dim_transaction, now model.dbt_duckdb_test.fct_sale)
[0m20:43:47.967180 [debug] [Thread-1 (]: Began compiling node model.dbt_duckdb_test.fct_sale
[0m20:43:47.970039 [debug] [Thread-1 (]: Writing injected SQL for node "model.dbt_duckdb_test.fct_sale"
[0m20:43:47.970565 [debug] [Thread-1 (]: Began executing node model.dbt_duckdb_test.fct_sale
[0m20:43:47.974279 [debug] [Thread-1 (]: Writing runtime sql for node "model.dbt_duckdb_test.fct_sale"
[0m20:43:47.974804 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:43:47.975079 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: BEGIN
[0m20:43:47.975558 [debug] [Thread-1 (]: Opening a new connection, currently in state closed
[0m20:43:47.981794 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m20:43:47.982188 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:43:47.982460 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.fct_sale"} */

  
  create view "trial"."main"."fct_sale__dbt_tmp" as (
    
WITH
customer_total_spend AS (
    SELECT
        scust.customerId,
        scust.customerName,
        scust.regionName,
        SUM(transactions.finalPrice) AS totalSpend
    FROM
        "trial"."main"."dim_customer" scust
    JOIN
        "trial"."main"."dim_transaction" transactions ON scust.customerId = transactions.customerId
    WHERE scust.dbt_valid_to > NOW() 
    GROUP BY
        scust.customerId,
        scust.customerName,
        scust.regionName
)

SELECT * FROM customer_total_spend
  );

[0m20:43:47.984055 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:43:47.986547 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:43:47.986884 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.fct_sale"} */
alter view "trial"."main"."fct_sale" rename to "fct_sale__dbt_backup"
[0m20:43:47.987697 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m20:43:47.990464 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:43:47.990982 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.fct_sale"} */
alter view "trial"."main"."fct_sale__dbt_tmp" rename to "fct_sale"
[0m20:43:47.991844 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:43:47.993312 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: COMMIT
[0m20:43:47.993617 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:43:47.993878 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: COMMIT
[0m20:43:47.999624 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m20:43:48.001758 [debug] [Thread-1 (]: Using duckdb connection "model.dbt_duckdb_test.fct_sale"
[0m20:43:48.002053 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: /* {"app": "dbt", "dbt_version": "1.9.1", "profile_name": "dbt_duckdb", "target_name": "dev", "node_id": "model.dbt_duckdb_test.fct_sale"} */
drop view if exists "trial"."main"."fct_sale__dbt_backup" cascade
[0m20:43:48.005990 [debug] [Thread-1 (]: SQL status: OK in 0.004 seconds
[0m20:43:48.007413 [debug] [Thread-1 (]: On model.dbt_duckdb_test.fct_sale: Close
[0m20:43:48.019274 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9003138f-d083-4053-bd0d-21712ba174ac', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59be751e50>]}
[0m20:43:48.020045 [info ] [Thread-1 (]: 8 of 8 OK created sql view model main.fct_sale ................................. [[32mOK[0m in 0.05s]
[0m20:43:48.020687 [debug] [Thread-1 (]: Finished running node model.dbt_duckdb_test.fct_sale
[0m20:43:48.022390 [debug] [MainThread]: Using duckdb connection "master"
[0m20:43:48.022891 [debug] [MainThread]: On master: BEGIN
[0m20:43:48.023396 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:43:48.030125 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m20:43:48.030487 [debug] [MainThread]: On master: COMMIT
[0m20:43:48.030721 [debug] [MainThread]: Using duckdb connection "master"
[0m20:43:48.030917 [debug] [MainThread]: On master: COMMIT
[0m20:43:48.031427 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:43:48.031710 [debug] [MainThread]: On master: Close
[0m20:43:48.033489 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:43:48.033940 [debug] [MainThread]: Connection 'list_trial_snapshots' was properly closed.
[0m20:43:48.034141 [debug] [MainThread]: Connection 'model.dbt_duckdb_test.fct_sale' was properly closed.
[0m20:43:48.034442 [info ] [MainThread]: 
[0m20:43:48.034866 [info ] [MainThread]: Finished running 1 table model, 7 view models in 0 hours 0 minutes and 0.81 seconds (0.81s).
[0m20:43:48.036201 [debug] [MainThread]: Command end result
[0m20:43:48.058041 [debug] [MainThread]: Wrote artifact WritableManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/manifest.json
[0m20:43:48.059519 [debug] [MainThread]: Wrote artifact SemanticManifest to /home/rani/apps/dbt-demo/dbt_duckdb/target/semantic_manifest.json
[0m20:43:48.065118 [debug] [MainThread]: Wrote artifact RunExecutionResult to /home/rani/apps/dbt-demo/dbt_duckdb/target/run_results.json
[0m20:43:48.065455 [info ] [MainThread]: 
[0m20:43:48.065950 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:43:48.067330 [info ] [MainThread]: 
[0m20:43:48.067838 [info ] [MainThread]: Done. PASS=8 WARN=0 ERROR=0 SKIP=0 TOTAL=8
[0m20:43:48.068803 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 1.5325725, "process_in_blocks": "784", "process_kernel_time": 0.150399, "process_mem_max_rss": "170392", "process_out_blocks": "7192", "process_user_time": 2.456528}
[0m20:43:48.069170 [debug] [MainThread]: Command `dbt run` succeeded at 20:43:48.069090 after 1.53 seconds
[0m20:43:48.069459 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59cccf27d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59ccd94fd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f59ccd95110>]}
[0m20:43:48.069743 [debug] [MainThread]: Flushing usage events
[0m20:43:50.905837 [debug] [MainThread]: An error was encountered while trying to flush usage events
